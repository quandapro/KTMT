;/*
; * Bai4.c
; *
; * Created: 10/16/2020 9:20:46 AM
; * Author: Dell
; * Viet chuong trinh bam CT1 tung ky tu 1 trong Hello World chay tu trai sang phai va ket thuc o cuoi man hinh
; * bam CT2 nguoc lai
; * ban CT3 hien HelloWorld o dong 2 man hinh
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;#define CT1 PIND.3
;#define CT2 PIND.5
;#define CT3 PIND.2
;
;unsigned char mode = 0;
;unsigned char x = 0, y = 0, len = 11, i, j;
;char* message = "Hello World";

	.DSEG
_0x3:
	.BYTE 0xC
;
;void main(void)
; 0000 0018 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0019 DDRD = 0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001A PORTD = 0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001B 
; 0000 001C lcd_init(16); //8
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001D lcd_clear();
;PCODE: $00000014 VOL: 0
; 0000 001E while (1)
;PCODE: $00000015 VOL: 0
; 0000 001F     {
; 0000 0020     if (CT1 == 0 || mode == 1)
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0021         {
; 0000 0022             delay_ms(250);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0023             for (i = 0; i <= 15; i++)
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0024                 {
; 0000 0025                     lcd_gotoxy(i, y);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0026                     lcd_putchar(' ');
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0027                     for (j = 0; j < len; j++)
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0028                     {
; 0000 0029                         // Pos of message[j] = x - j
; 0000 002A                         if (x - j == i)
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002B                         {
; 0000 002C                             lcd_gotoxy(i, y);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002D                             lcd_putchar(message[len - j - 1]);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002E                         }
; 0000 002F                     }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0030                 }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0031             x++;
;PCODE: $00000054 VOL: 0
; 0000 0032             if (x == 16 + len - 1)
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0033                 x = 0;
;PCODE: $0000005C VOL: 0
; 0000 0034             mode = 1;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0035         }
; 0000 0036     if (CT2 == 0 || mode == 2)
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0037         {
; 0000 0038             delay_ms(250);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0039             for (i = 0; i <= x; i++)
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 003A                 {
; 0000 003B 
; 0000 003C                 }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 003D             if (x == 0)
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003E                 x = 15;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 003F             else
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0040                 x--;
;PCODE: $0000007D VOL: 0
; 0000 0041             mode = 2;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0042             //_lcd_write_data(0x18);
; 0000 0043         }
; 0000 0044     if (CT3 == 0)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0045         {
; 0000 0046             y = ~y;
;PCODE: $00000085 VOL: 0
; 0000 0047         }
; 0000 0048     }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0049 }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
