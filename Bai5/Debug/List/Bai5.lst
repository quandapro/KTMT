
AVRASM ver. 2.1.30  D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm Fri Oct 23 10:56:04 2020

D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1094): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R4
                 	.DEF _count_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00004f 0000      	.DB  0x0,0x0
                 
                 _0x0:
000050 6425
D:\Workspace\KTMT\Bai5\Debug\List\Bai5.asm(1150): warning: .cseg .db misalignment - padding zero byte
000051 0000      	.DB  0x25,0x64,0x0
                 _0x2000003:
000052 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000053 0002      	.DW  0x02
000054 0004      	.DW  0x04
000055 009e      	.DW  __REG_VARS*2
                 
000056 0002      	.DW  0x02
000057 050a      	.DW  __base_y_G100
000058 00a4      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000059 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005a 94f8      	CLI
00005b 27ee      	CLR  R30
00005c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005d e0f1      	LDI  R31,1
00005e bff5      	OUT  MCUCR,R31
00005f bfe5      	OUT  MCUCR,R30
000060 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000062 e08d      	LDI  R24,(14-2)+1
000063 e0a2      	LDI  R26,2
000064 27bb      	CLR  R27
                 __CLEAR_REG:
000065 93ed      	ST   X+,R30
000066 958a      	DEC  R24
000067 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000068 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000069 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006a e0a0      	LDI  R26,LOW(__SRAM_START)
00006b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00006c 93ed      	ST   X+,R30
00006d 9701      	SBIW R24,1
00006e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006f eae6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000070 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000071 9185      	LPM  R24,Z+
000072 9195      	LPM  R25,Z+
000073 9700      	SBIW R24,0
000074 f061      	BREQ __GLOBAL_INI_END
000075 91a5      	LPM  R26,Z+
000076 91b5      	LPM  R27,Z+
000077 9005      	LPM  R0,Z+
000078 9015      	LPM  R1,Z+
000079 01bf      	MOVW R22,R30
00007a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007b 9005      	LPM  R0,Z+
00007c 920d      	ST   X+,R0
00007d 9701      	SBIW R24,1
00007e f7e1      	BRNE __GLOBAL_INI_LOOP
00007f 01fb      	MOVW R30,R22
000080 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000081 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000082 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000083 bfed      	OUT  SPL,R30
000084 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000085 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000086 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000087 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000088 940c 008a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Bai5.c
                 ; *
                 ; * Created: 10/23/2020 9:32:34 AM
                 ; * Author: Dell
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;#define led PORTE.5
                 ;#define CT1 PIND.3
                 ;#define CT2 PIND.5
                 ;#define CT3 PIND.2
                 ;#define sang 0
                 ;#define toi 1
                 ;
                 ;int count = 0;
                 ;unsigned char buff[10];
                 ;
                 ;void main(void)
                 ; 0000 0018 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0019 DDRD = 0x00;
00008a e0e0      	LDI  R30,LOW(0)
00008b bbe1      	OUT  0x11,R30
                 ; 0000 001A DDRE = 0x20;
00008c e2e0      	LDI  R30,LOW(32)
00008d b9e2      	OUT  0x2,R30
                 ; 0000 001B PORTE = 0x20;
00008e b9e3      	OUT  0x3,R30
                 ; 0000 001C PORTD = 0xFF;
00008f efef      	LDI  R30,LOW(255)
000090 bbe2      	OUT  0x12,R30
                 ; 0000 001D lcd_init(16);
000091 e1a0      	LDI  R26,LOW(16)
000092 d0ae      	RCALL _lcd_init
                 ; 0000 001E lcd_clear();
000093 d07b      	RCALL _lcd_clear
                 ; 0000 001F while (1)
                 _0x3:
                 ; 0000 0020     {
                 ; 0000 0021     // Please write your application code here
                 ; 0000 0022 
                 ; 0000 0023     if (CT1 == 0)
000094 9983      	SBIC 0x10,3
000095 c00b      	RJMP _0x6
                 ; 0000 0024         {
                 ; 0000 0025            while (1)
                 _0x7:
                 ; 0000 0026            {
                 ; 0000 0027                 if (CT2 == 0)
000096 9985      	SBIC 0x10,5
000097 c008      	RJMP _0xA
                 ; 0000 0028                 {
                 ; 0000 0029                     count++;
000098 01f2      	MOVW R30,R4
000099 9631      	ADIW R30,1
00009a 012f      	MOVW R4,R30
                 ; 0000 002A                     delay_ms(250);
00009b efaa      	LDI  R26,LOW(250)
00009c e0b0      	LDI  R27,0
00009d 940e 036b 	CALL _delay_ms
                 ; 0000 002B                     break;
00009f c001      	RJMP _0x9
                 ; 0000 002C                 }
                 ; 0000 002D            }
                 _0xA:
0000a0 cff5      	RJMP _0x7
                 _0x9:
                 ; 0000 002E         }
                 ; 0000 002F     if (CT2 == 0)
                 _0x6:
0000a1 9985      	SBIC 0x10,5
0000a2 c00b      	RJMP _0xB
                 ; 0000 0030         {
                 ; 0000 0031             while (1)
                 _0xC:
                 ; 0000 0032             {
                 ; 0000 0033                 if (CT1 == 0)
0000a3 9983      	SBIC 0x10,3
0000a4 c008      	RJMP _0xF
                 ; 0000 0034                 {
                 ; 0000 0035                     count--;
0000a5 01f2      	MOVW R30,R4
0000a6 9731      	SBIW R30,1
0000a7 012f      	MOVW R4,R30
                 ; 0000 0036                     delay_ms(250);
0000a8 efaa      	LDI  R26,LOW(250)
0000a9 e0b0      	LDI  R27,0
0000aa 940e 036b 	CALL _delay_ms
                 ; 0000 0037                     break;
0000ac c001      	RJMP _0xE
                 ; 0000 0038                 }
                 ; 0000 0039            }
                 _0xF:
0000ad cff5      	RJMP _0xC
                 _0xE:
                 ; 0000 003A 
                 ; 0000 003B         }
                 ; 0000 003C     if (count <= 0)
                 _0xB:
0000ae 2400      	CLR  R0
0000af 1404      	CP   R0,R4
0000b0 0405      	CPC  R0,R5
0000b1 f024      	BRLT _0x10
                 ; 0000 003D     {
                 ; 0000 003E         count = 0;
0000b2 2444      	CLR  R4
0000b3 2455      	CLR  R5
                 ; 0000 003F         led = toi;
0000b4 9a1d      	SBI  0x3,5
                 ; 0000 0040     }
                 ; 0000 0041     else
0000b5 c001      	RJMP _0x13
                 _0x10:
                 ; 0000 0042         led = sang;
0000b6 981d      	CBI  0x3,5
                 ; 0000 0043 
                 ; 0000 0044     lcd_gotoxy(0, 0);
                 _0x13:
0000b7 e0e0      	LDI  R30,LOW(0)
0000b8 93ea      	ST   -Y,R30
0000b9 e0a0      	LDI  R26,LOW(0)
0000ba d047      	RCALL _lcd_gotoxy
                 ; 0000 0045     sprintf(buff, "%d", count);
0000bb e0e0      	LDI  R30,LOW(_buff)
0000bc e0f5      	LDI  R31,HIGH(_buff)
0000bd 93fa      	ST   -Y,R31
0000be 93ea      	ST   -Y,R30
                +
0000bf eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
0000c3 01f2      	MOVW R30,R4
0000c4 940e 037d 	CALL __CWD1
0000c6 940e 038a 	CALL __PUTPARD1
0000c8 e084      	LDI  R24,4
0000c9 940e 02e4 	CALL _sprintf
0000cb 9628      	ADIW R28,8
                 ; 0000 0046     lcd_puts(buff);
0000cc e0a0      	LDI  R26,LOW(_buff)
0000cd e0b5      	LDI  R27,HIGH(_buff)
0000ce d061      	RCALL _lcd_puts
                 ; 0000 0047 
                 ; 0000 0048     }
0000cf cfc4      	RJMP _0x3
                 ; 0000 0049 }
                 _0x16:
0000d0 cfff      	RJMP _0x16
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000d1 93aa      	ST   -Y,R26
0000d2 81e8      	LD   R30,Y
0000d3 71e0      	ANDI R30,LOW(0x10)
0000d4 f011      	BREQ _0x2000004
0000d5 9adb      	SBI  0x1B,3
0000d6 c001      	RJMP _0x2000005
                 _0x2000004:
0000d7 98db      	CBI  0x1B,3
                 _0x2000005:
0000d8 81e8      	LD   R30,Y
0000d9 72e0      	ANDI R30,LOW(0x20)
0000da f011      	BREQ _0x2000006
0000db 9ada      	SBI  0x1B,2
0000dc c001      	RJMP _0x2000007
                 _0x2000006:
0000dd 98da      	CBI  0x1B,2
                 _0x2000007:
0000de 81e8      	LD   R30,Y
0000df 74e0      	ANDI R30,LOW(0x40)
0000e0 f011      	BREQ _0x2000008
0000e1 9ad9      	SBI  0x1B,1
0000e2 c001      	RJMP _0x2000009
                 _0x2000008:
0000e3 98d9      	CBI  0x1B,1
                 _0x2000009:
0000e4 81e8      	LD   R30,Y
0000e5 78e0      	ANDI R30,LOW(0x80)
0000e6 f011      	BREQ _0x200000A
0000e7 9ad8      	SBI  0x1B,0
0000e8 c001      	RJMP _0x200000B
                 _0x200000A:
0000e9 98d8      	CBI  0x1B,0
                 _0x200000B:
                +
0000ea e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000eb 958a     +DEC R24
0000ec f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ed 9adc      	SBI  0x1B,4
                +
0000ee e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ef 958a     +DEC R24
0000f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000f1 98dc      	CBI  0x1B,4
                +
0000f2 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000f3 958a     +DEC R24
0000f4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000f5 c078      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000f6 93aa      	ST   -Y,R26
0000f7 81a8      	LD   R26,Y
0000f8 dfd8      	RCALL __lcd_write_nibble_G100
0000f9 81e8          ld    r30,y
0000fa 95e2          swap  r30
0000fb 83e8          st    y,r30
0000fc 81a8      	LD   R26,Y
0000fd dfd3      	RCALL __lcd_write_nibble_G100
                +
0000fe e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000ff 958a     +DEC R24
000100 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000101 c06c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000102 93aa      	ST   -Y,R26
000103 81e8      	LD   R30,Y
000104 e0f0      	LDI  R31,0
000105 5fe6      	SUBI R30,LOW(-__base_y_G100)
000106 4ffa      	SBCI R31,HIGH(-__base_y_G100)
000107 81e0      	LD   R30,Z
000108 81a9      	LDD  R26,Y+1
000109 0fae      	ADD  R26,R30
00010a dfeb      	RCALL __lcd_write_data
00010b 8079      	LDD  R7,Y+1
00010c 8068      	LDD  R6,Y+0
00010d 9622      	ADIW R28,2
00010e 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00010f e0a2      	LDI  R26,LOW(2)
000110 940e 0331 	CALL SUBOPT_0x0
000112 e0ac      	LDI  R26,LOW(12)
000113 dfe2      	RCALL __lcd_write_data
000114 e0a1      	LDI  R26,LOW(1)
000115 940e 0331 	CALL SUBOPT_0x0
000117 e0e0      	LDI  R30,LOW(0)
000118 2e6e      	MOV  R6,R30
000119 2e7e      	MOV  R7,R30
00011a 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00011b 93aa      	ST   -Y,R26
00011c 81a8      	LD   R26,Y
00011d 30aa      	CPI  R26,LOW(0xA)
00011e f011      	BREQ _0x2000011
00011f 1479      	CP   R7,R9
000120 f048      	BRLO _0x2000010
                 _0x2000011:
000121 e0e0      	LDI  R30,LOW(0)
000122 93ea      	ST   -Y,R30
000123 9463      	INC  R6
000124 2da6      	MOV  R26,R6
000125 dfdc      	RCALL _lcd_gotoxy
000126 81a8      	LD   R26,Y
000127 30aa      	CPI  R26,LOW(0xA)
000128 f409      	BRNE _0x2000013
000129 c044      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
00012a 9473      	INC  R7
00012b 9ade      	SBI  0x1B,6
00012c 81a8      	LD   R26,Y
00012d dfc8      	RCALL __lcd_write_data
00012e 98de      	CBI  0x1B,6
00012f c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000130 93ba      	ST   -Y,R27
000131 93aa      	ST   -Y,R26
000132 931a      	ST   -Y,R17
                 _0x2000014:
000133 81a9      	LDD  R26,Y+1
000134 81ba      	LDD  R27,Y+1+1
000135 91ed      	LD   R30,X+
000136 83a9      	STD  Y+1,R26
000137 83ba      	STD  Y+1+1,R27
000138 2f1e      	MOV  R17,R30
000139 30e0      	CPI  R30,0
00013a f019      	BREQ _0x2000016
00013b 2fa1      	MOV  R26,R17
00013c dfde      	RCALL _lcd_putchar
00013d cff5      	RJMP _0x2000014
                 _0x2000016:
00013e 8118      	LDD  R17,Y+0
00013f 9623      	ADIW R28,3
000140 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000141 93aa      	ST   -Y,R26
000142 9ad3      	SBI  0x1A,3
000143 9ad2      	SBI  0x1A,2
000144 9ad1      	SBI  0x1A,1
000145 9ad0      	SBI  0x1A,0
000146 9ad4      	SBI  0x1A,4
000147 9ad6      	SBI  0x1A,6
000148 9ad5      	SBI  0x1A,5
000149 98dc      	CBI  0x1B,4
00014a 98de      	CBI  0x1B,6
00014b 98dd      	CBI  0x1B,5
00014c 8098      	LDD  R9,Y+0
00014d 81e8      	LD   R30,Y
00014e 58e0      	SUBI R30,-LOW(128)
                +
00014f 93e0 050c+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000151 81e8      	LD   R30,Y
000152 54e0      	SUBI R30,-LOW(192)
                +
000153 93e0 050d+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000155 e1a4      	LDI  R26,LOW(20)
000156 e0b0      	LDI  R27,0
000157 940e 036b 	CALL _delay_ms
000159 940e 0337 	CALL SUBOPT_0x1
00015b 940e 0337 	CALL SUBOPT_0x1
00015d 940e 0337 	CALL SUBOPT_0x1
00015f e2a0      	LDI  R26,LOW(32)
000160 df70      	RCALL __lcd_write_nibble_G100
                +
000161 ec88     +LDI R24 , LOW ( 200 )
000162 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000163 9701     +SBIW R24 , 1
000164 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000165 e2a8      	LDI  R26,LOW(40)
000166 df8f      	RCALL __lcd_write_data
000167 e0a4      	LDI  R26,LOW(4)
000168 df8d      	RCALL __lcd_write_data
000169 e8a5      	LDI  R26,LOW(133)
00016a df8b      	RCALL __lcd_write_data
00016b e0a6      	LDI  R26,LOW(6)
00016c df89      	RCALL __lcd_write_data
00016d dfa1      	RCALL _lcd_clear
                 _0x2080002:
00016e 9621      	ADIW R28,1
00016f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000170 93ba      	ST   -Y,R27
000171 93aa      	ST   -Y,R26
000172 931a      	ST   -Y,R17
000173 930a      	ST   -Y,R16
000174 81aa      	LDD  R26,Y+2
000175 81bb      	LDD  R27,Y+2+1
000176 9612      	ADIW R26,2
000177 940e 0382 	CALL __GETW1P
000179 9730      	SBIW R30,0
00017a f159      	BREQ _0x2020010
00017b 81aa      	LDD  R26,Y+2
00017c 81bb      	LDD  R27,Y+2+1
00017d 9614      	ADIW R26,4
00017e 940e 0382 	CALL __GETW1P
000180 018f      	MOVW R16,R30
000181 9730      	SBIW R30,0
000182 f061      	BREQ _0x2020012
                +
000183 3002     +CPI R16 , LOW ( 2 )
000184 e0e0     +LDI R30 , HIGH ( 2 )
000185 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000186 f098      	BRLO _0x2020013
000187 01f8      	MOVW R30,R16
000188 9731      	SBIW R30,1
000189 018f      	MOVW R16,R30
                +
00018a 81aa     +LDD R26 , Y + 2
00018b 81bb     +LDD R27 , Y + 2 + 1
00018c 9614     +ADIW R26 , 4
00018d 93ed     +ST X + , R30
00018e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00018f 81aa      	LDD  R26,Y+2
000190 81bb      	LDD  R27,Y+2+1
000191 9612      	ADIW R26,2
000192 91ed      	LD   R30,X+
000193 91fd      	LD   R31,X+
000194 9631      	ADIW R30,1
000195 93fe      	ST   -X,R31
000196 93ee      	ST   -X,R30
000197 9731      	SBIW R30,1
000198 81ac      	LDD  R26,Y+4
000199 83a0      	STD  Z+0,R26
                 _0x2020013:
00019a 81aa      	LDD  R26,Y+2
00019b 81bb      	LDD  R27,Y+2+1
00019c 940e 0382 	CALL __GETW1P
00019e 23ff      	TST  R31
00019f f02a      	BRMI _0x2020014
0001a0 91ed      	LD   R30,X+
0001a1 91fd      	LD   R31,X+
0001a2 9631      	ADIW R30,1
0001a3 93fe      	ST   -X,R31
0001a4 93ee      	ST   -X,R30
                 _0x2020014:
0001a5 c006      	RJMP _0x2020015
                 _0x2020010:
0001a6 81aa      	LDD  R26,Y+2
0001a7 81bb      	LDD  R27,Y+2+1
0001a8 efef      	LDI  R30,LOW(65535)
0001a9 efff      	LDI  R31,HIGH(65535)
0001aa 93ed      	ST   X+,R30
0001ab 93fc      	ST   X,R31
                 _0x2020015:
0001ac 8119      	LDD  R17,Y+1
0001ad 8108      	LDD  R16,Y+0
0001ae 9625      	ADIW R28,5
0001af 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001b0 93ba      	ST   -Y,R27
0001b1 93aa      	ST   -Y,R26
0001b2 9726      	SBIW R28,6
0001b3 940e 038f 	CALL __SAVELOCR6
0001b5 e010      	LDI  R17,0
0001b6 85ac      	LDD  R26,Y+12
0001b7 85bd      	LDD  R27,Y+12+1
0001b8 e0e0      	LDI  R30,LOW(0)
0001b9 e0f0      	LDI  R31,HIGH(0)
0001ba 93ed      	ST   X+,R30
0001bb 93fc      	ST   X,R31
                 _0x2020016:
0001bc 89ea      	LDD  R30,Y+18
0001bd 89fb      	LDD  R31,Y+18+1
0001be 9631      	ADIW R30,1
0001bf 8bea      	STD  Y+18,R30
0001c0 8bfb      	STD  Y+18+1,R31
0001c1 9731      	SBIW R30,1
0001c2 91e4      	LPM  R30,Z
0001c3 2f2e      	MOV  R18,R30
0001c4 30e0      	CPI  R30,0
0001c5 f409      	BRNE PC+2
0001c6 c115      	RJMP _0x2020018
0001c7 2fe1      	MOV  R30,R17
0001c8 30e0      	CPI  R30,0
0001c9 f439      	BRNE _0x202001C
0001ca 3225      	CPI  R18,37
0001cb f411      	BRNE _0x202001D
0001cc e011      	LDI  R17,LOW(1)
0001cd c002      	RJMP _0x202001E
                 _0x202001D:
0001ce 940e 033f 	CALL SUBOPT_0x2
                 _0x202001E:
0001d0 c10a      	RJMP _0x202001B
                 _0x202001C:
0001d1 30e1      	CPI  R30,LOW(0x1)
0001d2 f4a9      	BRNE _0x202001F
0001d3 3225      	CPI  R18,37
0001d4 f419      	BRNE _0x2020020
0001d5 940e 033f 	CALL SUBOPT_0x2
0001d7 c102      	RJMP _0x20200CC
                 _0x2020020:
0001d8 e012      	LDI  R17,LOW(2)
0001d9 e040      	LDI  R20,LOW(0)
0001da e000      	LDI  R16,LOW(0)
0001db 322d      	CPI  R18,45
0001dc f411      	BRNE _0x2020021
0001dd e001      	LDI  R16,LOW(1)
0001de c0fc      	RJMP _0x202001B
                 _0x2020021:
0001df 322b      	CPI  R18,43
0001e0 f411      	BRNE _0x2020022
0001e1 e24b      	LDI  R20,LOW(43)
0001e2 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001e3 3220      	CPI  R18,32
0001e4 f411      	BRNE _0x2020023
0001e5 e240      	LDI  R20,LOW(32)
0001e6 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001e7 c002      	RJMP _0x2020024
                 _0x202001F:
0001e8 30e2      	CPI  R30,LOW(0x2)
0001e9 f439      	BRNE _0x2020025
                 _0x2020024:
0001ea e050      	LDI  R21,LOW(0)
0001eb e013      	LDI  R17,LOW(3)
0001ec 3320      	CPI  R18,48
0001ed f411      	BRNE _0x2020026
0001ee 6800      	ORI  R16,LOW(128)
0001ef c0eb      	RJMP _0x202001B
                 _0x2020026:
0001f0 c003      	RJMP _0x2020027
                 _0x2020025:
0001f1 30e3      	CPI  R30,LOW(0x3)
0001f2 f009      	BREQ PC+2
0001f3 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001f4 3320      	CPI  R18,48
0001f5 f010      	BRLO _0x202002A
0001f6 332a      	CPI  R18,58
0001f7 f008      	BRLO _0x202002B
                 _0x202002A:
0001f8 c007      	RJMP _0x2020029
                 _0x202002B:
0001f9 e0aa      	LDI  R26,LOW(10)
0001fa 9f5a      	MUL  R21,R26
0001fb 2d50      	MOV  R21,R0
0001fc 2fe2      	MOV  R30,R18
0001fd 53e0      	SUBI R30,LOW(48)
0001fe 0f5e      	ADD  R21,R30
0001ff c0db      	RJMP _0x202001B
                 _0x2020029:
000200 2fe2      	MOV  R30,R18
000201 36e3      	CPI  R30,LOW(0x63)
000202 f449      	BRNE _0x202002F
000203 940e 0346 	CALL SUBOPT_0x3
000205 89e8      	LDD  R30,Y+16
000206 89f9      	LDD  R31,Y+16+1
000207 81a4      	LDD  R26,Z+4
000208 93aa      	ST   -Y,R26
000209 940e 034c 	CALL SUBOPT_0x4
00020b c0ce      	RJMP _0x2020030
                 _0x202002F:
00020c 37e3      	CPI  R30,LOW(0x73)
00020d f441      	BRNE _0x2020032
00020e 940e 0346 	CALL SUBOPT_0x3
000210 940e 0352 	CALL SUBOPT_0x5
000212 940e 0318 	CALL _strlen
000214 2f1e      	MOV  R17,R30
000215 c00a      	RJMP _0x2020033
                 _0x2020032:
000216 37e0      	CPI  R30,LOW(0x70)
000217 f461      	BRNE _0x2020035
000218 940e 0346 	CALL SUBOPT_0x3
00021a 940e 0352 	CALL SUBOPT_0x5
00021c 940e 0324 	CALL _strlenf
00021e 2f1e      	MOV  R17,R30
00021f 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000220 6002      	ORI  R16,LOW(2)
000221 770f      	ANDI R16,LOW(127)
000222 e030      	LDI  R19,LOW(0)
000223 c034      	RJMP _0x2020036
                 _0x2020035:
000224 36e4      	CPI  R30,LOW(0x64)
000225 f011      	BREQ _0x2020039
000226 36e9      	CPI  R30,LOW(0x69)
000227 f411      	BRNE _0x202003A
                 _0x2020039:
000228 6004      	ORI  R16,LOW(4)
000229 c002      	RJMP _0x202003B
                 _0x202003A:
00022a 37e5      	CPI  R30,LOW(0x75)
00022b f431      	BRNE _0x202003C
                 _0x202003B:
00022c e8ec      	LDI  R30,LOW(_tbl10_G101*2)
00022d e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00022e 83ee      	STD  Y+6,R30
00022f 83ff      	STD  Y+6+1,R31
000230 e015      	LDI  R17,LOW(5)
000231 c00c      	RJMP _0x202003D
                 _0x202003C:
000232 35e8      	CPI  R30,LOW(0x58)
000233 f411      	BRNE _0x202003F
000234 6008      	ORI  R16,LOW(8)
000235 c003      	RJMP _0x2020040
                 _0x202003F:
000236 37e8      	CPI  R30,LOW(0x78)
000237 f009      	BREQ PC+2
000238 c0a1      	RJMP _0x2020071
                 _0x2020040:
000239 e9e6      	LDI  R30,LOW(_tbl16_G101*2)
00023a e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00023b 83ee      	STD  Y+6,R30
00023c 83ff      	STD  Y+6+1,R31
00023d e014      	LDI  R17,LOW(4)
                 _0x202003D:
00023e ff02      	SBRS R16,2
00023f c014      	RJMP _0x2020042
000240 940e 0346 	CALL SUBOPT_0x3
000242 940e 035c 	CALL SUBOPT_0x6
000244 85ab      	LDD  R26,Y+11
000245 23aa      	TST  R26
000246 f43a      	BRPL _0x2020043
000247 85ea      	LDD  R30,Y+10
000248 85fb      	LDD  R31,Y+10+1
000249 940e 0379 	CALL __ANEGW1
00024b 87ea      	STD  Y+10,R30
00024c 87fb      	STD  Y+10+1,R31
00024d e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00024e 3040      	CPI  R20,0
00024f f011      	BREQ _0x2020044
000250 5f1f      	SUBI R17,-LOW(1)
000251 c001      	RJMP _0x2020045
                 _0x2020044:
000252 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000253 c004      	RJMP _0x2020046
                 _0x2020042:
000254 940e 0346 	CALL SUBOPT_0x3
000256 940e 035c 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000258 fd00      	SBRC R16,0
000259 c011      	RJMP _0x2020047
                 _0x2020048:
00025a 1715      	CP   R17,R21
00025b f478      	BRSH _0x202004A
00025c ff07      	SBRS R16,7
00025d c008      	RJMP _0x202004B
00025e ff02      	SBRS R16,2
00025f c004      	RJMP _0x202004C
000260 7f0b      	ANDI R16,LOW(251)
000261 2f24      	MOV  R18,R20
000262 5011      	SUBI R17,LOW(1)
000263 c001      	RJMP _0x202004D
                 _0x202004C:
000264 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000265 c001      	RJMP _0x202004E
                 _0x202004B:
000266 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000267 940e 033f 	CALL SUBOPT_0x2
000269 5051      	SUBI R21,LOW(1)
00026a cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00026b 2f31      	MOV  R19,R17
00026c ff01      	SBRS R16,1
00026d c017      	RJMP _0x202004F
                 _0x2020050:
00026e 3030      	CPI  R19,0
00026f f0a1      	BREQ _0x2020052
000270 ff03      	SBRS R16,3
000271 c006      	RJMP _0x2020053
000272 81ee      	LDD  R30,Y+6
000273 81ff      	LDD  R31,Y+6+1
000274 9125      	LPM  R18,Z+
000275 83ee      	STD  Y+6,R30
000276 83ff      	STD  Y+6+1,R31
000277 c005      	RJMP _0x2020054
                 _0x2020053:
000278 81ae      	LDD  R26,Y+6
000279 81bf      	LDD  R27,Y+6+1
00027a 912d      	LD   R18,X+
00027b 83ae      	STD  Y+6,R26
00027c 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00027d 940e 033f 	CALL SUBOPT_0x2
00027f 3050      	CPI  R21,0
000280 f009      	BREQ _0x2020055
000281 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000282 5031      	SUBI R19,LOW(1)
000283 cfea      	RJMP _0x2020050
                 _0x2020052:
000284 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000285 e320      	LDI  R18,LOW(48)
000286 81ee      	LDD  R30,Y+6
000287 81ff      	LDD  R31,Y+6+1
000288 940e 0386 	CALL __GETW1PF
00028a 87e8      	STD  Y+8,R30
00028b 87f9      	STD  Y+8+1,R31
00028c 81ee      	LDD  R30,Y+6
00028d 81ff      	LDD  R31,Y+6+1
00028e 9632      	ADIW R30,2
00028f 83ee      	STD  Y+6,R30
000290 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000291 85e8      	LDD  R30,Y+8
000292 85f9      	LDD  R31,Y+8+1
000293 85aa      	LDD  R26,Y+10
000294 85bb      	LDD  R27,Y+10+1
000295 17ae      	CP   R26,R30
000296 07bf      	CPC  R27,R31
000297 f050      	BRLO _0x202005C
000298 5f2f      	SUBI R18,-LOW(1)
000299 85a8      	LDD  R26,Y+8
00029a 85b9      	LDD  R27,Y+8+1
00029b 85ea      	LDD  R30,Y+10
00029c 85fb      	LDD  R31,Y+10+1
00029d 1bea      	SUB  R30,R26
00029e 0bfb      	SBC  R31,R27
00029f 87ea      	STD  Y+10,R30
0002a0 87fb      	STD  Y+10+1,R31
0002a1 cfef      	RJMP _0x202005A
                 _0x202005C:
0002a2 332a      	CPI  R18,58
0002a3 f028      	BRLO _0x202005D
0002a4 ff03      	SBRS R16,3
0002a5 c002      	RJMP _0x202005E
0002a6 5f29      	SUBI R18,-LOW(7)
0002a7 c001      	RJMP _0x202005F
                 _0x202005E:
0002a8 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002a9 fd04      	SBRC R16,4
0002aa c01a      	RJMP _0x2020061
0002ab 3321      	CPI  R18,49
0002ac f420      	BRSH _0x2020063
0002ad 85a8      	LDD  R26,Y+8
0002ae 85b9      	LDD  R27,Y+8+1
0002af 9711      	SBIW R26,1
0002b0 f409      	BRNE _0x2020062
                 _0x2020063:
0002b1 c009      	RJMP _0x20200CD
                 _0x2020062:
0002b2 1753      	CP   R21,R19
0002b3 f010      	BRLO _0x2020067
0002b4 ff00      	SBRS R16,0
0002b5 c001      	RJMP _0x2020068
                 _0x2020067:
0002b6 c013      	RJMP _0x2020066
                 _0x2020068:
0002b7 e220      	LDI  R18,LOW(32)
0002b8 ff07      	SBRS R16,7
0002b9 c00b      	RJMP _0x2020069
0002ba e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002bb 6100      	ORI  R16,LOW(16)
0002bc ff02      	SBRS R16,2
0002bd c007      	RJMP _0x202006A
0002be 7f0b      	ANDI R16,LOW(251)
0002bf 934a      	ST   -Y,R20
0002c0 940e 034c 	CALL SUBOPT_0x4
0002c2 3050      	CPI  R21,0
0002c3 f009      	BREQ _0x202006B
0002c4 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002c5 940e 033f 	CALL SUBOPT_0x2
0002c7 3050      	CPI  R21,0
0002c8 f009      	BREQ _0x202006C
0002c9 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002ca 5031      	SUBI R19,LOW(1)
0002cb 85a8      	LDD  R26,Y+8
0002cc 85b9      	LDD  R27,Y+8+1
0002cd 9712      	SBIW R26,2
0002ce f008      	BRLO _0x2020059
0002cf cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002d0 ff00      	SBRS R16,0
0002d1 c008      	RJMP _0x202006D
                 _0x202006E:
0002d2 3050      	CPI  R21,0
0002d3 f031      	BREQ _0x2020070
0002d4 5051      	SUBI R21,LOW(1)
0002d5 e2e0      	LDI  R30,LOW(32)
0002d6 93ea      	ST   -Y,R30
0002d7 940e 034c 	CALL SUBOPT_0x4
0002d9 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002da e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002db cee0      	RJMP _0x2020016
                 _0x2020018:
0002dc 85ac      	LDD  R26,Y+12
0002dd 85bd      	LDD  R27,Y+12+1
0002de 940e 0382 	CALL __GETW1P
0002e0 940e 0396 	CALL __LOADLOCR6
0002e2 9664      	ADIW R28,20
0002e3 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002e4 92ff      	PUSH R15
0002e5 2ef8      	MOV  R15,R24
0002e6 9726      	SBIW R28,6
0002e7 940e 0391 	CALL __SAVELOCR4
0002e9 940e 0364 	CALL SUBOPT_0x7
0002eb 9730      	SBIW R30,0
0002ec f419      	BRNE _0x2020072
0002ed efef      	LDI  R30,LOW(65535)
0002ee efff      	LDI  R31,HIGH(65535)
0002ef c023      	RJMP _0x2080001
                 _0x2020072:
0002f0 01de      	MOVW R26,R28
0002f1 9616      	ADIW R26,6
0002f2 940e 0375 	CALL __ADDW2R15
0002f4 018d      	MOVW R16,R26
0002f5 940e 0364 	CALL SUBOPT_0x7
0002f7 83ee      	STD  Y+6,R30
0002f8 83ff      	STD  Y+6+1,R31
0002f9 e0e0      	LDI  R30,LOW(0)
0002fa 87e8      	STD  Y+8,R30
0002fb 87e9      	STD  Y+8+1,R30
0002fc 01de      	MOVW R26,R28
0002fd 961a      	ADIW R26,10
0002fe 940e 0375 	CALL __ADDW2R15
000300 940e 0382 	CALL __GETW1P
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 931a      	ST   -Y,R17
000305 930a      	ST   -Y,R16
000306 e7e0      	LDI  R30,LOW(_put_buff_G101)
000307 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000308 93fa      	ST   -Y,R31
000309 93ea      	ST   -Y,R30
00030a 01de      	MOVW R26,R28
00030b 961a      	ADIW R26,10
00030c dea3      	RCALL __print_G101
00030d 019f      	MOVW R18,R30
00030e 81ae      	LDD  R26,Y+6
00030f 81bf      	LDD  R27,Y+6+1
000310 e0e0      	LDI  R30,LOW(0)
000311 93ec      	ST   X,R30
000312 01f9      	MOVW R30,R18
                 _0x2080001:
000313 940e 0398 	CALL __LOADLOCR4
000315 962a      	ADIW R28,10
000316 90ff      	POP  R15
000317 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000318 93ba      	ST   -Y,R27
000319 93aa      	ST   -Y,R26
00031a 91a9          ld   r26,y+
00031b 91b9          ld   r27,y+
00031c 27ee          clr  r30
00031d 27ff          clr  r31
                 strlen0:
00031e 916d          ld   r22,x+
00031f 2366          tst  r22
000320 f011          breq strlen1
000321 9631          adiw r30,1
000322 cffb          rjmp strlen0
                 strlen1:
000323 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000324 93ba      	ST   -Y,R27
000325 93aa      	ST   -Y,R26
000326 27aa          clr  r26
000327 27bb          clr  r27
000328 91e9          ld   r30,y+
000329 91f9          ld   r31,y+
                 strlenf0:
00032a 9005      	lpm  r0,z+
00032b 2000          tst  r0
00032c f011          breq strlenf1
00032d 9611          adiw r26,1
00032e cffb          rjmp strlenf0
                 strlenf1:
00032f 01fd          movw r30,r26
000330 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _buff:
000500           	.BYTE 0xA
                 __base_y_G100:
00050a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000331 940e 00f6 	CALL __lcd_write_data
000333 e0a3      	LDI  R26,LOW(3)
000334 e0b0      	LDI  R27,0
000335 940c 036b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000337 e3a0      	LDI  R26,LOW(48)
000338 940e 00d1 	CALL __lcd_write_nibble_G100
                +
00033a ec88     +LDI R24 , LOW ( 200 )
00033b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00033c 9701     +SBIW R24 , 1
00033d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00033e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
00033f 932a      	ST   -Y,R18
000340 85ad      	LDD  R26,Y+13
000341 85be      	LDD  R27,Y+13+1
000342 85ef      	LDD  R30,Y+15
000343 89f8      	LDD  R31,Y+15+1
000344 9509      	ICALL
000345 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000346 89e8      	LDD  R30,Y+16
000347 89f9      	LDD  R31,Y+16+1
000348 9734      	SBIW R30,4
000349 8be8      	STD  Y+16,R30
00034a 8bf9      	STD  Y+16+1,R31
00034b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00034c 85ad      	LDD  R26,Y+13
00034d 85be      	LDD  R27,Y+13+1
00034e 85ef      	LDD  R30,Y+15
00034f 89f8      	LDD  R31,Y+15+1
000350 9509      	ICALL
000351 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000352 89a8      	LDD  R26,Y+16
000353 89b9      	LDD  R27,Y+16+1
000354 9614      	ADIW R26,4
000355 940e 0382 	CALL __GETW1P
000357 83ee      	STD  Y+6,R30
000358 83ff      	STD  Y+6+1,R31
000359 81ae      	LDD  R26,Y+6
00035a 81bf      	LDD  R27,Y+6+1
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00035c 89a8      	LDD  R26,Y+16
00035d 89b9      	LDD  R27,Y+16+1
00035e 9614      	ADIW R26,4
00035f 940e 0382 	CALL __GETW1P
000361 87ea      	STD  Y+10,R30
000362 87fb      	STD  Y+10+1,R31
000363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000364 01de      	MOVW R26,R28
000365 961c      	ADIW R26,12
000366 940e 0375 	CALL __ADDW2R15
000368 940e 0382 	CALL __GETW1P
00036a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00036b 9610      	adiw r26,0
00036c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00036d ed80     +LDI R24 , LOW ( 0x7D0 )
00036e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00036f 9701     +SBIW R24 , 1
000370 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000371 95a8      	wdr
000372 9711      	sbiw r26,1
000373 f7c9      	brne __delay_ms0
                 __delay_ms1:
000374 9508      	ret
                 
                 __ADDW2R15:
000375 2400      	CLR  R0
000376 0daf      	ADD  R26,R15
000377 1db0      	ADC  R27,R0
000378 9508      	RET
                 
                 __ANEGW1:
000379 95f1      	NEG  R31
00037a 95e1      	NEG  R30
00037b 40f0      	SBCI R31,0
00037c 9508      	RET
                 
                 __CWD1:
00037d 2f6f      	MOV  R22,R31
00037e 0f66      	ADD  R22,R22
00037f 0b66      	SBC  R22,R22
000380 2f76      	MOV  R23,R22
000381 9508      	RET
                 
                 __GETW1P:
000382 91ed      	LD   R30,X+
000383 91fc      	LD   R31,X
000384 9711      	SBIW R26,1
000385 9508      	RET
                 
                 __GETW1PF:
000386 9005      	LPM  R0,Z+
000387 91f4      	LPM  R31,Z
000388 2de0      	MOV  R30,R0
000389 9508      	RET
                 
                 __PUTPARD1:
00038a 937a      	ST   -Y,R23
00038b 936a      	ST   -Y,R22
00038c 93fa      	ST   -Y,R31
00038d 93ea      	ST   -Y,R30
00038e 9508      	RET
                 
                 __SAVELOCR6:
00038f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000390 934a      	ST   -Y,R20
                 __SAVELOCR4:
000391 933a      	ST   -Y,R19
                 __SAVELOCR3:
000392 932a      	ST   -Y,R18
                 __SAVELOCR2:
000393 931a      	ST   -Y,R17
000394 930a      	ST   -Y,R16
000395 9508      	RET
                 
                 __LOADLOCR6:
000396 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000397 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000398 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000399 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00039a 8119      	LDD  R17,Y+1
00039b 8108      	LD   R16,Y
00039c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  14 r1 :   1 r2 :   0 r3 :   0 r4 :   7 r5 :   2 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  24 r25:   5 r26:  97 r27:  40 r28:  14 r29:   1 r30: 158 r31:  58 
x  :  23 y  : 169 z  :  15 
Registers used: 27 out of 35 (77.1%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  25 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  21 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  51 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   3 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   0 inc   :   2 jmp   :  37 ld    :  28 ldd   :  77 
ldi   :  93 lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 
movw  :  19 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   6 out   :  10 pop   :   1 push  :   1 rcall :  18 
ret   :  25 reti  :   0 rjmp  :  72 rol   :   0 ror   :   0 sbc   :   2 
sbci  :   2 sbi   :  14 sbic  :   4 sbis  :   0 sbiw  :  20 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  59 std   :  31 sts   :   3 sub   :   1 subi  :  16 
swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 52 out of 117 (44.4%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00073a   1810     40   1850  131072   1.4%
[.dseg] 0x000100 0x00050e      0     14     14    4096   0.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 6 warnings
