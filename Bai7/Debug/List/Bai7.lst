
AVRASM ver. 2.1.30  D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm Fri Dec 04 10:39:40 2020

D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1092): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dem=R4
                 	.DEF _dem_msb=R5
                 	.DEF _vitri=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0156 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0186 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 0400
00004c 040a
00004d 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G100:
000138 2710
000139 03e8
00013a 0064
00013b 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00013c 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00013d 1000
00013e 0100
00013f 0010
000140 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
000141 0100
000142 0703
000143 1f0f
000144 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1206): warning: .cseg .db misalignment - padding zero byte
000145 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1210): warning: .cseg .db misalignment - padding zero byte
000146 0096      	.DB  0x96
                 
                 _0x0:
000147 6725
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1213): warning: .cseg .db misalignment - padding zero byte
000148 0000      	.DB  0x25,0x67,0x0
                 _0x2100060:
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1215): warning: .cseg .db misalignment - padding zero byte
000149 0001      	.DB  0x1
                 _0x2100000:
00014a 4e2d
00014b 4e41
00014c 4900
00014d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Workspace\Study\KTMT\Bai7\Debug\List\Bai7.asm(1218): warning: .cseg .db misalignment - padding zero byte
00014e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00014f 0001      	.DW  0x01
000150 0007      	.DW  0x07
000151 028c      	.DW  __REG_VARS*2
                 
000152 0001      	.DW  0x01
000153 077f      	.DW  __seed_G108
000154 0292      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
000155 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000156 94f8      	CLI
000157 27ee      	CLR  R30
000158 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000159 e0f1      	LDI  R31,1
00015a bff5      	OUT  MCUCR,R31
00015b bfe5      	OUT  MCUCR,R30
00015c 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00015e e08d      	LDI  R24,(14-2)+1
00015f e0a2      	LDI  R26,2
000160 27bb      	CLR  R27
                 __CLEAR_REG:
000161 93ed      	ST   X+,R30
000162 958a      	DEC  R24
000163 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000164 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000165 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000166 e0a0      	LDI  R26,LOW(__SRAM_START)
000167 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000168 93ed      	ST   X+,R30
000169 9701      	SBIW R24,1
00016a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00016b e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00016c e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00016d 9185      	LPM  R24,Z+
00016e 9195      	LPM  R25,Z+
00016f 9700      	SBIW R24,0
000170 f061      	BREQ __GLOBAL_INI_END
000171 91a5      	LPM  R26,Z+
000172 91b5      	LPM  R27,Z+
000173 9005      	LPM  R0,Z+
000174 9015      	LPM  R1,Z+
000175 01bf      	MOVW R22,R30
000176 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000177 9005      	LPM  R0,Z+
000178 920d      	ST   X+,R0
000179 9701      	SBIW R24,1
00017a f7e1      	BRNE __GLOBAL_INI_LOOP
00017b 01fb      	MOVW R30,R22
00017c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00017d bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00017e efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00017f bfed      	OUT  SPL,R30
000180 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000181 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000182 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000183 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000184 940c 01a8 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Bai7.c
                 ; *
                 ; * Created: 11/6/2020 9:12:45 AM
                 ; * Author: Dell
                 ; Viet chuong trinh bam BT1 servo quay goc 90
                 ; Bam BT2 servo quay goc 135
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <glcd.h>
                 ;#include <delay.h>
                 ;#include <font5x7.h>
                 ;#define servo PORTC.7
                 ;#define BT1 PINB.2
                 ;#define BT2 PINB.3
                 ;int dem;
                 ;float goc = 0.0;
                 ;char vitri = 150;
                 ;unsigned char buffer[100];
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000186 93aa      	ST   -Y,R26
000187 93ba      	ST   -Y,R27
000188 93ea      	ST   -Y,R30
000189 93fa      	ST   -Y,R31
00018a b7ef      	IN   R30,SREG
00018b 93ea      	ST   -Y,R30
                 ; 0000 001A TCNT0=0xB0; // Tao ra don vi 0.01ms
00018c ebe0      	LDI  R30,LOW(176)
00018d bfe2      	OUT  0x32,R30
                 ; 0000 001B dem++;
00018e 01f2      	MOVW R30,R4
00018f 9631      	ADIW R30,1
000190 012f      	MOVW R4,R30
                 ; 0000 001C if (dem == 2000) dem = 0;
000191 ede0      	LDI  R30,LOW(2000)
000192 e0f7      	LDI  R31,HIGH(2000)
000193 15e4      	CP   R30,R4
000194 05f5      	CPC  R31,R5
000195 f411      	BRNE _0x3
000196 2444      	CLR  R4
000197 2455      	CLR  R5
                 ; 0000 001D if (dem < vitri) servo = 1;
                 _0x3:
000198 2de7      	MOV  R30,R7
000199 01d2      	MOVW R26,R4
00019a e0f0      	LDI  R31,0
00019b 17ae      	CP   R26,R30
00019c 07bf      	CPC  R27,R31
00019d f414      	BRGE _0x4
00019e 9aaf      	SBI  0x15,7
                 ; 0000 001E else servo = 0;
00019f c001      	RJMP _0x7
                 _0x4:
0001a0 98af      	CBI  0x15,7
                 ; 0000 001F }
                 _0x7:
0001a1 91e9      	LD   R30,Y+
0001a2 bfef      	OUT  SREG,R30
0001a3 91f9      	LD   R31,Y+
0001a4 91e9      	LD   R30,Y+
0001a5 91b9      	LD   R27,Y+
0001a6 91a9      	LD   R26,Y+
0001a7 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0022 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0023 GLCDINIT_t glcd_init_data;
                 ; 0000 0024 glcd_init_data.font = font5x7;
0001a8 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0001a9 e8ec      	LDI  R30,LOW(_font5x7*2)
0001aa e0f0      	LDI  R31,HIGH(_font5x7*2)
0001ab 83e8      	ST   Y,R30
0001ac 83f9      	STD  Y+1,R31
                 ; 0000 0025 glcd_init_data.temp_coef = 90;
0001ad 81ee      	LDD  R30,Y+6
0001ae 7fec      	ANDI R30,LOW(0xFC)
0001af 60e2      	ORI  R30,2
0001b0 83ee      	STD  Y+6,R30
                 ; 0000 0026 glcd_init_data.bias = 4;
0001b1 7ee3      	ANDI R30,LOW(0xE3)
0001b2 61e0      	ORI  R30,0x10
0001b3 83ee      	STD  Y+6,R30
                 ; 0000 0027 glcd_init_data.vlcd = 60;
0001b4 81ef      	LDD  R30,Y+7
0001b5 78e0      	ANDI R30,LOW(0x80)
0001b6 63ec      	ORI  R30,LOW(0x3C)
0001b7 83ef      	STD  Y+7,R30
                 ; 0000 0028 glcd_init(&glcd_init_data);
0001b8 01de      	MOVW R26,R28
0001b9 940e 043c 	CALL _glcd_init
                 ; 0000 0029 DDRC = 0x80;
0001bb e8e0      	LDI  R30,LOW(128)
0001bc bbe4      	OUT  0x14,R30
                 ; 0000 002A DDRD = 0x00;
0001bd e0e0      	LDI  R30,LOW(0)
0001be bbe1      	OUT  0x11,R30
                 ; 0000 002B PORTB = 0x0C;
0001bf e0ec      	LDI  R30,LOW(12)
0001c0 bbe8      	OUT  0x18,R30
                 ; 0000 002C ASSR=0<<AS0;
0001c1 e0e0      	LDI  R30,LOW(0)
0001c2 bfe0      	OUT  0x30,R30
                 ; 0000 002D TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
0001c3 e0e1      	LDI  R30,LOW(1)
0001c4 bfe3      	OUT  0x33,R30
                 ; 0000 002E TCNT0=0xB0;
0001c5 ebe0      	LDI  R30,LOW(176)
0001c6 bfe2      	OUT  0x32,R30
                 ; 0000 002F OCR0=0x00;
0001c7 e0e0      	LDI  R30,LOW(0)
0001c8 bfe1      	OUT  0x31,R30
                 ; 0000 0030 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0001c9 e0e1      	LDI  R30,LOW(1)
0001ca bfe7      	OUT  0x37,R30
                 ; 0000 0031 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0001cb e0e0      	LDI  R30,LOW(0)
0001cc 93e0 007d 	STS  125,R30
                 ; 0000 0032 #asm("sei")
0001ce 9478      	sei
                 ; 0000 0033 while (1)
                 _0xA:
                 ; 0000 0034     {
                 ; 0000 0035         goc = (vitri * 1.8) - 270.0;
0001cf 2de7      	MOV  R30,R7
0001d0 e0f0      	LDI  R31,0
0001d1 940e 0abd 	CALL __CWD1
0001d3 940e 09ca 	CALL __CDF1
                +
0001d5 e6a6     +LDI R26 , LOW ( 0x3FE66666 )
0001d6 e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
0001d7 ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
0001d8 e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
0001d9 940e 0a4f 	CALL __MULF12
0001db 01df      	MOVW R26,R30
0001dc 01cb      	MOVW R24,R22
                +
0001dd e0e0     +LDI R30 , LOW ( 0x43870000 )
0001de e0f0     +LDI R31 , HIGH ( 0x43870000 )
0001df e867     +LDI R22 , BYTE3 ( 0x43870000 )
0001e0 e473     +LDI R23 , BYTE4 ( 0x43870000 )
                 	__GETD1N 0x43870000
0001e1 940e 0ad7 	CALL __SWAPD12
0001e3 940e 09fd 	CALL __SUBF12
0001e5 93e0 051d 	STS  _goc,R30
0001e7 93f0 051e 	STS  _goc+1,R31
0001e9 9360 051f 	STS  _goc+2,R22
0001eb 9370 0520 	STS  _goc+3,R23
                 ; 0000 0036         sprintf(buffer, "%g", goc);
0001ed e2e1      	LDI  R30,LOW(_buffer)
0001ee e0f5      	LDI  R31,HIGH(_buffer)
0001ef 93fa      	ST   -Y,R31
0001f0 93ea      	ST   -Y,R30
                +
0001f1 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001f2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001f3 93fa      	ST   -Y,R31
0001f4 93ea      	ST   -Y,R30
0001f5 91e0 051d 	LDS  R30,_goc
0001f7 91f0 051e 	LDS  R31,_goc+1
0001f9 9160 051f 	LDS  R22,_goc+2
0001fb 9170 0520 	LDS  R23,_goc+3
0001fd 940e 0ad2 	CALL __PUTPARD1
0001ff e084      	LDI  R24,4
000200 940e 038a 	CALL _sprintf
000202 9628      	ADIW R28,8
                 ; 0000 0037         glcd_outtextxy(10, 10, buffer);
000203 e0ea      	LDI  R30,LOW(10)
000204 93ea      	ST   -Y,R30
000205 93ea      	ST   -Y,R30
000206 e2a1      	LDI  R26,LOW(_buffer)
000207 e0b5      	LDI  R27,HIGH(_buffer)
000208 940e 0831 	CALL _glcd_outtextxy
                 ; 0000 0038         if (BT1 == 0)
00020a 99b2      	SBIC 0x16,2
00020b c006      	RJMP _0xD
                 ; 0000 0039         {
                 ; 0000 003A             //delay_ms(250);
                 ; 0000 003B             vitri++; // Tang 1.8 do
00020c 9473      	INC  R7
                 ; 0000 003C             if (vitri == 200)
00020d ece8      	LDI  R30,LOW(200)
00020e 15e7      	CP   R30,R7
00020f f411      	BRNE _0xE
                 ; 0000 003D                 vitri = 150;
000210 e9e6      	LDI  R30,LOW(150)
000211 2e7e      	MOV  R7,R30
                 ; 0000 003E         }
                 _0xE:
                 ; 0000 003F         if (BT2 == 0)
                 _0xD:
000212 99b3      	SBIC 0x16,3
000213 c006      	RJMP _0xF
                 ; 0000 0040         {
                 ; 0000 0041             //delay_ms(250);
                 ; 0000 0042             vitri--; // Goc 135 do
000214 947a      	DEC  R7
                 ; 0000 0043             if (vitri == 100)
000215 e6e4      	LDI  R30,LOW(100)
000216 15e7      	CP   R30,R7
000217 f411      	BRNE _0x10
                 ; 0000 0044                 vitri = 150;
000218 e9e6      	LDI  R30,LOW(150)
000219 2e7e      	MOV  R7,R30
                 ; 0000 0045         }
                 _0x10:
                 ; 0000 0046     }
                 _0xF:
00021a cfb4      	RJMP _0xA
                 ; 0000 0047 }
                 _0x11:
00021b cfff      	RJMP _0x11
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00021c 93ba      	ST   -Y,R27
00021d 93aa      	ST   -Y,R26
00021e 931a      	ST   -Y,R17
00021f 930a      	ST   -Y,R16
000220 81aa      	LDD  R26,Y+2
000221 81bb      	LDD  R27,Y+2+1
000222 9612      	ADIW R26,2
000223 940e 0aca 	CALL __GETW1P
000225 9730      	SBIW R30,0
000226 f129      	BREQ _0x2000010
000227 81aa      	LDD  R26,Y+2
000228 81bb      	LDD  R27,Y+2+1
000229 9614      	ADIW R26,4
00022a 940e 0aca 	CALL __GETW1P
00022c 018f      	MOVW R16,R30
00022d 9730      	SBIW R30,0
00022e f061      	BREQ _0x2000012
                +
00022f 3002     +CPI R16 , LOW ( 2 )
000230 e0e0     +LDI R30 , HIGH ( 2 )
000231 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000232 f080      	BRLO _0x2000013
000233 01f8      	MOVW R30,R16
000234 9731      	SBIW R30,1
000235 018f      	MOVW R16,R30
                +
000236 81aa     +LDD R26 , Y + 2
000237 81bb     +LDD R27 , Y + 2 + 1
000238 9614     +ADIW R26 , 4
000239 93ed     +ST X + , R30
00023a 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00023b 81aa      	LDD  R26,Y+2
00023c 81bb      	LDD  R27,Y+2+1
00023d 9612      	ADIW R26,2
00023e 940e 08ec 	CALL SUBOPT_0x0
000240 9731      	SBIW R30,1
000241 81ac      	LDD  R26,Y+4
000242 83a0      	STD  Z+0,R26
                 _0x2000013:
000243 81aa      	LDD  R26,Y+2
000244 81bb      	LDD  R27,Y+2+1
000245 940e 0aca 	CALL __GETW1P
000247 23ff      	TST  R31
000248 f012      	BRMI _0x2000014
000249 940e 08ec 	CALL SUBOPT_0x0
                 _0x2000014:
00024b c006      	RJMP _0x2000015
                 _0x2000010:
00024c 81aa      	LDD  R26,Y+2
00024d 81bb      	LDD  R27,Y+2+1
00024e efef      	LDI  R30,LOW(65535)
00024f efff      	LDI  R31,HIGH(65535)
000250 93ed      	ST   X+,R30
000251 93fc      	ST   X,R31
                 _0x2000015:
000252 8119      	LDD  R17,Y+1
000253 8108      	LDD  R16,Y+0
000254 9625      	ADIW R28,5
000255 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000256 93ba      	ST   -Y,R27
000257 93aa      	ST   -Y,R26
000258 9726      	SBIW R28,6
000259 940e 0b05 	CALL __SAVELOCR6
00025b e010      	LDI  R17,0
00025c 85ac      	LDD  R26,Y+12
00025d 85bd      	LDD  R27,Y+12+1
00025e e0e0      	LDI  R30,LOW(0)
00025f e0f0      	LDI  R31,HIGH(0)
000260 93ed      	ST   X+,R30
000261 93fc      	ST   X,R31
                 _0x2000016:
000262 89ea      	LDD  R30,Y+18
000263 89fb      	LDD  R31,Y+18+1
000264 9631      	ADIW R30,1
000265 8bea      	STD  Y+18,R30
000266 8bfb      	STD  Y+18+1,R31
000267 9731      	SBIW R30,1
000268 91e4      	LPM  R30,Z
000269 2f2e      	MOV  R18,R30
00026a 30e0      	CPI  R30,0
00026b f409      	BRNE PC+2
00026c c115      	RJMP _0x2000018
00026d 2fe1      	MOV  R30,R17
00026e 30e0      	CPI  R30,0
00026f f439      	BRNE _0x200001C
000270 3225      	CPI  R18,37
000271 f411      	BRNE _0x200001D
000272 e011      	LDI  R17,LOW(1)
000273 c002      	RJMP _0x200001E
                 _0x200001D:
000274 940e 08f2 	CALL SUBOPT_0x1
                 _0x200001E:
000276 c10a      	RJMP _0x200001B
                 _0x200001C:
000277 30e1      	CPI  R30,LOW(0x1)
000278 f4a9      	BRNE _0x200001F
000279 3225      	CPI  R18,37
00027a f419      	BRNE _0x2000020
00027b 940e 08f2 	CALL SUBOPT_0x1
00027d c102      	RJMP _0x20000CC
                 _0x2000020:
00027e e012      	LDI  R17,LOW(2)
00027f e040      	LDI  R20,LOW(0)
000280 e000      	LDI  R16,LOW(0)
000281 322d      	CPI  R18,45
000282 f411      	BRNE _0x2000021
000283 e001      	LDI  R16,LOW(1)
000284 c0fc      	RJMP _0x200001B
                 _0x2000021:
000285 322b      	CPI  R18,43
000286 f411      	BRNE _0x2000022
000287 e24b      	LDI  R20,LOW(43)
000288 c0f8      	RJMP _0x200001B
                 _0x2000022:
000289 3220      	CPI  R18,32
00028a f411      	BRNE _0x2000023
00028b e240      	LDI  R20,LOW(32)
00028c c0f4      	RJMP _0x200001B
                 _0x2000023:
00028d c002      	RJMP _0x2000024
                 _0x200001F:
00028e 30e2      	CPI  R30,LOW(0x2)
00028f f439      	BRNE _0x2000025
                 _0x2000024:
000290 e050      	LDI  R21,LOW(0)
000291 e013      	LDI  R17,LOW(3)
000292 3320      	CPI  R18,48
000293 f411      	BRNE _0x2000026
000294 6800      	ORI  R16,LOW(128)
000295 c0eb      	RJMP _0x200001B
                 _0x2000026:
000296 c003      	RJMP _0x2000027
                 _0x2000025:
000297 30e3      	CPI  R30,LOW(0x3)
000298 f009      	BREQ PC+2
000299 c0e7      	RJMP _0x200001B
                 _0x2000027:
00029a 3320      	CPI  R18,48
00029b f010      	BRLO _0x200002A
00029c 332a      	CPI  R18,58
00029d f008      	BRLO _0x200002B
                 _0x200002A:
00029e c007      	RJMP _0x2000029
                 _0x200002B:
00029f e0aa      	LDI  R26,LOW(10)
0002a0 9f5a      	MUL  R21,R26
0002a1 2d50      	MOV  R21,R0
0002a2 2fe2      	MOV  R30,R18
0002a3 53e0      	SUBI R30,LOW(48)
0002a4 0f5e      	ADD  R21,R30
0002a5 c0db      	RJMP _0x200001B
                 _0x2000029:
0002a6 2fe2      	MOV  R30,R18
0002a7 36e3      	CPI  R30,LOW(0x63)
0002a8 f449      	BRNE _0x200002F
0002a9 940e 08f9 	CALL SUBOPT_0x2
0002ab 89e8      	LDD  R30,Y+16
0002ac 89f9      	LDD  R31,Y+16+1
0002ad 81a4      	LDD  R26,Z+4
0002ae 93aa      	ST   -Y,R26
0002af 940e 08ff 	CALL SUBOPT_0x3
0002b1 c0ce      	RJMP _0x2000030
                 _0x200002F:
0002b2 37e3      	CPI  R30,LOW(0x73)
0002b3 f441      	BRNE _0x2000032
0002b4 940e 08f9 	CALL SUBOPT_0x2
0002b6 940e 0905 	CALL SUBOPT_0x4
0002b8 940e 0862 	CALL _strlen
0002ba 2f1e      	MOV  R17,R30
0002bb c00a      	RJMP _0x2000033
                 _0x2000032:
0002bc 37e0      	CPI  R30,LOW(0x70)
0002bd f461      	BRNE _0x2000035
0002be 940e 08f9 	CALL SUBOPT_0x2
0002c0 940e 0905 	CALL SUBOPT_0x4
0002c2 940e 086e 	CALL _strlenf
0002c4 2f1e      	MOV  R17,R30
0002c5 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0002c6 6002      	ORI  R16,LOW(2)
0002c7 770f      	ANDI R16,LOW(127)
0002c8 e030      	LDI  R19,LOW(0)
0002c9 c034      	RJMP _0x2000036
                 _0x2000035:
0002ca 36e4      	CPI  R30,LOW(0x64)
0002cb f011      	BREQ _0x2000039
0002cc 36e9      	CPI  R30,LOW(0x69)
0002cd f411      	BRNE _0x200003A
                 _0x2000039:
0002ce 6004      	ORI  R16,LOW(4)
0002cf c002      	RJMP _0x200003B
                 _0x200003A:
0002d0 37e5      	CPI  R30,LOW(0x75)
0002d1 f431      	BRNE _0x200003C
                 _0x200003B:
0002d2 e7e0      	LDI  R30,LOW(_tbl10_G100*2)
0002d3 e0f2      	LDI  R31,HIGH(_tbl10_G100*2)
0002d4 83ee      	STD  Y+6,R30
0002d5 83ff      	STD  Y+6+1,R31
0002d6 e015      	LDI  R17,LOW(5)
0002d7 c00c      	RJMP _0x200003D
                 _0x200003C:
0002d8 35e8      	CPI  R30,LOW(0x58)
0002d9 f411      	BRNE _0x200003F
0002da 6008      	ORI  R16,LOW(8)
0002db c003      	RJMP _0x2000040
                 _0x200003F:
0002dc 37e8      	CPI  R30,LOW(0x78)
0002dd f009      	BREQ PC+2
0002de c0a1      	RJMP _0x2000071
                 _0x2000040:
0002df e7ea      	LDI  R30,LOW(_tbl16_G100*2)
0002e0 e0f2      	LDI  R31,HIGH(_tbl16_G100*2)
0002e1 83ee      	STD  Y+6,R30
0002e2 83ff      	STD  Y+6+1,R31
0002e3 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0002e4 ff02      	SBRS R16,2
0002e5 c014      	RJMP _0x2000042
0002e6 940e 08f9 	CALL SUBOPT_0x2
0002e8 940e 090f 	CALL SUBOPT_0x5
0002ea 85ab      	LDD  R26,Y+11
0002eb 23aa      	TST  R26
0002ec f43a      	BRPL _0x2000043
0002ed 85ea      	LDD  R30,Y+10
0002ee 85fb      	LDD  R31,Y+10+1
0002ef 940e 0aa1 	CALL __ANEGW1
0002f1 87ea      	STD  Y+10,R30
0002f2 87fb      	STD  Y+10+1,R31
0002f3 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0002f4 3040      	CPI  R20,0
0002f5 f011      	BREQ _0x2000044
0002f6 5f1f      	SUBI R17,-LOW(1)
0002f7 c001      	RJMP _0x2000045
                 _0x2000044:
0002f8 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0002f9 c004      	RJMP _0x2000046
                 _0x2000042:
0002fa 940e 08f9 	CALL SUBOPT_0x2
0002fc 940e 090f 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
0002fe fd00      	SBRC R16,0
0002ff c011      	RJMP _0x2000047
                 _0x2000048:
000300 1715      	CP   R17,R21
000301 f478      	BRSH _0x200004A
000302 ff07      	SBRS R16,7
000303 c008      	RJMP _0x200004B
000304 ff02      	SBRS R16,2
000305 c004      	RJMP _0x200004C
000306 7f0b      	ANDI R16,LOW(251)
000307 2f24      	MOV  R18,R20
000308 5011      	SUBI R17,LOW(1)
000309 c001      	RJMP _0x200004D
                 _0x200004C:
00030a e320      	LDI  R18,LOW(48)
                 _0x200004D:
00030b c001      	RJMP _0x200004E
                 _0x200004B:
00030c e220      	LDI  R18,LOW(32)
                 _0x200004E:
00030d 940e 08f2 	CALL SUBOPT_0x1
00030f 5051      	SUBI R21,LOW(1)
000310 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000311 2f31      	MOV  R19,R17
000312 ff01      	SBRS R16,1
000313 c017      	RJMP _0x200004F
                 _0x2000050:
000314 3030      	CPI  R19,0
000315 f0a1      	BREQ _0x2000052
000316 ff03      	SBRS R16,3
000317 c006      	RJMP _0x2000053
000318 81ee      	LDD  R30,Y+6
000319 81ff      	LDD  R31,Y+6+1
00031a 9125      	LPM  R18,Z+
00031b 83ee      	STD  Y+6,R30
00031c 83ff      	STD  Y+6+1,R31
00031d c005      	RJMP _0x2000054
                 _0x2000053:
00031e 81ae      	LDD  R26,Y+6
00031f 81bf      	LDD  R27,Y+6+1
000320 912d      	LD   R18,X+
000321 83ae      	STD  Y+6,R26
000322 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000323 940e 08f2 	CALL SUBOPT_0x1
000325 3050      	CPI  R21,0
000326 f009      	BREQ _0x2000055
000327 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000328 5031      	SUBI R19,LOW(1)
000329 cfea      	RJMP _0x2000050
                 _0x2000052:
00032a c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00032b e320      	LDI  R18,LOW(48)
00032c 81ee      	LDD  R30,Y+6
00032d 81ff      	LDD  R31,Y+6+1
00032e 940e 0ace 	CALL __GETW1PF
000330 87e8      	STD  Y+8,R30
000331 87f9      	STD  Y+8+1,R31
000332 81ee      	LDD  R30,Y+6
000333 81ff      	LDD  R31,Y+6+1
000334 9632      	ADIW R30,2
000335 83ee      	STD  Y+6,R30
000336 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000337 85e8      	LDD  R30,Y+8
000338 85f9      	LDD  R31,Y+8+1
000339 85aa      	LDD  R26,Y+10
00033a 85bb      	LDD  R27,Y+10+1
00033b 17ae      	CP   R26,R30
00033c 07bf      	CPC  R27,R31
00033d f050      	BRLO _0x200005C
00033e 5f2f      	SUBI R18,-LOW(1)
00033f 85a8      	LDD  R26,Y+8
000340 85b9      	LDD  R27,Y+8+1
000341 85ea      	LDD  R30,Y+10
000342 85fb      	LDD  R31,Y+10+1
000343 1bea      	SUB  R30,R26
000344 0bfb      	SBC  R31,R27
000345 87ea      	STD  Y+10,R30
000346 87fb      	STD  Y+10+1,R31
000347 cfef      	RJMP _0x200005A
                 _0x200005C:
000348 332a      	CPI  R18,58
000349 f028      	BRLO _0x200005D
00034a ff03      	SBRS R16,3
00034b c002      	RJMP _0x200005E
00034c 5f29      	SUBI R18,-LOW(7)
00034d c001      	RJMP _0x200005F
                 _0x200005E:
00034e 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00034f fd04      	SBRC R16,4
000350 c01a      	RJMP _0x2000061
000351 3321      	CPI  R18,49
000352 f420      	BRSH _0x2000063
000353 85a8      	LDD  R26,Y+8
000354 85b9      	LDD  R27,Y+8+1
000355 9711      	SBIW R26,1
000356 f409      	BRNE _0x2000062
                 _0x2000063:
000357 c009      	RJMP _0x20000CD
                 _0x2000062:
000358 1753      	CP   R21,R19
000359 f010      	BRLO _0x2000067
00035a ff00      	SBRS R16,0
00035b c001      	RJMP _0x2000068
                 _0x2000067:
00035c c013      	RJMP _0x2000066
                 _0x2000068:
00035d e220      	LDI  R18,LOW(32)
00035e ff07      	SBRS R16,7
00035f c00b      	RJMP _0x2000069
000360 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000361 6100      	ORI  R16,LOW(16)
000362 ff02      	SBRS R16,2
000363 c007      	RJMP _0x200006A
000364 7f0b      	ANDI R16,LOW(251)
000365 934a      	ST   -Y,R20
000366 940e 08ff 	CALL SUBOPT_0x3
000368 3050      	CPI  R21,0
000369 f009      	BREQ _0x200006B
00036a 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00036b 940e 08f2 	CALL SUBOPT_0x1
00036d 3050      	CPI  R21,0
00036e f009      	BREQ _0x200006C
00036f 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000370 5031      	SUBI R19,LOW(1)
000371 85a8      	LDD  R26,Y+8
000372 85b9      	LDD  R27,Y+8+1
000373 9712      	SBIW R26,2
000374 f008      	BRLO _0x2000059
000375 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000376 ff00      	SBRS R16,0
000377 c008      	RJMP _0x200006D
                 _0x200006E:
000378 3050      	CPI  R21,0
000379 f031      	BREQ _0x2000070
00037a 5051      	SUBI R21,LOW(1)
00037b e2e0      	LDI  R30,LOW(32)
00037c 93ea      	ST   -Y,R30
00037d 940e 08ff 	CALL SUBOPT_0x3
00037f cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000380 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000381 cee0      	RJMP _0x2000016
                 _0x2000018:
000382 85ac      	LDD  R26,Y+12
000383 85bd      	LDD  R27,Y+12+1
000384 940e 0aca 	CALL __GETW1P
000386 940e 0b0c 	CALL __LOADLOCR6
000388 9664      	ADIW R28,20
000389 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00038a 92ff      	PUSH R15
00038b 2ef8      	MOV  R15,R24
00038c 9726      	SBIW R28,6
00038d 940e 0b07 	CALL __SAVELOCR4
00038f 940e 0917 	CALL SUBOPT_0x6
000391 9730      	SBIW R30,0
000392 f419      	BRNE _0x2000072
000393 efef      	LDI  R30,LOW(65535)
000394 efff      	LDI  R31,HIGH(65535)
000395 c023      	RJMP _0x212000A
                 _0x2000072:
000396 01de      	MOVW R26,R28
000397 9616      	ADIW R26,6
000398 940e 0a9d 	CALL __ADDW2R15
00039a 018d      	MOVW R16,R26
00039b 940e 0917 	CALL SUBOPT_0x6
00039d 83ee      	STD  Y+6,R30
00039e 83ff      	STD  Y+6+1,R31
00039f e0e0      	LDI  R30,LOW(0)
0003a0 87e8      	STD  Y+8,R30
0003a1 87e9      	STD  Y+8+1,R30
0003a2 01de      	MOVW R26,R28
0003a3 961a      	ADIW R26,10
0003a4 940e 0a9d 	CALL __ADDW2R15
0003a6 940e 0aca 	CALL __GETW1P
0003a8 93fa      	ST   -Y,R31
0003a9 93ea      	ST   -Y,R30
0003aa 931a      	ST   -Y,R17
0003ab 930a      	ST   -Y,R16
0003ac e1ec      	LDI  R30,LOW(_put_buff_G100)
0003ad e0f2      	LDI  R31,HIGH(_put_buff_G100)
0003ae 93fa      	ST   -Y,R31
0003af 93ea      	ST   -Y,R30
0003b0 01de      	MOVW R26,R28
0003b1 961a      	ADIW R26,10
0003b2 dea3      	RCALL __print_G100
0003b3 019f      	MOVW R18,R30
0003b4 81ae      	LDD  R26,Y+6
0003b5 81bf      	LDD  R27,Y+6+1
0003b6 e0e0      	LDI  R30,LOW(0)
0003b7 93ec      	ST   X,R30
0003b8 01f9      	MOVW R30,R18
                 _0x212000A:
0003b9 940e 0b0e 	CALL __LOADLOCR4
0003bb 962a      	ADIW R28,10
0003bc 90ff      	POP  R15
0003bd 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G101:
                 ; .FSTART _pcd8544_delay_G101
0003be 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G101:
                 ; .FSTART _pcd8544_wrbus_G101
0003bf 93aa      	ST   -Y,R26
0003c0 931a      	ST   -Y,R17
0003c1 91e0 0065 	LDS  R30,101
0003c3 7eef      	ANDI R30,0xEF
0003c4 93e0 0065 	STS  101,R30
0003c6 e018      	LDI  R17,LOW(8)
                 _0x2020004:
0003c7 dff6      	RCALL _pcd8544_delay_G101
0003c8 81e9      	LDD  R30,Y+1
0003c9 78e0      	ANDI R30,LOW(0x80)
0003ca f021      	BREQ _0x2020006
0003cb 91e0 0065 	LDS  R30,101
0003cd 60e2      	ORI  R30,2
0003ce c003      	RJMP _0x20200A0
                 _0x2020006:
0003cf 91e0 0065 	LDS  R30,101
0003d1 7fed      	ANDI R30,0xFD
                 _0x20200A0:
0003d2 93e0 0065 	STS  101,R30
0003d4 81e9      	LDD  R30,Y+1
0003d5 0fee      	LSL  R30
0003d6 83e9      	STD  Y+1,R30
0003d7 dfe6      	RCALL _pcd8544_delay_G101
0003d8 91e0 0065 	LDS  R30,101
0003da 60e4      	ORI  R30,4
0003db 93e0 0065 	STS  101,R30
0003dd dfe0      	RCALL _pcd8544_delay_G101
0003de 91e0 0065 	LDS  R30,101
0003e0 7feb      	ANDI R30,0xFB
0003e1 93e0 0065 	STS  101,R30
0003e3 5011      	SUBI R17,LOW(1)
0003e4 f711      	BRNE _0x2020004
0003e5 91e0 0065 	LDS  R30,101
0003e7 61e0      	ORI  R30,0x10
0003e8 93e0 0065 	STS  101,R30
0003ea 8118      	LDD  R17,Y+0
0003eb 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0003ed 93aa      	ST   -Y,R26
0003ee 91e0 0065 	LDS  R30,101
0003f0 7fee      	ANDI R30,0xFE
0003f1 93e0 0065 	STS  101,R30
0003f3 81a8      	LD   R26,Y
0003f4 dfca      	RCALL _pcd8544_wrbus_G101
0003f5 c0eb      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_wrdata_G101:
                 ; .FSTART _pcd8544_wrdata_G101
0003f6 93aa      	ST   -Y,R26
0003f7 91e0 0065 	LDS  R30,101
0003f9 60e1      	ORI  R30,1
0003fa 93e0 0065 	STS  101,R30
0003fc 81a8      	LD   R26,Y
0003fd dfc1      	RCALL _pcd8544_wrbus_G101
0003fe c0e2      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_setaddr_G101:
                 ; .FSTART _pcd8544_setaddr_G101
0003ff 93aa      	ST   -Y,R26
000400 931a      	ST   -Y,R17
000401 81e9      	LDD  R30,Y+1
000402 95e6      	LSR  R30
000403 95e6      	LSR  R30
000404 95e6      	LSR  R30
000405 2f1e      	MOV  R17,R30
000406 e5e4      	LDI  R30,LOW(84)
000407 9fe1      	MUL  R30,R17
000408 01f0      	MOVW R30,R0
000409 01df      	MOVW R26,R30
00040a 81ea      	LDD  R30,Y+2
00040b e0f0      	LDI  R31,0
00040c 0fea      	ADD  R30,R26
00040d 1ffb      	ADC  R31,R27
00040e 93e0 0585 	STS  _gfx_addr_G101,R30
000410 93f0 0586 	STS  _gfx_addr_G101+1,R31
000412 2fe1      	MOV  R30,R17
000413 8118      	LDD  R17,Y+0
000414 940c 08cb 	JMP  _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000416 93aa      	ST   -Y,R26
000417 81e9      	LDD  R30,Y+1
000418 68e0      	ORI  R30,0x80
000419 2fae      	MOV  R26,R30
00041a dfd2      	RCALL _pcd8544_wrcmd
00041b 81e9      	LDD  R30,Y+1
00041c 93ea      	ST   -Y,R30
00041d 81a9      	LDD  R26,Y+1
00041e dfe0      	RCALL _pcd8544_setaddr_G101
00041f 64e0      	ORI  R30,0x40
000420 2fae      	MOV  R26,R30
000421 dfcb      	RCALL _pcd8544_wrcmd
000422 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000424 93aa      	ST   -Y,R26
000425 81e9      	LDD  R30,Y+1
000426 93ea      	ST   -Y,R30
000427 81a9      	LDD  R26,Y+1
000428 dfed      	RCALL _pcd8544_gotoxy
000429 91e0 0585 	LDS  R30,_gfx_addr_G101
00042b 91f0 0586 	LDS  R31,_gfx_addr_G101+1
00042d 57e9      	SUBI R30,LOW(-_gfx_buffer_G101)
00042e 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G101)
00042f 81e0      	LD   R30,Z
000430 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000432 93aa      	ST   -Y,R26
000433 940e 091e 	CALL SUBOPT_0x7
000435 9731      	SBIW R30,1
000436 57e9      	SUBI R30,LOW(-_gfx_buffer_G101)
000437 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G101)
000438 81a8      	LD   R26,Y
000439 83a0      	STD  Z+0,R26
00043a dfbb      	RCALL _pcd8544_wrdata_G101
00043b c0a5      	RJMP _0x2120009
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00043c 93ba      	ST   -Y,R27
00043d 93aa      	ST   -Y,R26
00043e 940e 0b07 	CALL __SAVELOCR4
000440 91e0 0064 	LDS  R30,100
000442 61e0      	ORI  R30,0x10
000443 940e 0921 	CALL SUBOPT_0x8
000445 61e0      	ORI  R30,0x10
000446 93e0 0065 	STS  101,R30
000448 91e0 0064 	LDS  R30,100
00044a 60e4      	ORI  R30,4
00044b 940e 0921 	CALL SUBOPT_0x8
00044d 7feb      	ANDI R30,0xFB
00044e 93e0 0065 	STS  101,R30
000450 91e0 0064 	LDS  R30,100
000452 60e2      	ORI  R30,2
000453 93e0 0064 	STS  100,R30
000455 91e0 0064 	LDS  R30,100
000457 60e1      	ORI  R30,1
000458 93e0 0064 	STS  100,R30
00045a 91e0 0064 	LDS  R30,100
00045c 60e8      	ORI  R30,8
00045d 940e 0921 	CALL SUBOPT_0x8
00045f 7fe7      	ANDI R30,0XF7
000460 93e0 0065 	STS  101,R30
000462 e0aa      	LDI  R26,LOW(10)
000463 e0b0      	LDI  R27,0
000464 940e 0991 	CALL _delay_ms
000466 91e0 0065 	LDS  R30,101
000468 60e8      	ORI  R30,8
000469 93e0 0065 	STS  101,R30
00046b 81ec      	LDD  R30,Y+4
00046c 81fd      	LDD  R31,Y+4+1
00046d 9730      	SBIW R30,0
00046e f121      	BREQ _0x2020008
00046f 81e6      	LDD  R30,Z+6
000470 70e3      	ANDI R30,LOW(0x3)
000471 2f1e      	MOV  R17,R30
000472 81ec      	LDD  R30,Y+4
000473 81fd      	LDD  R31,Y+4+1
000474 81e6      	LDD  R30,Z+6
000475 95e6      	LSR  R30
000476 95e6      	LSR  R30
000477 70e7      	ANDI R30,LOW(0x7)
000478 2f0e      	MOV  R16,R30
000479 81ec      	LDD  R30,Y+4
00047a 81fd      	LDD  R31,Y+4+1
00047b 81e7      	LDD  R30,Z+7
00047c 77ef      	ANDI R30,0x7F
00047d 2f3e      	MOV  R19,R30
00047e 81ac      	LDD  R26,Y+4
00047f 81bd      	LDD  R27,Y+4+1
000480 940e 0aca 	CALL __GETW1P
                +
000482 93e0 0504+STS _glcd_state + ( 4 ) , R30
000484 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000486 9612      	ADIW R26,2
000487 940e 0aca 	CALL __GETW1P
                +
000489 93e0 0519+STS _glcd_state + ( 25 ) , R30
00048b 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
00048d 81ac      	LDD  R26,Y+4
00048e 81bd      	LDD  R27,Y+4+1
00048f 9614      	ADIW R26,4
000490 940e 0aca 	CALL __GETW1P
000492 c00d      	RJMP _0x20200A1
                 _0x2020008:
000493 e010      	LDI  R17,LOW(0)
000494 e003      	LDI  R16,LOW(3)
000495 e332      	LDI  R19,LOW(50)
000496 e0e0      	LDI  R30,LOW(0)
000497 e0f0      	LDI  R31,HIGH(0)
                +
000498 93e0 0504+STS _glcd_state + ( 4 ) , R30
00049a 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00049c 93e0 0519+STS _glcd_state + ( 25 ) , R30
00049e 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20200A1:
                +
0004a0 93e0 051b+STS _glcd_state + ( 27 ) , R30
0004a2 93f0 051c+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0004a4 e2a1      	LDI  R26,LOW(33)
0004a5 df47      	RCALL _pcd8544_wrcmd
0004a6 2fe1      	MOV  R30,R17
0004a7 60e4      	ORI  R30,4
0004a8 2fae      	MOV  R26,R30
0004a9 df43      	RCALL _pcd8544_wrcmd
0004aa 2fe0      	MOV  R30,R16
0004ab 61e0      	ORI  R30,0x10
0004ac 2fae      	MOV  R26,R30
0004ad df3f      	RCALL _pcd8544_wrcmd
0004ae 2fe3      	MOV  R30,R19
0004af 68e0      	ORI  R30,0x80
0004b0 2fae      	MOV  R26,R30
0004b1 df3b      	RCALL _pcd8544_wrcmd
0004b2 e2a0      	LDI  R26,LOW(32)
0004b3 df39      	RCALL _pcd8544_wrcmd
0004b4 e0a1      	LDI  R26,LOW(1)
0004b5 d022      	RCALL _glcd_display
0004b6 e0e1      	LDI  R30,LOW(1)
0004b7 93e0 0500 	STS  _glcd_state,R30
0004b9 e0e0      	LDI  R30,LOW(0)
                +
0004ba 93e0 0501+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0004bc e0e1      	LDI  R30,LOW(1)
                +
0004bd 93e0 0506+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0004bf 93e0 0507+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0004c1 93e0 0508+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0004c3 efef      	LDI  R30,LOW(255)
                +
0004c4 93e0 0509+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0004c6 e0e1      	LDI  R30,LOW(1)
                +
0004c7 93e0 0510+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0004c9 e1e1     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0004ca e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0004cb 93fa      	ST   -Y,R31
0004cc 93ea      	ST   -Y,R30
0004cd efef      	LDI  R30,LOW(255)
0004ce 93ea      	ST   -Y,R30
0004cf e0a8      	LDI  R26,LOW(8)
0004d0 e0b0      	LDI  R27,0
0004d1 940e 0852 	CALL _memset
0004d3 d00f      	RCALL _glcd_clear
0004d4 e0e1      	LDI  R30,LOW(1)
0004d5 940e 0b0e 	CALL __LOADLOCR4
0004d7 c060      	RJMP _0x2120008
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0004d8 93aa      	ST   -Y,R26
0004d9 81e8      	LD   R30,Y
0004da 30e0      	CPI  R30,0
0004db f011      	BREQ _0x202000A
0004dc e0ec      	LDI  R30,LOW(12)
0004dd c001      	RJMP _0x202000B
                 _0x202000A:
0004de e0e8      	LDI  R30,LOW(8)
                 _0x202000B:
0004df 2fae      	MOV  R26,R30
0004e0 df0c      	RCALL _pcd8544_wrcmd
                 _0x2120009:
0004e1 9621      	ADIW R28,1
0004e2 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0004e3 940e 0b07 	CALL __SAVELOCR4
0004e5 e030      	LDI  R19,0
                +
0004e6 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0004e8 30e0      	CPI  R30,0
0004e9 f009      	BREQ _0x202000D
0004ea ef3f      	LDI  R19,LOW(255)
                 _0x202000D:
0004eb e0e0      	LDI  R30,LOW(0)
0004ec 93ea      	ST   -Y,R30
0004ed e0a0      	LDI  R26,LOW(0)
0004ee df27      	RCALL _pcd8544_gotoxy
                +
0004ef ef08     +LDI R16 , LOW ( 504 )
0004f0 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x202000E:
0004f1 01f8      	MOVW R30,R16
                +
0004f2 5001     +SUBI R16 , LOW ( 1 )
0004f3 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0004f4 9730      	SBIW R30,0
0004f5 f019      	BREQ _0x2020010
0004f6 2fa3      	MOV  R26,R19
0004f7 df3a      	RCALL _pcd8544_wrbyte
0004f8 cff8      	RJMP _0x202000E
                 _0x2020010:
0004f9 e0e0      	LDI  R30,LOW(0)
0004fa 93ea      	ST   -Y,R30
0004fb e0a0      	LDI  R26,LOW(0)
0004fc d348      	RCALL _glcd_moveto
0004fd 940e 0b0e 	CALL __LOADLOCR4
0004ff 940c 08ea 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G101:
                 ; .FSTART _pcd8544_wrmasked_G101
000501 93aa      	ST   -Y,R26
000502 931a      	ST   -Y,R17
000503 81ed      	LDD  R30,Y+5
000504 93ea      	ST   -Y,R30
000505 81ad      	LDD  R26,Y+5
000506 df1d      	RCALL _pcd8544_rdbyte
000507 2f1e      	MOV  R17,R30
000508 81e9      	LDD  R30,Y+1
000509 30e7      	CPI  R30,LOW(0x7)
00050a f011      	BREQ _0x2020020
00050b 30e8      	CPI  R30,LOW(0x8)
00050c f439      	BRNE _0x2020021
                 _0x2020020:
00050d 81eb      	LDD  R30,Y+3
00050e 93ea      	ST   -Y,R30
00050f 81aa      	LDD  R26,Y+2
000510 940e 0886 	CALL _glcd_mappixcolor1bit
000512 83eb      	STD  Y+3,R30
000513 c008      	RJMP _0x2020022
                 _0x2020021:
000514 30e3      	CPI  R30,LOW(0x3)
000515 f421      	BRNE _0x2020024
000516 81eb      	LDD  R30,Y+3
000517 95e0      	COM  R30
000518 83eb      	STD  Y+3,R30
000519 c002      	RJMP _0x2020025
                 _0x2020024:
00051a 30e0      	CPI  R30,0
00051b f421      	BRNE _0x2020026
                 _0x2020025:
                 _0x2020022:
00051c 81ea      	LDD  R30,Y+2
00051d 95e0      	COM  R30
00051e 231e      	AND  R17,R30
00051f c002      	RJMP _0x2020027
                 _0x2020026:
000520 30e2      	CPI  R30,LOW(0x2)
000521 f429      	BRNE _0x2020028
                 _0x2020027:
000522 81ea      	LDD  R30,Y+2
000523 81ab      	LDD  R26,Y+3
000524 23ea      	AND  R30,R26
000525 2b1e      	OR   R17,R30
000526 c00e      	RJMP _0x202001E
                 _0x2020028:
000527 30e1      	CPI  R30,LOW(0x1)
000528 f429      	BRNE _0x2020029
000529 81ea      	LDD  R30,Y+2
00052a 81ab      	LDD  R26,Y+3
00052b 23ea      	AND  R30,R26
00052c 271e      	EOR  R17,R30
00052d c007      	RJMP _0x202001E
                 _0x2020029:
00052e 30e4      	CPI  R30,LOW(0x4)
00052f f429      	BRNE _0x202001E
000530 81ea      	LDD  R30,Y+2
000531 95e0      	COM  R30
000532 81ab      	LDD  R26,Y+3
000533 2bea      	OR   R30,R26
000534 231e      	AND  R17,R30
                 _0x202001E:
000535 2fa1      	MOV  R26,R17
000536 defb      	RCALL _pcd8544_wrbyte
000537 8118      	LDD  R17,Y+0
                 _0x2120008:
000538 9626      	ADIW R28,6
000539 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00053a 93aa      	ST   -Y,R26
00053b 9723      	SBIW R28,3
00053c 940e 0b05 	CALL __SAVELOCR6
00053e 89a8      	LDD  R26,Y+16
00053f 35a4      	CPI  R26,LOW(0x54)
000540 f448      	BRSH _0x202002C
000541 85af      	LDD  R26,Y+15
000542 33a0      	CPI  R26,LOW(0x30)
000543 f430      	BRSH _0x202002C
000544 85ae      	LDD  R26,Y+14
000545 30a0      	CPI  R26,LOW(0x0)
000546 f019      	BREQ _0x202002C
000547 85ad      	LDD  R26,Y+13
000548 30a0      	CPI  R26,LOW(0x0)
000549 f409      	BRNE _0x202002B
                 _0x202002C:
00054a c1d5      	RJMP _0x2120007
                 _0x202002B:
00054b 85ee      	LDD  R30,Y+14
00054c 87e8      	STD  Y+8,R30
00054d 89a8      	LDD  R26,Y+16
00054e 27bb      	CLR  R27
00054f 85ee      	LDD  R30,Y+14
000550 e0f0      	LDI  R31,0
000551 0fae      	ADD  R26,R30
000552 1fbf      	ADC  R27,R31
000553 35a5      	CPI  R26,LOW(0x55)
000554 e0e0      	LDI  R30,HIGH(0x55)
000555 07be      	CPC  R27,R30
000556 f020      	BRLO _0x202002E
000557 89a8      	LDD  R26,Y+16
000558 e5e4      	LDI  R30,LOW(84)
000559 1bea      	SUB  R30,R26
00055a 87ee      	STD  Y+14,R30
                 _0x202002E:
00055b 852d      	LDD  R18,Y+13
00055c 85af      	LDD  R26,Y+15
00055d 27bb      	CLR  R27
00055e 85ed      	LDD  R30,Y+13
00055f e0f0      	LDI  R31,0
000560 0fae      	ADD  R26,R30
000561 1fbf      	ADC  R27,R31
000562 97d1      	SBIW R26,49
000563 f020      	BRLO _0x202002F
000564 85af      	LDD  R26,Y+15
000565 e3e0      	LDI  R30,LOW(48)
000566 1bea      	SUB  R30,R26
000567 87ed      	STD  Y+13,R30
                 _0x202002F:
000568 85a9      	LDD  R26,Y+9
000569 30a6      	CPI  R26,LOW(0x6)
00056a f009      	BREQ PC+2
00056b c05b      	RJMP _0x2020030
00056c 85ec      	LDD  R30,Y+12
00056d 30e1      	CPI  R30,LOW(0x1)
00056e f409      	BRNE _0x2020034
00056f c1b0      	RJMP _0x2120007
                 _0x2020034:
000570 30e3      	CPI  R30,LOW(0x3)
000571 f439      	BRNE _0x2020037
                +
000572 91e0 051b+LDS R30 , _glcd_state + ( 27 )
000574 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000576 9730      	SBIW R30,0
000577 f409      	BRNE _0x2020036
000578 c1a7      	RJMP _0x2120007
                 _0x2020036:
                 _0x2020037:
000579 8508      	LDD  R16,Y+8
00057a 85ed      	LDD  R30,Y+13
00057b 95e6      	LSR  R30
00057c 95e6      	LSR  R30
00057d 95e6      	LSR  R30
00057e 2f3e      	MOV  R19,R30
00057f 2fe2      	MOV  R30,R18
000580 70e7      	ANDI R30,LOW(0x7)
000581 f419      	BRNE _0x2020039
000582 85ad      	LDD  R26,Y+13
000583 172a      	CP   R18,R26
000584 f0e9      	BREQ _0x2020038
                 _0x2020039:
000585 2fa0      	MOV  R26,R16
000586 27bb      	CLR  R27
000587 2fe3      	MOV  R30,R19
000588 e0f0      	LDI  R31,0
000589 940e 0ac2 	CALL __MULW12U
00058b 85aa      	LDD  R26,Y+10
00058c 85bb      	LDD  R27,Y+10+1
00058d 940e 0926 	CALL SUBOPT_0x9
00058f 9526      	LSR  R18
000590 9526      	LSR  R18
000591 9526      	LSR  R18
000592 2f53      	MOV  R21,R19
                 _0x202003B:
000593 935f      	PUSH R21
000594 5f5f      	SUBI R21,-1
000595 2fe2      	MOV  R30,R18
000596 91af      	POP  R26
000597 17ea      	CP   R30,R26
000598 f048      	BRLO _0x202003D
000599 2f10      	MOV  R17,R16
                 _0x202003E:
00059a 2fe1      	MOV  R30,R17
00059b 5011      	SUBI R17,1
00059c 30e0      	CPI  R30,0
00059d f019      	BREQ _0x2020040
00059e 940e 092b 	CALL SUBOPT_0xA
0005a0 cff9      	RJMP _0x202003E
                 _0x2020040:
0005a1 cff1      	RJMP _0x202003B
                 _0x202003D:
                 _0x2020038:
0005a2 85ae      	LDD  R26,Y+14
0005a3 170a      	CP   R16,R26
0005a4 f111      	BREQ _0x2020041
0005a5 85ee      	LDD  R30,Y+14
0005a6 85aa      	LDD  R26,Y+10
0005a7 85bb      	LDD  R27,Y+10+1
0005a8 e0f0      	LDI  R31,0
0005a9 940e 0926 	CALL SUBOPT_0x9
0005ab 85ed      	LDD  R30,Y+13
0005ac 70e7      	ANDI R30,LOW(0x7)
0005ad f009      	BREQ _0x2020042
0005ae 5f3f      	SUBI R19,-LOW(1)
                 _0x2020042:
0005af e020      	LDI  R18,LOW(0)
                 _0x2020043:
0005b0 932f      	PUSH R18
0005b1 5f2f      	SUBI R18,-1
0005b2 2fe3      	MOV  R30,R19
0005b3 91af      	POP  R26
0005b4 17ae      	CP   R26,R30
0005b5 f488      	BRSH _0x2020045
0005b6 851e      	LDD  R17,Y+14
                 _0x2020046:
0005b7 931f      	PUSH R17
0005b8 5f1f      	SUBI R17,-1
0005b9 2fe0      	MOV  R30,R16
0005ba 91af      	POP  R26
0005bb 17ae      	CP   R26,R30
0005bc f418      	BRSH _0x2020048
0005bd 940e 092b 	CALL SUBOPT_0xA
0005bf cff7      	RJMP _0x2020046
                 _0x2020048:
0005c0 85ee      	LDD  R30,Y+14
0005c1 81ae      	LDD  R26,Y+6
0005c2 81bf      	LDD  R27,Y+6+1
0005c3 e0f0      	LDI  R31,0
0005c4 940e 0926 	CALL SUBOPT_0x9
0005c6 cfe9      	RJMP _0x2020043
                 _0x2020045:
                 _0x2020041:
                 _0x2020030:
0005c7 85ef      	LDD  R30,Y+15
0005c8 70e7      	ANDI R30,LOW(0x7)
0005c9 2f3e      	MOV  R19,R30
                 _0x2020049:
0005ca 85ed      	LDD  R30,Y+13
0005cb 30e0      	CPI  R30,0
0005cc f409      	BRNE PC+2
0005cd c152      	RJMP _0x202004B
0005ce 85ea      	LDD  R30,Y+10
0005cf 85fb      	LDD  R31,Y+10+1
0005d0 83ee      	STD  Y+6,R30
0005d1 83ff      	STD  Y+6+1,R31
0005d2 e010      	LDI  R17,LOW(0)
0005d3 8908      	LDD  R16,Y+16
0005d4 3030      	CPI  R19,0
0005d5 f009      	BREQ PC+2
0005d6 c066      	RJMP _0x202004C
0005d7 85ad      	LDD  R26,Y+13
0005d8 30a8      	CPI  R26,LOW(0x8)
0005d9 f408      	BRSH PC+2
0005da c05d      	RJMP _0x202004D
0005db 85e9      	LDD  R30,Y+9
0005dc 30e0      	CPI  R30,0
0005dd f011      	BREQ _0x2020052
0005de 30e3      	CPI  R30,LOW(0x3)
0005df f409      	BRNE _0x2020053
                 _0x2020052:
0005e0 c002      	RJMP _0x2020054
                 _0x2020053:
0005e1 30e7      	CPI  R30,LOW(0x7)
0005e2 f409      	BRNE _0x2020055
                 _0x2020054:
0005e3 c002      	RJMP _0x2020056
                 _0x2020055:
0005e4 30e8      	CPI  R30,LOW(0x8)
0005e5 f409      	BRNE _0x2020057
                 _0x2020056:
0005e6 c002      	RJMP _0x2020058
                 _0x2020057:
0005e7 30e9      	CPI  R30,LOW(0x9)
0005e8 f409      	BRNE _0x2020059
                 _0x2020058:
0005e9 c002      	RJMP _0x202005A
                 _0x2020059:
0005ea 30ea      	CPI  R30,LOW(0xA)
0005eb f421      	BRNE _0x202005B
                 _0x202005A:
0005ec 930a      	ST   -Y,R16
0005ed 89a8      	LDD  R26,Y+16
0005ee de27      	RCALL _pcd8544_gotoxy
0005ef c004      	RJMP _0x2020050
                 _0x202005B:
0005f0 30e6      	CPI  R30,LOW(0x6)
0005f1 f411      	BRNE _0x2020050
0005f2 940e 0938 	CALL SUBOPT_0xB
                 _0x2020050:
                 _0x202005D:
0005f4 931f      	PUSH R17
0005f5 5f1f      	SUBI R17,-1
0005f6 85ee      	LDD  R30,Y+14
0005f7 91af      	POP  R26
0005f8 17ae      	CP   R26,R30
0005f9 f5b8      	BRSH _0x202005F
0005fa 85a9      	LDD  R26,Y+9
0005fb 30a6      	CPI  R26,LOW(0x6)
0005fc f469      	BRNE _0x2020060
0005fd 940e 093c 	CALL SUBOPT_0xC
0005ff 93fa      	ST   -Y,R31
000600 93ea      	ST   -Y,R30
000601 940e 091e 	CALL SUBOPT_0x7
000603 9731      	SBIW R30,1
000604 57e9      	SUBI R30,LOW(-_gfx_buffer_G101)
000605 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G101)
000606 81a0      	LD   R26,Z
000607 940e 08cd 	CALL _glcd_writemem
000609 c026      	RJMP _0x2020061
                 _0x2020060:
00060a 85e9      	LDD  R30,Y+9
00060b 30e9      	CPI  R30,LOW(0x9)
00060c f411      	BRNE _0x2020065
00060d e050      	LDI  R21,LOW(0)
00060e c00e      	RJMP _0x2020066
                 _0x2020065:
00060f 30ea      	CPI  R30,LOW(0xA)
000610 f411      	BRNE _0x2020064
000611 ef5f      	LDI  R21,LOW(255)
000612 c00a      	RJMP _0x2020066
                 _0x2020064:
000613 940e 093c 	CALL SUBOPT_0xC
000615 940e 0945 	CALL SUBOPT_0xD
000617 2f5e      	MOV  R21,R30
000618 85e9      	LDD  R30,Y+9
000619 30e7      	CPI  R30,LOW(0x7)
00061a f011      	BREQ _0x202006D
00061b 30e8      	CPI  R30,LOW(0x8)
00061c f421      	BRNE _0x202006E
                 _0x202006D:
                 _0x2020066:
00061d 940e 094b 	CALL SUBOPT_0xE
00061f 2f5e      	MOV  R21,R30
000620 c006      	RJMP _0x202006F
                 _0x202006E:
000621 30e3      	CPI  R30,LOW(0x3)
000622 f411      	BRNE _0x2020071
000623 9550      	COM  R21
000624 c002      	RJMP _0x2020072
                 _0x2020071:
000625 30e0      	CPI  R30,0
000626 f419      	BRNE _0x2020074
                 _0x2020072:
                 _0x202006F:
000627 2fa5      	MOV  R26,R21
000628 ddcd      	RCALL _pcd8544_wrdata_G101
000629 c006      	RJMP _0x202006B
                 _0x2020074:
00062a 940e 094f 	CALL SUBOPT_0xF
00062c efef      	LDI  R30,LOW(255)
00062d 93ea      	ST   -Y,R30
00062e 85ad      	LDD  R26,Y+13
00062f ded1      	RCALL _pcd8544_wrmasked_G101
                 _0x202006B:
                 _0x2020061:
000630 cfc3      	RJMP _0x202005D
                 _0x202005F:
000631 85ef      	LDD  R30,Y+15
000632 5fe8      	SUBI R30,-LOW(8)
000633 87ef      	STD  Y+15,R30
000634 85ed      	LDD  R30,Y+13
000635 50e8      	SUBI R30,LOW(8)
000636 87ed      	STD  Y+13,R30
000637 c0df      	RJMP _0x2020075
                 _0x202004D:
000638 855d      	LDD  R21,Y+13
000639 e020      	LDI  R18,LOW(0)
00063a e0e0      	LDI  R30,LOW(0)
00063b 87ed      	STD  Y+13,R30
00063c c081      	RJMP _0x2020076
                 _0x202004C:
00063d 2fe3      	MOV  R30,R19
00063e 85ad      	LDD  R26,Y+13
00063f 0fae      	ADD  R26,R30
000640 30a9      	CPI  R26,LOW(0x9)
000641 f420      	BRSH _0x2020077
000642 852d      	LDD  R18,Y+13
000643 e0e0      	LDI  R30,LOW(0)
000644 87ed      	STD  Y+13,R30
000645 c003      	RJMP _0x2020078
                 _0x2020077:
000646 e0e8      	LDI  R30,LOW(8)
000647 1be3      	SUB  R30,R19
000648 2f2e      	MOV  R18,R30
                 _0x2020078:
000649 933a      	ST   -Y,R19
00064a 2fa2      	MOV  R26,R18
00064b 940e 087b 	CALL _glcd_getmask
00064d 2f4e      	MOV  R20,R30
00064e 85e9      	LDD  R30,Y+9
00064f 30e6      	CPI  R30,LOW(0x6)
000650 f529      	BRNE _0x202007C
000651 940e 0938 	CALL SUBOPT_0xB
                 _0x202007D:
000653 931f      	PUSH R17
000654 5f1f      	SUBI R17,-1
000655 85ee      	LDD  R30,Y+14
000656 91af      	POP  R26
000657 17ae      	CP   R26,R30
000658 f4e0      	BRSH _0x202007F
000659 940e 091e 	CALL SUBOPT_0x7
00065b 9731      	SBIW R30,1
00065c 57e9      	SUBI R30,LOW(-_gfx_buffer_G101)
00065d 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G101)
00065e 81e0      	LD   R30,Z
00065f 23e4      	AND  R30,R20
000660 2fae      	MOV  R26,R30
000661 2fe3      	MOV  R30,R19
000662 940e 0ab5 	CALL __LSRB12
000664 940e 0955 	CALL SUBOPT_0x10
000666 2fe3      	MOV  R30,R19
000667 2fa4      	MOV  R26,R20
000668 940e 0ab5 	CALL __LSRB12
00066a 95e0      	COM  R30
00066b 21e1      	AND  R30,R1
00066c 2b5e      	OR   R21,R30
00066d 940e 093c 	CALL SUBOPT_0xC
00066f 93fa      	ST   -Y,R31
000670 93ea      	ST   -Y,R30
000671 2fa5      	MOV  R26,R21
000672 940e 08cd 	CALL _glcd_writemem
000674 cfde      	RJMP _0x202007D
                 _0x202007F:
000675 c02c      	RJMP _0x202007B
                 _0x202007C:
000676 30e9      	CPI  R30,LOW(0x9)
000677 f411      	BRNE _0x2020080
000678 e050      	LDI  R21,LOW(0)
000679 c003      	RJMP _0x2020081
                 _0x2020080:
00067a 30ea      	CPI  R30,LOW(0xA)
00067b f4a9      	BRNE _0x2020087
00067c ef5f      	LDI  R21,LOW(255)
                 _0x2020081:
00067d 940e 094b 	CALL SUBOPT_0xE
00067f 2fae      	MOV  R26,R30
000680 2fe3      	MOV  R30,R19
000681 940e 0aad 	CALL __LSLB12
000683 2f5e      	MOV  R21,R30
                 _0x2020084:
000684 931f      	PUSH R17
000685 5f1f      	SUBI R17,-1
000686 85ee      	LDD  R30,Y+14
000687 91af      	POP  R26
000688 17ae      	CP   R26,R30
000689 f430      	BRSH _0x2020086
00068a 940e 094f 	CALL SUBOPT_0xF
00068c 934a      	ST   -Y,R20
00068d e0a0      	LDI  R26,LOW(0)
00068e de72      	RCALL _pcd8544_wrmasked_G101
00068f cff4      	RJMP _0x2020084
                 _0x2020086:
000690 c011      	RJMP _0x202007B
                 _0x2020087:
                 _0x2020088:
000691 931f      	PUSH R17
000692 5f1f      	SUBI R17,-1
000693 85ee      	LDD  R30,Y+14
000694 91af      	POP  R26
000695 17ae      	CP   R26,R30
000696 f458      	BRSH _0x202008A
000697 940e 0960 	CALL SUBOPT_0x11
000699 2fae      	MOV  R26,R30
00069a 2fe3      	MOV  R30,R19
00069b 940e 0aad 	CALL __LSLB12
00069d 93ea      	ST   -Y,R30
00069e 934a      	ST   -Y,R20
00069f 85ad      	LDD  R26,Y+13
0006a0 de60      	RCALL _pcd8544_wrmasked_G101
0006a1 cfef      	RJMP _0x2020088
                 _0x202008A:
                 _0x202007B:
0006a2 85ed      	LDD  R30,Y+13
0006a3 30e0      	CPI  R30,0
0006a4 f409      	BRNE _0x202008B
0006a5 c07a      	RJMP _0x202004B
                 _0x202008B:
0006a6 85ad      	LDD  R26,Y+13
0006a7 30a8      	CPI  R26,LOW(0x8)
0006a8 f428      	BRSH _0x202008C
0006a9 85ed      	LDD  R30,Y+13
0006aa 1be2      	SUB  R30,R18
0006ab 2f5e      	MOV  R21,R30
0006ac e0e0      	LDI  R30,LOW(0)
0006ad c003      	RJMP _0x20200A2
                 _0x202008C:
0006ae 2f53      	MOV  R21,R19
0006af 85ed      	LDD  R30,Y+13
0006b0 50e8      	SUBI R30,LOW(8)
                 _0x20200A2:
0006b1 87ed      	STD  Y+13,R30
0006b2 e010      	LDI  R17,LOW(0)
0006b3 85ef      	LDD  R30,Y+15
0006b4 5fe8      	SUBI R30,-LOW(8)
0006b5 87ef      	STD  Y+15,R30
0006b6 e0e8      	LDI  R30,LOW(8)
0006b7 1be3      	SUB  R30,R19
0006b8 2f2e      	MOV  R18,R30
0006b9 8908      	LDD  R16,Y+16
0006ba 85ea      	LDD  R30,Y+10
0006bb 85fb      	LDD  R31,Y+10+1
0006bc 83ee      	STD  Y+6,R30
0006bd 83ff      	STD  Y+6+1,R31
                 _0x2020076:
0006be 2fe5      	MOV  R30,R21
0006bf e0f0      	LDI  R31,0
0006c0 57ee      	SUBI R30,LOW(-__glcd_mask*2)
0006c1 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0006c2 9144      	LPM  R20,Z
0006c3 85e9      	LDD  R30,Y+9
0006c4 30e6      	CPI  R30,LOW(0x6)
0006c5 f529      	BRNE _0x2020091
0006c6 940e 0938 	CALL SUBOPT_0xB
                 _0x2020092:
0006c8 931f      	PUSH R17
0006c9 5f1f      	SUBI R17,-1
0006ca 85ee      	LDD  R30,Y+14
0006cb 91af      	POP  R26
0006cc 17ae      	CP   R26,R30
0006cd f4e0      	BRSH _0x2020094
0006ce 940e 091e 	CALL SUBOPT_0x7
0006d0 9731      	SBIW R30,1
0006d1 57e9      	SUBI R30,LOW(-_gfx_buffer_G101)
0006d2 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G101)
0006d3 81e0      	LD   R30,Z
0006d4 23e4      	AND  R30,R20
0006d5 2fae      	MOV  R26,R30
0006d6 2fe2      	MOV  R30,R18
0006d7 940e 0aad 	CALL __LSLB12
0006d9 940e 0955 	CALL SUBOPT_0x10
0006db 2fe2      	MOV  R30,R18
0006dc 2fa4      	MOV  R26,R20
0006dd 940e 0aad 	CALL __LSLB12
0006df 95e0      	COM  R30
0006e0 21e1      	AND  R30,R1
0006e1 2b5e      	OR   R21,R30
0006e2 940e 093c 	CALL SUBOPT_0xC
0006e4 93fa      	ST   -Y,R31
0006e5 93ea      	ST   -Y,R30
0006e6 2fa5      	MOV  R26,R21
0006e7 940e 08cd 	CALL _glcd_writemem
0006e9 cfde      	RJMP _0x2020092
                 _0x2020094:
0006ea c02c      	RJMP _0x2020090
                 _0x2020091:
0006eb 30e9      	CPI  R30,LOW(0x9)
0006ec f411      	BRNE _0x2020095
0006ed e050      	LDI  R21,LOW(0)
0006ee c003      	RJMP _0x2020096
                 _0x2020095:
0006ef 30ea      	CPI  R30,LOW(0xA)
0006f0 f4a9      	BRNE _0x202009C
0006f1 ef5f      	LDI  R21,LOW(255)
                 _0x2020096:
0006f2 940e 094b 	CALL SUBOPT_0xE
0006f4 2fae      	MOV  R26,R30
0006f5 2fe2      	MOV  R30,R18
0006f6 940e 0ab5 	CALL __LSRB12
0006f8 2f5e      	MOV  R21,R30
                 _0x2020099:
0006f9 931f      	PUSH R17
0006fa 5f1f      	SUBI R17,-1
0006fb 85ee      	LDD  R30,Y+14
0006fc 91af      	POP  R26
0006fd 17ae      	CP   R26,R30
0006fe f430      	BRSH _0x202009B
0006ff 940e 094f 	CALL SUBOPT_0xF
000701 934a      	ST   -Y,R20
000702 e0a0      	LDI  R26,LOW(0)
000703 ddfd      	RCALL _pcd8544_wrmasked_G101
000704 cff4      	RJMP _0x2020099
                 _0x202009B:
000705 c011      	RJMP _0x2020090
                 _0x202009C:
                 _0x202009D:
000706 931f      	PUSH R17
000707 5f1f      	SUBI R17,-1
000708 85ee      	LDD  R30,Y+14
000709 91af      	POP  R26
00070a 17ae      	CP   R26,R30
00070b f458      	BRSH _0x202009F
00070c 940e 0960 	CALL SUBOPT_0x11
00070e 2fae      	MOV  R26,R30
00070f 2fe2      	MOV  R30,R18
000710 940e 0ab5 	CALL __LSRB12
000712 93ea      	ST   -Y,R30
000713 934a      	ST   -Y,R20
000714 85ad      	LDD  R26,Y+13
000715 ddeb      	RCALL _pcd8544_wrmasked_G101
000716 cfef      	RJMP _0x202009D
                 _0x202009F:
                 _0x2020090:
                 _0x2020075:
000717 85e8      	LDD  R30,Y+8
000718 85aa      	LDD  R26,Y+10
000719 85bb      	LDD  R27,Y+10+1
00071a e0f0      	LDI  R31,0
00071b 0fea      	ADD  R30,R26
00071c 1ffb      	ADC  R31,R27
00071d 87ea      	STD  Y+10,R30
00071e 87fb      	STD  Y+10+1,R31
00071f ceaa      	RJMP _0x2020049
                 _0x202004B:
                 _0x2120007:
000720 940e 0b0c 	CALL __LOADLOCR6
000722 9661      	ADIW R28,17
000723 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000724 940e 096d 	CALL SUBOPT_0x12
000726 f024      	BRLT _0x2040003
000727 e0e0      	LDI  R30,LOW(0)
000728 e0f0      	LDI  R31,HIGH(0)
000729 940c 0884 	JMP  _0x2120003
                 _0x2040003:
00072b 81a8      	LD   R26,Y
00072c 81b9      	LDD  R27,Y+1
00072d 35a4      	CPI  R26,LOW(0x54)
00072e e0e0      	LDI  R30,HIGH(0x54)
00072f 07be      	CPC  R27,R30
000730 f024      	BRLT _0x2040004
000731 e5e3      	LDI  R30,LOW(83)
000732 e0f0      	LDI  R31,HIGH(83)
000733 940c 0884 	JMP  _0x2120003
                 _0x2040004:
000735 81e8      	LD   R30,Y
000736 81f9      	LDD  R31,Y+1
000737 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000739 940e 096d 	CALL SUBOPT_0x12
00073b f024      	BRLT _0x2040005
00073c e0e0      	LDI  R30,LOW(0)
00073d e0f0      	LDI  R31,HIGH(0)
00073e 940c 0884 	JMP  _0x2120003
                 _0x2040005:
000740 81a8      	LD   R26,Y
000741 81b9      	LDD  R27,Y+1
000742 97d0      	SBIW R26,48
000743 f024      	BRLT _0x2040006
000744 e2ef      	LDI  R30,LOW(47)
000745 e0f0      	LDI  R31,HIGH(47)
000746 940c 0884 	JMP  _0x2120003
                 _0x2040006:
000748 81e8      	LD   R30,Y
000749 81f9      	LDD  R31,Y+1
00074a 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G102:
                 ; .FSTART _glcd_getcharw_G102
00074c 93ba      	ST   -Y,R27
00074d 93aa      	ST   -Y,R26
00074e 9723      	SBIW R28,3
00074f 940e 0974 	CALL SUBOPT_0x13
000751 018f      	MOVW R16,R30
000752 2e00      	MOV  R0,R16
000753 2a01      	OR   R0,R17
000754 f419      	BRNE _0x204000B
000755 e0e0      	LDI  R30,LOW(0)
000756 e0f0      	LDI  R31,HIGH(0)
000757 c05f      	RJMP _0x2120006
                 _0x204000B:
000758 940e 097b 	CALL SUBOPT_0x14
00075a 820f      	STD  Y+7,R0
00075b 940e 097b 	CALL SUBOPT_0x14
00075d 820e      	STD  Y+6,R0
00075e 940e 097b 	CALL SUBOPT_0x14
000760 8608      	STD  Y+8,R0
000761 85eb      	LDD  R30,Y+11
000762 85a8      	LDD  R26,Y+8
000763 17ea      	CP   R30,R26
000764 f418      	BRSH _0x204000C
000765 e0e0      	LDI  R30,LOW(0)
000766 e0f0      	LDI  R31,HIGH(0)
000767 c04f      	RJMP _0x2120006
                 _0x204000C:
000768 01f8      	MOVW R30,R16
                +
000769 5f0f     +SUBI R16 , LOW ( - 1 )
00076a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00076b 9154      	LPM  R21,Z
00076c 85a8      	LDD  R26,Y+8
00076d 27bb      	CLR  R27
00076e 27ee      	CLR  R30
00076f 0fa5      	ADD  R26,R21
000770 1fbe      	ADC  R27,R30
000771 85eb      	LDD  R30,Y+11
000772 e0f0      	LDI  R31,0
000773 17ea      	CP   R30,R26
000774 07fb      	CPC  R31,R27
000775 f018      	BRLO _0x204000D
000776 e0e0      	LDI  R30,LOW(0)
000777 e0f0      	LDI  R31,HIGH(0)
000778 c03e      	RJMP _0x2120006
                 _0x204000D:
000779 81ee      	LDD  R30,Y+6
00077a 95e6      	LSR  R30
00077b 95e6      	LSR  R30
00077c 95e6      	LSR  R30
00077d 2f4e      	MOV  R20,R30
00077e 81ee      	LDD  R30,Y+6
00077f 70e7      	ANDI R30,LOW(0x7)
000780 f009      	BREQ _0x204000E
000781 5f4f      	SUBI R20,-LOW(1)
                 _0x204000E:
000782 81ef      	LDD  R30,Y+7
000783 30e0      	CPI  R30,0
000784 f0a1      	BREQ _0x204000F
000785 85a9      	LDD  R26,Y+9
000786 85ba      	LDD  R27,Y+9+1
000787 93ec      	ST   X,R30
000788 85a8      	LDD  R26,Y+8
000789 85eb      	LDD  R30,Y+11
00078a 1bea      	SUB  R30,R26
00078b e0f0      	LDI  R31,0
00078c 01df      	MOVW R26,R30
00078d 81ef      	LDD  R30,Y+7
00078e e0f0      	LDI  R31,0
00078f 940e 0ac2 	CALL __MULW12U
000791 01df      	MOVW R26,R30
000792 2fe4      	MOV  R30,R20
000793 e0f0      	LDI  R31,0
000794 940e 0ac2 	CALL __MULW12U
000796 0fe0      	ADD  R30,R16
000797 1ff1      	ADC  R31,R17
000798 c01e      	RJMP _0x2120006
                 _0x204000F:
000799 0198      	MOVW R18,R16
00079a 2fe5      	MOV  R30,R21
00079b e0f0      	LDI  R31,0
                +
00079c 0f0e     +ADD R16 , R30
00079d 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2040010:
00079e 85a8      	LDD  R26,Y+8
00079f 5faf      	SUBI R26,-LOW(1)
0007a0 87a8      	STD  Y+8,R26
0007a1 50a1      	SUBI R26,LOW(1)
0007a2 85eb      	LDD  R30,Y+11
0007a3 17ae      	CP   R26,R30
0007a4 f460      	BRSH _0x2040012
0007a5 01f9      	MOVW R30,R18
                +
0007a6 5f2f     +SUBI R18 , LOW ( - 1 )
0007a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0007a8 91a4      	LPM  R26,Z
0007a9 e0b0      	LDI  R27,0
0007aa 2fe4      	MOV  R30,R20
0007ab e0f0      	LDI  R31,0
0007ac 940e 0ac2 	CALL __MULW12U
                +
0007ae 0f0e     +ADD R16 , R30
0007af 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0007b0 cfed      	RJMP _0x2040010
                 _0x2040012:
0007b1 01f9      	MOVW R30,R18
0007b2 91e4      	LPM  R30,Z
0007b3 85a9      	LDD  R26,Y+9
0007b4 85ba      	LDD  R27,Y+9+1
0007b5 93ec      	ST   X,R30
0007b6 01f8      	MOVW R30,R16
                 _0x2120006:
0007b7 940e 0b0c 	CALL __LOADLOCR6
0007b9 962c      	ADIW R28,12
0007ba 9508      	RET
                 ; .FEND
                 _glcd_new_line_G102:
                 ; .FSTART _glcd_new_line_G102
0007bb e0e0      	LDI  R30,LOW(0)
                +
0007bc 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0007be 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007c0 27bb      	CLR  R27
0007c1 940e 0980 	CALL SUBOPT_0x15
0007c3 e0f0      	LDI  R31,0
0007c4 0fae      	ADD  R26,R30
0007c5 1fbf      	ADC  R27,R31
                +
0007c6 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007c8 e0f0      	LDI  R31,0
0007c9 0fae      	ADD  R26,R30
0007ca 1fbf      	ADC  R27,R31
0007cb df6d      	RCALL _glcd_clipy
                +
0007cc 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007ce 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0007cf 93aa      	ST   -Y,R26
0007d0 9721      	SBIW R28,1
0007d1 940e 0974 	CALL SUBOPT_0x13
0007d3 9730      	SBIW R30,0
0007d4 f409      	BRNE PC+2
0007d5 c055      	RJMP _0x204001F
0007d6 81af      	LDD  R26,Y+7
0007d7 30aa      	CPI  R26,LOW(0xA)
0007d8 f409      	BRNE _0x2040020
0007d9 c04f      	RJMP _0x2040021
                 _0x2040020:
0007da 81ef      	LDD  R30,Y+7
0007db 93ea      	ST   -Y,R30
0007dc 01de      	MOVW R26,R28
0007dd 9617      	ADIW R26,7
0007de df6d      	RCALL _glcd_getcharw_G102
0007df 01af      	MOVW R20,R30
0007e0 9730      	SBIW R30,0
0007e1 f409      	BRNE _0x2040022
0007e2 c04a      	RJMP _0x2120005
                 _0x2040022:
                +
0007e3 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0007e5 81ae      	LDD  R26,Y+6
0007e6 0fea      	ADD  R30,R26
0007e7 2f3e      	MOV  R19,R30
                +
0007e8 91a0 0502+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0007ea 27bb      	CLR  R27
0007eb e0f0      	LDI  R31,0
0007ec 0fea      	ADD  R30,R26
0007ed 1ffb      	ADC  R31,R27
0007ee 018f      	MOVW R16,R30
                +
0007ef 3505     +CPI R16 , LOW ( 85 )
0007f0 e0e0     +LDI R30 , HIGH ( 85 )
0007f1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0007f2 f018      	BRLO _0x2040023
0007f3 2f03      	MOV  R16,R19
0007f4 2711      	CLR  R17
0007f5 dfc5      	RCALL _glcd_new_line_G102
                 _0x2040023:
                +
0007f6 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007f8 93ea      	ST   -Y,R30
                +
0007f9 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0007fb 93ea      	ST   -Y,R30
0007fc 85e8      	LDD  R30,Y+8
0007fd 93ea      	ST   -Y,R30
0007fe 940e 0980 	CALL SUBOPT_0x15
000800 93ea      	ST   -Y,R30
000801 e0e1      	LDI  R30,LOW(1)
000802 93ea      	ST   -Y,R30
000803 935a      	ST   -Y,R21
000804 934a      	ST   -Y,R20
000805 e0a7      	LDI  R26,LOW(7)
000806 dd33      	RCALL _glcd_block
                +
000807 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000809 81ae      	LDD  R26,Y+6
00080a 0fea      	ADD  R30,R26
00080b 93ea      	ST   -Y,R30
                +
00080c 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00080e 93ea      	ST   -Y,R30
                +
00080f 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000811 93ea      	ST   -Y,R30
000812 940e 0980 	CALL SUBOPT_0x15
000814 940e 0987 	CALL SUBOPT_0x16
                +
000816 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000818 93ea      	ST   -Y,R30
                +
000819 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00081b 940e 0980 	CALL SUBOPT_0x15
00081d 0fea      	ADD  R30,R26
00081e 93ea      	ST   -Y,R30
00081f 933a      	ST   -Y,R19
                +
000820 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000822 940e 0987 	CALL SUBOPT_0x16
000824 e5e4      	LDI  R30,LOW(84)
000825 e0f0      	LDI  R31,HIGH(84)
000826 17e0      	CP   R30,R16
000827 07f1      	CPC  R31,R17
000828 f411      	BRNE _0x2040024
                 _0x2040021:
000829 df91      	RCALL _glcd_new_line_G102
00082a c002      	RJMP _0x2120005
                 _0x2040024:
                 _0x204001F:
                +
00082b 9300 0502+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120005:
00082d 940e 0b0c 	CALL __LOADLOCR6
00082f 9628      	ADIW R28,8
000830 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000831 93ba      	ST   -Y,R27
000832 93aa      	ST   -Y,R26
000833 931a      	ST   -Y,R17
000834 81ec      	LDD  R30,Y+4
000835 93ea      	ST   -Y,R30
000836 81ac      	LDD  R26,Y+4
000837 d00d      	RCALL _glcd_moveto
                 _0x2040025:
000838 81a9      	LDD  R26,Y+1
000839 81ba      	LDD  R27,Y+1+1
00083a 91ed      	LD   R30,X+
00083b 83a9      	STD  Y+1,R26
00083c 83ba      	STD  Y+1+1,R27
00083d 2f1e      	MOV  R17,R30
00083e 30e0      	CPI  R30,0
00083f f019      	BREQ _0x2040027
000840 2fa1      	MOV  R26,R17
000841 df8d      	RCALL _glcd_putchar
000842 cff5      	RJMP _0x2040025
                 _0x2040027:
000843 8118      	LDD  R17,Y+0
000844 c01b      	RJMP _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000845 93aa      	ST   -Y,R26
000846 81a9      	LDD  R26,Y+1
000847 27bb      	CLR  R27
000848 dedb      	RCALL _glcd_clipx
                +
000849 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00084b 81a8      	LD   R26,Y
00084c 27bb      	CLR  R27
00084d deeb      	RCALL _glcd_clipy
                +
00084e 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000850 940c 0884 	JMP  _0x2120003
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000852 93ba      	ST   -Y,R27
000853 93aa      	ST   -Y,R26
000854 81b9          ldd  r27,y+1
000855 81a8          ld   r26,y
000856 9610          adiw r26,0
000857 f031          breq memset1
000858 81fc          ldd  r31,y+4
000859 81eb          ldd  r30,y+3
00085a 816a          ldd  r22,y+2
                 memset0:
00085b 9361          st   z+,r22
00085c 9711          sbiw r26,1
00085d f7e9          brne memset0
                 memset1:
00085e 81eb          ldd  r30,y+3
00085f 81fc          ldd  r31,y+4
                 _0x2120004:
000860 9625      	ADIW R28,5
000861 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000862 93ba      	ST   -Y,R27
000863 93aa      	ST   -Y,R26
000864 91a9          ld   r26,y+
000865 91b9          ld   r27,y+
000866 27ee          clr  r30
000867 27ff          clr  r31
                 strlen0:
000868 916d          ld   r22,x+
000869 2366          tst  r22
00086a f011          breq strlen1
00086b 9631          adiw r30,1
00086c cffb          rjmp strlen0
                 strlen1:
00086d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00086e 93ba      	ST   -Y,R27
00086f 93aa      	ST   -Y,R26
000870 27aa          clr  r26
000871 27bb          clr  r27
000872 91e9          ld   r30,y+
000873 91f9          ld   r31,y+
                 strlenf0:
000874 9005      	lpm  r0,z+
000875 2000          tst  r0
000876 f011          breq strlenf1
000877 9611          adiw r26,1
000878 cffb          rjmp strlenf0
                 strlenf1:
000879 01fd          movw r30,r26
00087a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
00087b 93aa      	ST   -Y,R26
00087c 81e8      	LD   R30,Y
00087d e0f0      	LDI  R31,0
00087e 57ee      	SUBI R30,LOW(-__glcd_mask*2)
00087f 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000880 91a4      	LPM  R26,Z
000881 81e9      	LDD  R30,Y+1
000882 940e 0aad 	CALL __LSLB12
                 _0x2120003:
000884 9622      	ADIW R28,2
000885 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000886 93aa      	ST   -Y,R26
000887 931a      	ST   -Y,R17
000888 81e9      	LDD  R30,Y+1
000889 30e7      	CPI  R30,LOW(0x7)
00088a f011      	BREQ _0x20C0007
00088b 30ea      	CPI  R30,LOW(0xA)
00088c f419      	BRNE _0x20C0008
                 _0x20C0007:
00088d 9110 0500 	LDS  R17,_glcd_state
00088f c009      	RJMP _0x20C0009
                 _0x20C0008:
000890 30e9      	CPI  R30,LOW(0x9)
000891 f419      	BRNE _0x20C000B
                +
000892 9110 0501+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000894 c004      	RJMP _0x20C0009
                 _0x20C000B:
000895 30e8      	CPI  R30,LOW(0x8)
000896 f4a1      	BRNE _0x20C0005
                +
000897 9110 0510+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
000899 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00089b 30e0      	CPI  R30,0
00089c f049      	BREQ _0x20C000E
00089d 3010      	CPI  R17,0
00089e f019      	BREQ _0x20C000F
00089f efef      	LDI  R30,LOW(255)
0008a0 8118      	LDD  R17,Y+0
0008a1 c029      	RJMP _0x2120002
                 _0x20C000F:
0008a2 81ea      	LDD  R30,Y+2
0008a3 95e0      	COM  R30
0008a4 8118      	LDD  R17,Y+0
0008a5 c025      	RJMP _0x2120002
                 _0x20C000E:
0008a6 3010      	CPI  R17,0
0008a7 f419      	BRNE _0x20C0011
0008a8 e0e0      	LDI  R30,LOW(0)
0008a9 8118      	LDD  R17,Y+0
0008aa c020      	RJMP _0x2120002
                 _0x20C0011:
                 _0x20C0005:
0008ab 81ea      	LDD  R30,Y+2
0008ac 8118      	LDD  R17,Y+0
0008ad c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
0008ae 93ba      	ST   -Y,R27
0008af 93aa      	ST   -Y,R26
0008b0 81ea      	LDD  R30,Y+2
0008b1 30e1      	CPI  R30,LOW(0x1)
0008b2 f421      	BRNE _0x20C0015
0008b3 81e8      	LD   R30,Y
0008b4 81f9      	LDD  R31,Y+1
0008b5 91e4      	LPM  R30,Z
0008b6 c014      	RJMP _0x2120002
                 _0x20C0015:
0008b7 30e2      	CPI  R30,LOW(0x2)
0008b8 f429      	BRNE _0x20C0016
0008b9 81a8      	LD   R26,Y
0008ba 81b9      	LDD  R27,Y+1
0008bb 940e 0ae4 	CALL __EEPROMRDB
0008bd c00d      	RJMP _0x2120002
                 _0x20C0016:
0008be 30e3      	CPI  R30,LOW(0x3)
0008bf f441      	BRNE _0x20C0018
0008c0 81a8      	LD   R26,Y
0008c1 81b9      	LDD  R27,Y+1
                +
0008c2 91e0 0519+LDS R30 , _glcd_state + ( 25 )
0008c4 91f0 051a+LDS R31 , _glcd_state + ( 25 ) + 1
0008c6 9509     +ICALL
                 	__CALL1MN _glcd_state,25
0008c7 c003      	RJMP _0x2120002
                 _0x20C0018:
0008c8 81a8      	LD   R26,Y
0008c9 81b9      	LDD  R27,Y+1
0008ca 91ec      	LD   R30,X
                 _0x2120002:
0008cb 9623      	ADIW R28,3
0008cc 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0008cd 93aa      	ST   -Y,R26
0008ce 81eb      	LDD  R30,Y+3
0008cf 30e0      	CPI  R30,0
0008d0 f429      	BRNE _0x20C001C
0008d1 81e8      	LD   R30,Y
0008d2 81a9      	LDD  R26,Y+1
0008d3 81ba      	LDD  R27,Y+1+1
0008d4 93ec      	ST   X,R30
0008d5 c014      	RJMP _0x20C001B
                 _0x20C001C:
0008d6 30e2      	CPI  R30,LOW(0x2)
0008d7 f431      	BRNE _0x20C001D
0008d8 81e8      	LD   R30,Y
0008d9 81a9      	LDD  R26,Y+1
0008da 81ba      	LDD  R27,Y+1+1
0008db 940e 0af0 	CALL __EEPROMWRB
0008dd c00c      	RJMP _0x20C001B
                 _0x20C001D:
0008de 30e3      	CPI  R30,LOW(0x3)
0008df f451      	BRNE _0x20C001B
0008e0 81e9      	LDD  R30,Y+1
0008e1 81fa      	LDD  R31,Y+1+1
0008e2 93fa      	ST   -Y,R31
0008e3 93ea      	ST   -Y,R30
0008e4 81aa      	LDD  R26,Y+2
                +
0008e5 91e0 051b+LDS R30 , _glcd_state + ( 27 )
0008e7 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
0008e9 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
                 _0x2120001:
0008ea 9624      	ADIW R28,4
0008eb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000500           	.BYTE 0x1D
                 _goc:
00051d           	.BYTE 0x4
                 _buffer:
000521           	.BYTE 0x64
                 _gfx_addr_G101:
000585           	.BYTE 0x2
                 _gfx_buffer_G101:
000587           	.BYTE 0x1F8
                 __seed_G108:
00077f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
0008ec 91ed      	LD   R30,X+
0008ed 91fd      	LD   R31,X+
0008ee 9631      	ADIW R30,1
0008ef 93fe      	ST   -X,R31
0008f0 93ee      	ST   -X,R30
0008f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
0008f2 932a      	ST   -Y,R18
0008f3 85ad      	LDD  R26,Y+13
0008f4 85be      	LDD  R27,Y+13+1
0008f5 85ef      	LDD  R30,Y+15
0008f6 89f8      	LDD  R31,Y+15+1
0008f7 9509      	ICALL
0008f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
0008f9 89e8      	LDD  R30,Y+16
0008fa 89f9      	LDD  R31,Y+16+1
0008fb 9734      	SBIW R30,4
0008fc 8be8      	STD  Y+16,R30
0008fd 8bf9      	STD  Y+16+1,R31
0008fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0008ff 85ad      	LDD  R26,Y+13
000900 85be      	LDD  R27,Y+13+1
000901 85ef      	LDD  R30,Y+15
000902 89f8      	LDD  R31,Y+15+1
000903 9509      	ICALL
000904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000905 89a8      	LDD  R26,Y+16
000906 89b9      	LDD  R27,Y+16+1
000907 9614      	ADIW R26,4
000908 940e 0aca 	CALL __GETW1P
00090a 83ee      	STD  Y+6,R30
00090b 83ff      	STD  Y+6+1,R31
00090c 81ae      	LDD  R26,Y+6
00090d 81bf      	LDD  R27,Y+6+1
00090e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
00090f 89a8      	LDD  R26,Y+16
000910 89b9      	LDD  R27,Y+16+1
000911 9614      	ADIW R26,4
000912 940e 0aca 	CALL __GETW1P
000914 87ea      	STD  Y+10,R30
000915 87fb      	STD  Y+10+1,R31
000916 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000917 01de      	MOVW R26,R28
000918 961c      	ADIW R26,12
000919 940e 0a9d 	CALL __ADDW2R15
00091b 940e 0aca 	CALL __GETW1P
00091d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
00091e e8a5      	LDI  R26,LOW(_gfx_addr_G101)
00091f e0b5      	LDI  R27,HIGH(_gfx_addr_G101)
000920 cfcb      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000921 93e0 0064 	STS  100,R30
000923 91e0 0065 	LDS  R30,101
000925 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000926 0fea      	ADD  R30,R26
000927 1ffb      	ADC  R31,R27
000928 83ee      	STD  Y+6,R30
000929 83ff      	STD  Y+6+1,R31
00092a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
00092b 85ec      	LDD  R30,Y+12
00092c 93ea      	ST   -Y,R30
00092d 81ef      	LDD  R30,Y+7
00092e 85f8      	LDD  R31,Y+7+1
00092f 9631      	ADIW R30,1
000930 83ef      	STD  Y+7,R30
000931 87f8      	STD  Y+7+1,R31
000932 9731      	SBIW R30,1
000933 93fa      	ST   -Y,R31
000934 93ea      	ST   -Y,R30
000935 e0a0      	LDI  R26,LOW(0)
000936 940c 08cd 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000938 930a      	ST   -Y,R16
000939 89a8      	LDD  R26,Y+16
00093a 940c 03ff 	JMP  _pcd8544_setaddr_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xC:
00093c 85ec      	LDD  R30,Y+12
00093d 93ea      	ST   -Y,R30
00093e 81ef      	LDD  R30,Y+7
00093f 85f8      	LDD  R31,Y+7+1
000940 9631      	ADIW R30,1
000941 83ef      	STD  Y+7,R30
000942 87f8      	STD  Y+7+1,R31
000943 9731      	SBIW R30,1
000944 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000945 2766      	CLR  R22
000946 2777      	CLR  R23
000947 01df      	MOVW R26,R30
000948 01cb      	MOVW R24,R22
000949 940c 08ae 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00094b 935a      	ST   -Y,R21
00094c 85aa      	LDD  R26,Y+10
00094d 940c 0886 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00094f 930a      	ST   -Y,R16
000950 9503      	INC  R16
000951 89e8      	LDD  R30,Y+16
000952 93ea      	ST   -Y,R30
000953 935a      	ST   -Y,R21
000954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000955 2f5e      	MOV  R21,R30
000956 85ec      	LDD  R30,Y+12
000957 93ea      	ST   -Y,R30
000958 81af      	LDD  R26,Y+7
000959 85b8      	LDD  R27,Y+7+1
00095a 2788      	CLR  R24
00095b 2799      	CLR  R25
00095c 940e 08ae 	CALL _glcd_readmem
00095e 2e1e      	MOV  R1,R30
00095f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
000960 930a      	ST   -Y,R16
000961 9503      	INC  R16
000962 89e8      	LDD  R30,Y+16
000963 93ea      	ST   -Y,R30
000964 85ee      	LDD  R30,Y+14
000965 93ea      	ST   -Y,R30
000966 85e9      	LDD  R30,Y+9
000967 85fa      	LDD  R31,Y+9+1
000968 9631      	ADIW R30,1
000969 87e9      	STD  Y+9,R30
00096a 87fa      	STD  Y+9+1,R31
00096b 9731      	SBIW R30,1
00096c cfd8      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00096d 93ba      	ST   -Y,R27
00096e 93aa      	ST   -Y,R26
00096f 81a8      	LD   R26,Y
000970 81b9      	LDD  R27,Y+1
000971 940e 0b01 	CALL __CPW02
000973 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000974 940e 0b05 	CALL __SAVELOCR6
                +
000976 91e0 0504+LDS R30 , _glcd_state + ( 4 )
000978 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00097a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
00097b 01f8      	MOVW R30,R16
                +
00097c 5f0f     +SUBI R16 , LOW ( - 1 )
00097d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00097e 9004      	LPM  R0,Z
00097f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15:
                +
000980 91e0 0504+LDS R30 , _glcd_state + ( 4 )
000982 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000984 9631      	ADIW R30,1
000985 91e4      	LPM  R30,Z
000986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
000987 93ea      	ST   -Y,R30
000988 e0e0      	LDI  R30,LOW(0)
000989 93ea      	ST   -Y,R30
00098a e0e0      	LDI  R30,LOW(0)
00098b e0f0      	LDI  R31,HIGH(0)
00098c 93fa      	ST   -Y,R31
00098d 93ea      	ST   -Y,R30
00098e e0a9      	LDI  R26,LOW(9)
00098f 940c 053a 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
000991 9610      	adiw r26,0
000992 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000993 ed80     +LDI R24 , LOW ( 0x7D0 )
000994 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000995 9701     +SBIW R24 , 1
000996 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000997 95a8      	wdr
000998 9711      	sbiw r26,1
000999 f7c9      	brne __delay_ms0
                 __delay_ms1:
00099a 9508      	ret
                 
                 __ROUND_REPACK:
00099b 2355      	TST  R21
00099c f442      	BRPL __REPACK
00099d 3850      	CPI  R21,0x80
00099e f411      	BRNE __ROUND_REPACK0
00099f ffe0      	SBRS R30,0
0009a0 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0009a1 9631      	ADIW R30,1
0009a2 1f69      	ADC  R22,R25
0009a3 1f79      	ADC  R23,R25
0009a4 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0009a5 e850      	LDI  R21,0x80
0009a6 2757      	EOR  R21,R23
0009a7 f411      	BRNE __REPACK0
0009a8 935f      	PUSH R21
0009a9 c093      	RJMP __ZERORES
                 __REPACK0:
0009aa 3f5f      	CPI  R21,0xFF
0009ab f031      	BREQ __REPACK1
0009ac 0f66      	LSL  R22
0009ad 0c00      	LSL  R0
0009ae 9557      	ROR  R21
0009af 9567      	ROR  R22
0009b0 2f75      	MOV  R23,R21
0009b1 9508      	RET
                 __REPACK1:
0009b2 935f      	PUSH R21
0009b3 2000      	TST  R0
0009b4 f00a      	BRMI __REPACK2
0009b5 c093      	RJMP __MAXRES
                 __REPACK2:
0009b6 c08c      	RJMP __MINRES
                 
                 __UNPACK:
0009b7 e850      	LDI  R21,0x80
0009b8 2e19      	MOV  R1,R25
0009b9 2215      	AND  R1,R21
0009ba 0f88      	LSL  R24
0009bb 1f99      	ROL  R25
0009bc 2795      	EOR  R25,R21
0009bd 0f55      	LSL  R21
0009be 9587      	ROR  R24
                 
                 __UNPACK1:
0009bf e850      	LDI  R21,0x80
0009c0 2e07      	MOV  R0,R23
0009c1 2205      	AND  R0,R21
0009c2 0f66      	LSL  R22
0009c3 1f77      	ROL  R23
0009c4 2775      	EOR  R23,R21
0009c5 0f55      	LSL  R21
0009c6 9567      	ROR  R22
0009c7 9508      	RET
                 
                 __CDF1U:
0009c8 9468      	SET
0009c9 c001      	RJMP __CDF1U0
                 __CDF1:
0009ca 94e8      	CLT
                 __CDF1U0:
0009cb 9730      	SBIW R30,0
0009cc 4060      	SBCI R22,0
0009cd 4070      	SBCI R23,0
0009ce f0b1      	BREQ __CDF10
0009cf 2400      	CLR  R0
0009d0 f026      	BRTS __CDF11
0009d1 2377      	TST  R23
0009d2 f412      	BRPL __CDF11
0009d3 9400      	COM  R0
0009d4 d0d0      	RCALL __ANEGD1
                 __CDF11:
0009d5 2e17      	MOV  R1,R23
0009d6 e17e      	LDI  R23,30
0009d7 2011      	TST  R1
                 __CDF12:
0009d8 f032      	BRMI __CDF13
0009d9 957a      	DEC  R23
0009da 0fee      	LSL  R30
0009db 1fff      	ROL  R31
0009dc 1f66      	ROL  R22
0009dd 1c11      	ROL  R1
0009de cff9      	RJMP __CDF12
                 __CDF13:
0009df 2fef      	MOV  R30,R31
0009e0 2ff6      	MOV  R31,R22
0009e1 2d61      	MOV  R22,R1
0009e2 935f      	PUSH R21
0009e3 dfc1      	RCALL __REPACK
0009e4 915f      	POP  R21
                 __CDF10:
0009e5 9508      	RET
                 
                 __SWAPACC:
0009e6 934f      	PUSH R20
0009e7 01af      	MOVW R20,R30
0009e8 01fd      	MOVW R30,R26
0009e9 01da      	MOVW R26,R20
0009ea 01ab      	MOVW R20,R22
0009eb 01bc      	MOVW R22,R24
0009ec 01ca      	MOVW R24,R20
0009ed 2d40      	MOV  R20,R0
0009ee 2c01      	MOV  R0,R1
0009ef 2e14      	MOV  R1,R20
0009f0 914f      	POP  R20
0009f1 9508      	RET
                 
                 __UADD12:
0009f2 0fea      	ADD  R30,R26
0009f3 1ffb      	ADC  R31,R27
0009f4 1f68      	ADC  R22,R24
0009f5 9508      	RET
                 
                 __NEGMAN1:
0009f6 95e0      	COM  R30
0009f7 95f0      	COM  R31
0009f8 9560      	COM  R22
0009f9 5fef      	SUBI R30,-1
0009fa 4fff      	SBCI R31,-1
0009fb 4f6f      	SBCI R22,-1
0009fc 9508      	RET
                 
                 __SUBF12:
0009fd 935f      	PUSH R21
0009fe dfb8      	RCALL __UNPACK
0009ff 3890      	CPI  R25,0x80
000a00 f149      	BREQ __ADDF129
000a01 e850      	LDI  R21,0x80
000a02 2615      	EOR  R1,R21
                 
                 __ADDF120:
000a03 3870      	CPI  R23,0x80
000a04 f121      	BREQ __ADDF128
                 __ADDF121:
000a05 2f57      	MOV  R21,R23
000a06 1b59      	SUB  R21,R25
000a07 f12b      	BRVS __ADDF1211
000a08 f412      	BRPL __ADDF122
000a09 dfdc      	RCALL __SWAPACC
000a0a cffa      	RJMP __ADDF121
                 __ADDF122:
000a0b 3158      	CPI  R21,24
000a0c f018      	BRLO __ADDF123
000a0d 27aa      	CLR  R26
000a0e 27bb      	CLR  R27
000a0f 2788      	CLR  R24
                 __ADDF123:
000a10 3058      	CPI  R21,8
000a11 f028      	BRLO __ADDF124
000a12 2fab      	MOV  R26,R27
000a13 2fb8      	MOV  R27,R24
000a14 2788      	CLR  R24
000a15 5058      	SUBI R21,8
000a16 cff9      	RJMP __ADDF123
                 __ADDF124:
000a17 2355      	TST  R21
000a18 f029      	BREQ __ADDF126
                 __ADDF125:
000a19 9586      	LSR  R24
000a1a 95b7      	ROR  R27
000a1b 95a7      	ROR  R26
000a1c 955a      	DEC  R21
000a1d f7d9      	BRNE __ADDF125
                 __ADDF126:
000a1e 2d50      	MOV  R21,R0
000a1f 2551      	EOR  R21,R1
000a20 f072      	BRMI __ADDF127
000a21 dfd0      	RCALL __UADD12
000a22 f438      	BRCC __ADDF129
000a23 9567      	ROR  R22
000a24 95f7      	ROR  R31
000a25 95e7      	ROR  R30
000a26 9573      	INC  R23
000a27 f413      	BRVC __ADDF129
000a28 c020      	RJMP __MAXRES
                 __ADDF128:
000a29 dfbc      	RCALL __SWAPACC
                 __ADDF129:
000a2a df7a      	RCALL __REPACK
000a2b 915f      	POP  R21
000a2c 9508      	RET
                 __ADDF1211:
000a2d f7d8      	BRCC __ADDF128
000a2e cffb      	RJMP __ADDF129
                 __ADDF127:
000a2f 1bea      	SUB  R30,R26
000a30 0bfb      	SBC  R31,R27
000a31 0b68      	SBC  R22,R24
000a32 f051      	BREQ __ZERORES
000a33 f410      	BRCC __ADDF1210
000a34 9400      	COM  R0
000a35 dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
000a36 2366      	TST  R22
000a37 f392      	BRMI __ADDF129
000a38 0fee      	LSL  R30
000a39 1fff      	ROL  R31
000a3a 1f66      	ROL  R22
000a3b 957a      	DEC  R23
000a3c f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000a3d 27ee      	CLR  R30
000a3e 27ff      	CLR  R31
000a3f 2766      	CLR  R22
000a40 2777      	CLR  R23
000a41 915f      	POP  R21
000a42 9508      	RET
                 
                 __MINRES:
000a43 efef      	SER  R30
000a44 efff      	SER  R31
000a45 e76f      	LDI  R22,0x7F
000a46 ef7f      	SER  R23
000a47 915f      	POP  R21
000a48 9508      	RET
                 
                 __MAXRES:
000a49 efef      	SER  R30
000a4a efff      	SER  R31
000a4b e76f      	LDI  R22,0x7F
000a4c e77f      	LDI  R23,0x7F
000a4d 915f      	POP  R21
000a4e 9508      	RET
                 
                 __MULF12:
000a4f 935f      	PUSH R21
000a50 df66      	RCALL __UNPACK
000a51 3870      	CPI  R23,0x80
000a52 f351      	BREQ __ZERORES
000a53 3890      	CPI  R25,0x80
000a54 f341      	BREQ __ZERORES
000a55 2401      	EOR  R0,R1
000a56 9408      	SEC
000a57 1f79      	ADC  R23,R25
000a58 f423      	BRVC __MULF124
000a59 f31c      	BRLT __ZERORES
                 __MULF125:
000a5a 2000      	TST  R0
000a5b f33a      	BRMI __MINRES
000a5c cfec      	RJMP __MAXRES
                 __MULF124:
000a5d 920f      	PUSH R0
000a5e 931f      	PUSH R17
000a5f 932f      	PUSH R18
000a60 933f      	PUSH R19
000a61 934f      	PUSH R20
000a62 2711      	CLR  R17
000a63 2722      	CLR  R18
000a64 2799      	CLR  R25
000a65 9f68      	MUL  R22,R24
000a66 01a0      	MOVW R20,R0
000a67 9f8f      	MUL  R24,R31
000a68 2d30      	MOV  R19,R0
000a69 0d41      	ADD  R20,R1
000a6a 1f59      	ADC  R21,R25
000a6b 9f6b      	MUL  R22,R27
000a6c 0d30      	ADD  R19,R0
000a6d 1d41      	ADC  R20,R1
000a6e 1f59      	ADC  R21,R25
000a6f 9f8e      	MUL  R24,R30
000a70 d027      	RCALL __MULF126
000a71 9fbf      	MUL  R27,R31
000a72 d025      	RCALL __MULF126
000a73 9f6a      	MUL  R22,R26
000a74 d023      	RCALL __MULF126
000a75 9fbe      	MUL  R27,R30
000a76 d01d      	RCALL __MULF127
000a77 9faf      	MUL  R26,R31
000a78 d01b      	RCALL __MULF127
000a79 9fae      	MUL  R26,R30
000a7a 0d11      	ADD  R17,R1
000a7b 1f29      	ADC  R18,R25
000a7c 1f39      	ADC  R19,R25
000a7d 1f49      	ADC  R20,R25
000a7e 1f59      	ADC  R21,R25
000a7f 2fe3      	MOV  R30,R19
000a80 2ff4      	MOV  R31,R20
000a81 2f65      	MOV  R22,R21
000a82 2f52      	MOV  R21,R18
000a83 914f      	POP  R20
000a84 913f      	POP  R19
000a85 912f      	POP  R18
000a86 911f      	POP  R17
000a87 900f      	POP  R0
000a88 2366      	TST  R22
000a89 f02a      	BRMI __MULF122
000a8a 0f55      	LSL  R21
000a8b 1fee      	ROL  R30
000a8c 1fff      	ROL  R31
000a8d 1f66      	ROL  R22
000a8e c002      	RJMP __MULF123
                 __MULF122:
000a8f 9573      	INC  R23
000a90 f24b      	BRVS __MULF125
                 __MULF123:
000a91 df09      	RCALL __ROUND_REPACK
000a92 915f      	POP  R21
000a93 9508      	RET
                 
                 __MULF127:
000a94 0d10      	ADD  R17,R0
000a95 1d21      	ADC  R18,R1
000a96 1f39      	ADC  R19,R25
000a97 c002      	RJMP __MULF128
                 __MULF126:
000a98 0d20      	ADD  R18,R0
000a99 1d31      	ADC  R19,R1
                 __MULF128:
000a9a 1f49      	ADC  R20,R25
000a9b 1f59      	ADC  R21,R25
000a9c 9508      	RET
                 
                 __ADDW2R15:
000a9d 2400      	CLR  R0
000a9e 0daf      	ADD  R26,R15
000a9f 1db0      	ADC  R27,R0
000aa0 9508      	RET
                 
                 __ANEGW1:
000aa1 95f1      	NEG  R31
000aa2 95e1      	NEG  R30
000aa3 40f0      	SBCI R31,0
000aa4 9508      	RET
                 
                 __ANEGD1:
000aa5 95f0      	COM  R31
000aa6 9560      	COM  R22
000aa7 9570      	COM  R23
000aa8 95e1      	NEG  R30
000aa9 4fff      	SBCI R31,-1
000aaa 4f6f      	SBCI R22,-1
000aab 4f7f      	SBCI R23,-1
000aac 9508      	RET
                 
                 __LSLB12:
000aad 23ee      	TST  R30
000aae 2e0e      	MOV  R0,R30
000aaf 2fea      	MOV  R30,R26
000ab0 f019      	BREQ __LSLB12R
                 __LSLB12L:
000ab1 0fee      	LSL  R30
000ab2 940a      	DEC  R0
000ab3 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000ab4 9508      	RET
                 
                 __LSRB12:
000ab5 23ee      	TST  R30
000ab6 2e0e      	MOV  R0,R30
000ab7 2fea      	MOV  R30,R26
000ab8 f019      	BREQ __LSRB12R
                 __LSRB12L:
000ab9 95e6      	LSR  R30
000aba 940a      	DEC  R0
000abb f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000abc 9508      	RET
                 
                 __CWD1:
000abd 2f6f      	MOV  R22,R31
000abe 0f66      	ADD  R22,R22
000abf 0b66      	SBC  R22,R22
000ac0 2f76      	MOV  R23,R22
000ac1 9508      	RET
                 
                 __MULW12U:
000ac2 9ffa      	MUL  R31,R26
000ac3 2df0      	MOV  R31,R0
000ac4 9feb      	MUL  R30,R27
000ac5 0df0      	ADD  R31,R0
000ac6 9fea      	MUL  R30,R26
000ac7 2de0      	MOV  R30,R0
000ac8 0df1      	ADD  R31,R1
000ac9 9508      	RET
                 
                 __GETW1P:
000aca 91ed      	LD   R30,X+
000acb 91fc      	LD   R31,X
000acc 9711      	SBIW R26,1
000acd 9508      	RET
                 
                 __GETW1PF:
000ace 9005      	LPM  R0,Z+
000acf 91f4      	LPM  R31,Z
000ad0 2de0      	MOV  R30,R0
000ad1 9508      	RET
                 
                 __PUTPARD1:
000ad2 937a      	ST   -Y,R23
000ad3 936a      	ST   -Y,R22
000ad4 93fa      	ST   -Y,R31
000ad5 93ea      	ST   -Y,R30
000ad6 9508      	RET
                 
                 __SWAPD12:
000ad7 2e18      	MOV  R1,R24
000ad8 2f86      	MOV  R24,R22
000ad9 2d61      	MOV  R22,R1
000ada 2e19      	MOV  R1,R25
000adb 2f97      	MOV  R25,R23
000adc 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000add 2e1b      	MOV  R1,R27
000ade 2fbf      	MOV  R27,R31
000adf 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000ae0 2e1a      	MOV  R1,R26
000ae1 2fae      	MOV  R26,R30
000ae2 2de1      	MOV  R30,R1
000ae3 9508      	RET
                 
                 __EEPROMRDB:
000ae4 99e1      	SBIC EECR,EEWE
000ae5 cffe      	RJMP __EEPROMRDB
000ae6 93ff      	PUSH R31
000ae7 b7ff      	IN   R31,SREG
000ae8 94f8      	CLI
000ae9 bbae      	OUT  EEARL,R26
000aea bbbf      	OUT  EEARH,R27
000aeb 9ae0      	SBI  EECR,EERE
000aec b3ed      	IN   R30,EEDR
000aed bfff      	OUT  SREG,R31
000aee 91ff      	POP  R31
000aef 9508      	RET
                 
                 __EEPROMWRB:
000af0 9be1      	SBIS EECR,EEWE
000af1 c002      	RJMP __EEPROMWRB1
000af2 95a8      	WDR
000af3 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000af4 b79f      	IN   R25,SREG
000af5 94f8      	CLI
000af6 bbae      	OUT  EEARL,R26
000af7 bbbf      	OUT  EEARH,R27
000af8 9ae0      	SBI  EECR,EERE
000af9 b38d      	IN   R24,EEDR
000afa 17e8      	CP   R30,R24
000afb f019      	BREQ __EEPROMWRB0
000afc bbed      	OUT  EEDR,R30
000afd 9ae2      	SBI  EECR,EEMWE
000afe 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000aff bf9f      	OUT  SREG,R25
000b00 9508      	RET
                 
                 __CPW02:
000b01 2400      	CLR  R0
000b02 160a      	CP   R0,R26
000b03 060b      	CPC  R0,R27
000b04 9508      	RET
                 
                 __SAVELOCR6:
000b05 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b06 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b07 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b08 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b09 931a      	ST   -Y,R17
000b0a 930a      	ST   -Y,R16
000b0b 9508      	RET
                 
                 __LOADLOCR6:
000b0c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b0d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b0e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b0f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b10 8119      	LDD  R17,Y+1
000b11 8108      	LD   R16,Y
000b12 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  47 r1 :  29 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   0 r7 :   8 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  69 r17:  92 r18:  60 r19:  42 r20:  41 r21:  91 r22:  50 r23:  31 
r24:  33 r25:  28 r26: 285 r27: 102 r28:  26 r29:   1 r30: 711 r31: 184 
x  :  23 y  : 472 z  :  31 
Registers used: 25 out of 35 (71.4%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  30 add   :  27 
adiw  :  39 and   :  10 andi  :  21 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   3 brcs  :   0 break :   0 breq  :  48 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   5 brmi  :   7 brne  :  79 brpl  :   4 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  : 128 
cbi   :   1 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  36 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  15 
cp    :  25 cpc   :  10 cpi   : 100 cpse  :   0 dec   :   7 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   5 inc   :   5 jmp   :  53 ld    :  40 ldd   : 252 
ldi   : 199 lds   :  48 lpm   :  30 lsl   :  11 lsr   :  16 mov   : 124 
movw  :  44 mul   :  14 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 
or    :   5 ori   :  25 out   :  23 pop   :  24 push  :  23 rcall :  55 
ret   :  61 reti  :   1 rjmp  : 151 rol   :  10 ror   :   9 sbc   :   4 
sbci  :  19 sbi   :   5 sbic  :   3 sbis  :   1 sbiw  :  37 sbr   :   0 
sbrc  :   2 sbrs  :  11 sec   :   1 seh   :   0 sei   :   1 sen   :   0 
ser   :   5 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 148 std   :  66 sts   :  44 sub   :   9 subi  :  46 
swap  :   0 tst   :  14 wdr   :   2 
Instructions used: 73 out of 117 (62.4%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001626   5126    544   5670  131072   4.3%
[.dseg] 0x000100 0x000783      0    643    643    4096  15.7%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
