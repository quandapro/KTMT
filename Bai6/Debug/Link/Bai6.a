;/*
; * Bai6.c
; *
; * Created: 10/30/2020 9:21:16 AM
; * Author: Dell
; * Viet chuong trinh hien thi hello world len glcd
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <glcd.h>
;#include <delay.h>
;#include <font5x7.h>
;#include <stdio.h>
;#define LEG_G PORTD.5
;
;unsigned int gia_tri_adc, i;
;unsigned char buffer[10];
;
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0017 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0018 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0019 // Delay needed for the stabilization of the ADC input voltage
; 0000 001A delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 001B // Start the AD conversion
; 0000 001C ADCSRA|=(1<<ADSC);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001D // Wait for the AD conversion to complete
; 0000 001E while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F ADCSRA|=(1<<ADIF);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0020 return ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0021 }
;PCODE: $00000021 VOL: 0
;
;void main(void)
; 0000 0024 {
;PCODE: $00000022 VOL: 0
; 0000 0025 GLCDINIT_t glcd_init_data;
; 0000 0026 glcd_init_data.font = font5x7;
;PCODE: $00000023 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0027 glcd_init_data.temp_coef = 90;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0028 glcd_init_data.bias = 4;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0029 glcd_init_data.vlcd = 60;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002A glcd_init(&glcd_init_data);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002B ADMUX=ADC_VREF_TYPE;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002C ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002D SFIOR=(0<<ACME);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002E //DDRD = 0xA0;
; 0000 002F DDRF = 0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0030 PORTF = 0x02;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0031 //PORTD = 0x00;
; 0000 0032 while (1)
;PCODE: $0000003E VOL: 0
; 0000 0033     {
; 0000 0034         if (PINF.1 == 0)
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0035         {
; 0000 0036             for (i = 0; i < 4; i++)
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0037             {
; 0000 0038                 gia_tri_adc = read_adc(i);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0039                 sprintf(buffer, "%d  ", gia_tri_adc);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003A                 glcd_outtextxy(10, i*10, buffer);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 003B             }
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003C         }
; 0000 003D 
; 0000 003E 
; 0000 003F         //delay_ms(250);
; 0000 0040         /*
; 0000 0041         if (gia_tri_adc <= 700)
; 0000 0042         {
; 0000 0043             PORTD.5 = 1;
; 0000 0044             PORTD.7 = 0;
; 0000 0045         }
; 0000 0046         else
; 0000 0047         {
; 0000 0048             PORTD.5 = 0;
; 0000 0049             PORTD.7 = 1;
; 0000 004A         }
; 0000 004B         */
; 0000 004C     }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004D }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
