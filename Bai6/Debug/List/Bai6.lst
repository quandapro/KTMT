
AVRASM ver. 2.1.30  D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm Fri Oct 30 10:47:07 2020

D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1093): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _gia_tri_adc=R4
                 	.DEF _gia_tri_adc_msb=R5
                 	.DEF _i=R6
                 	.DEF _i_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0153 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 0400
00004c 040a
00004d 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1202): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000146 6425
000147 2020
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1210): warning: .cseg .db misalignment - padding zero byte
000148 0000      	.DB  0x25,0x64,0x20,0x20,0x0
                 _0x2100060:
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1212): warning: .cseg .db misalignment - padding zero byte
000149 0001      	.DB  0x1
                 _0x2100000:
00014a 4e2d
00014b 4e41
00014c 4900
00014d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Workspace\Study\KTMT\Bai6\Debug\List\Bai6.asm(1215): warning: .cseg .db misalignment - padding zero byte
00014e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00014f 0001      	.DW  0x01
000150 0721      	.DW  __seed_G108
000151 0292      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
000152 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000153 94f8      	CLI
000154 27ee      	CLR  R30
000155 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000156 e0f1      	LDI  R31,1
000157 bff5      	OUT  MCUCR,R31
000158 bfe5      	OUT  MCUCR,R30
000159 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00015b e08d      	LDI  R24,(14-2)+1
00015c e0a2      	LDI  R26,2
00015d 27bb      	CLR  R27
                 __CLEAR_REG:
00015e 93ed      	ST   X+,R30
00015f 958a      	DEC  R24
000160 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000161 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000162 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000163 e0a0      	LDI  R26,LOW(__SRAM_START)
000164 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000165 93ed      	ST   X+,R30
000166 9701      	SBIW R24,1
000167 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000168 e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000169 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00016a 9185      	LPM  R24,Z+
00016b 9195      	LPM  R25,Z+
00016c 9700      	SBIW R24,0
00016d f061      	BREQ __GLOBAL_INI_END
00016e 91a5      	LPM  R26,Z+
00016f 91b5      	LPM  R27,Z+
000170 9005      	LPM  R0,Z+
000171 9015      	LPM  R1,Z+
000172 01bf      	MOVW R22,R30
000173 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000174 9005      	LPM  R0,Z+
000175 920d      	ST   X+,R0
000176 9701      	SBIW R24,1
000177 f7e1      	BRNE __GLOBAL_INI_LOOP
000178 01fb      	MOVW R30,R22
000179 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00017a bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00017b efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00017c bfed      	OUT  SPL,R30
00017d e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00017e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00017f e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000180 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000181 940c 0190 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Bai6.c
                 ; *
                 ; * Created: 10/30/2020 9:21:16 AM
                 ; * Author: Dell
                 ; * Viet chuong trinh hien thi hello world len glcd
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <glcd.h>
                 ;#include <delay.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#define LEG_G PORTD.5
                 ;
                 ;unsigned int gia_tri_adc, i;
                 ;unsigned char buffer[10];
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0018 ADMUX=adc_input | ADC_VREF_TYPE;
000183 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000184 81e8      	LD   R30,Y
000185 b9e7      	OUT  0x7,R30
                 ; 0000 0019 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 001A delay_us(10);
                +
000186 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000187 958a     +DEC R24
000188 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 001B // Start the AD conversion
                 ; 0000 001C ADCSRA|=(1<<ADSC);
000189 9a36      	SBI  0x6,6
                 ; 0000 001D // Wait for the AD conversion to complete
                 ; 0000 001E while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00018a 9b34      	SBIS 0x6,4
00018b cffe      	RJMP _0x3
                 ; 0000 001F ADCSRA|=(1<<ADIF);
00018c 9a34      	SBI  0x6,4
                 ; 0000 0020 return ADCW;
00018d b1e4      	IN   R30,0x4
00018e b1f5      	IN   R31,0x4+1
00018f c167      	RJMP _0x212000A
                 ; 0000 0021 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0024 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0025 GLCDINIT_t glcd_init_data;
                 ; 0000 0026 glcd_init_data.font = font5x7;
000190 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000191 e8ec      	LDI  R30,LOW(_font5x7*2)
000192 e0f0      	LDI  R31,HIGH(_font5x7*2)
000193 83e8      	ST   Y,R30
000194 83f9      	STD  Y+1,R31
                 ; 0000 0027 glcd_init_data.temp_coef = 90;
000195 81ee      	LDD  R30,Y+6
000196 7fec      	ANDI R30,LOW(0xFC)
000197 60e2      	ORI  R30,2
000198 83ee      	STD  Y+6,R30
                 ; 0000 0028 glcd_init_data.bias = 4;
000199 7ee3      	ANDI R30,LOW(0xE3)
00019a 61e0      	ORI  R30,0x10
00019b 83ee      	STD  Y+6,R30
                 ; 0000 0029 glcd_init_data.vlcd = 60;
00019c 81ef      	LDD  R30,Y+7
00019d 78e0      	ANDI R30,LOW(0x80)
00019e 63ec      	ORI  R30,LOW(0x3C)
00019f 83ef      	STD  Y+7,R30
                 ; 0000 002A glcd_init(&glcd_init_data);
0001a0 01de      	MOVW R26,R28
0001a1 d0b0      	RCALL _glcd_init
                 ; 0000 002B ADMUX=ADC_VREF_TYPE;
0001a2 e0e0      	LDI  R30,LOW(0)
0001a3 b9e7      	OUT  0x7,R30
                 ; 0000 002C ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0001a4 e8e3      	LDI  R30,LOW(131)
0001a5 b9e6      	OUT  0x6,R30
                 ; 0000 002D SFIOR=(0<<ACME);
0001a6 e0e0      	LDI  R30,LOW(0)
0001a7 bde0      	OUT  0x20,R30
                 ; 0000 002E //DDRD = 0xA0;
                 ; 0000 002F DDRF = 0x00;
0001a8 93e0 0061 	STS  97,R30
                 ; 0000 0030 PORTF = 0x02;
0001aa e0e2      	LDI  R30,LOW(2)
0001ab 93e0 0062 	STS  98,R30
                 ; 0000 0031 //PORTD = 0x00;
                 ; 0000 0032 while (1)
                 _0x6:
                 ; 0000 0033     {
                 ; 0000 0034         if (PINF.1 == 0)
0001ad 9901      	SBIC 0x0,1
0001ae c028      	RJMP _0x9
                 ; 0000 0035         {
                 ; 0000 0036             for (i = 0; i < 4; i++)
0001af 2466      	CLR  R6
0001b0 2477      	CLR  R7
                 _0xB:
0001b1 e0e4      	LDI  R30,LOW(4)
0001b2 e0f0      	LDI  R31,HIGH(4)
0001b3 166e      	CP   R6,R30
0001b4 067f      	CPC  R7,R31
0001b5 f508      	BRSH _0xC
                 ; 0000 0037             {
                 ; 0000 0038                 gia_tri_adc = read_adc(i);
0001b6 2da6      	MOV  R26,R6
0001b7 dfcb      	RCALL _read_adc
0001b8 012f      	MOVW R4,R30
                 ; 0000 0039                 sprintf(buffer, "%d  ", gia_tri_adc);
0001b9 e1ed      	LDI  R30,LOW(_buffer)
0001ba e0f5      	LDI  R31,HIGH(_buffer)
0001bb 93fa      	ST   -Y,R31
0001bc 93ea      	ST   -Y,R30
                +
0001bd e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001be e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001bf 93fa      	ST   -Y,R31
0001c0 93ea      	ST   -Y,R30
0001c1 01f2      	MOVW R30,R4
0001c2 2766      	CLR  R22
0001c3 2777      	CLR  R23
0001c4 940e 097a 	CALL __PUTPARD1
0001c6 e084      	LDI  R24,4
0001c7 940e 07d3 	CALL _sprintf
0001c9 9628      	ADIW R28,8
                 ; 0000 003A                 glcd_outtextxy(10, i*10, buffer);
0001ca e0ea      	LDI  R30,LOW(10)
0001cb 93ea      	ST   -Y,R30
0001cc e0aa      	LDI  R26,LOW(10)
0001cd 9e6a      	MUL  R6,R26
0001ce 920a      	ST   -Y,R0
0001cf e1ad      	LDI  R26,LOW(_buffer)
0001d0 e0b5      	LDI  R27,HIGH(_buffer)
0001d1 940e 063e 	CALL _glcd_outtextxy
                 ; 0000 003B             }
0001d3 01f3      	MOVW R30,R6
0001d4 9631      	ADIW R30,1
0001d5 013f      	MOVW R6,R30
0001d6 cfda      	RJMP _0xB
                 _0xC:
                 ; 0000 003C         }
                 ; 0000 003D 
                 ; 0000 003E 
                 ; 0000 003F         //delay_ms(250);
                 ; 0000 0040         /*
                 ; 0000 0041         if (gia_tri_adc <= 700)
                 ; 0000 0042         {
                 ; 0000 0043             PORTD.5 = 1;
                 ; 0000 0044             PORTD.7 = 0;
                 ; 0000 0045         }
                 ; 0000 0046         else
                 ; 0000 0047         {
                 ; 0000 0048             PORTD.5 = 0;
                 ; 0000 0049             PORTD.7 = 1;
                 ; 0000 004A         }
                 ; 0000 004B         */
                 ; 0000 004C     }
                 _0x9:
0001d7 cfd5      	RJMP _0x6
                 ; 0000 004D }
                 _0xD:
0001d8 cfff      	RJMP _0xD
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0001d9 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0001da 93aa      	ST   -Y,R26
0001db 931a      	ST   -Y,R17
0001dc 91e0 0065 	LDS  R30,101
0001de 7eef      	ANDI R30,0xEF
0001df 93e0 0065 	STS  101,R30
0001e1 e018      	LDI  R17,LOW(8)
                 _0x2000004:
0001e2 dff6      	RCALL _pcd8544_delay_G100
0001e3 81e9      	LDD  R30,Y+1
0001e4 78e0      	ANDI R30,LOW(0x80)
0001e5 f021      	BREQ _0x2000006
0001e6 91e0 0065 	LDS  R30,101
0001e8 60e2      	ORI  R30,2
0001e9 c003      	RJMP _0x20000A0
                 _0x2000006:
0001ea 91e0 0065 	LDS  R30,101
0001ec 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0001ed 93e0 0065 	STS  101,R30
0001ef 81e9      	LDD  R30,Y+1
0001f0 0fee      	LSL  R30
0001f1 83e9      	STD  Y+1,R30
0001f2 dfe6      	RCALL _pcd8544_delay_G100
0001f3 91e0 0065 	LDS  R30,101
0001f5 60e4      	ORI  R30,4
0001f6 93e0 0065 	STS  101,R30
0001f8 dfe0      	RCALL _pcd8544_delay_G100
0001f9 91e0 0065 	LDS  R30,101
0001fb 7feb      	ANDI R30,0xFB
0001fc 93e0 0065 	STS  101,R30
0001fe 5011      	SUBI R17,LOW(1)
0001ff f711      	BRNE _0x2000004
000200 91e0 0065 	LDS  R30,101
000202 61e0      	ORI  R30,0x10
000203 93e0 0065 	STS  101,R30
000205 8118      	LDD  R17,Y+0
000206 c042      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000207 93aa      	ST   -Y,R26
000208 91e0 0065 	LDS  R30,101
00020a 7fee      	ANDI R30,0xFE
00020b 93e0 0065 	STS  101,R30
00020d 81a8      	LD   R26,Y
00020e dfcb      	RCALL _pcd8544_wrbus_G100
00020f c0e7      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000210 93aa      	ST   -Y,R26
000211 91e0 0065 	LDS  R30,101
000213 60e1      	ORI  R30,1
000214 93e0 0065 	STS  101,R30
000216 81a8      	LD   R26,Y
000217 dfc2      	RCALL _pcd8544_wrbus_G100
000218 c0de      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000219 93aa      	ST   -Y,R26
00021a 931a      	ST   -Y,R17
00021b 81e9      	LDD  R30,Y+1
00021c 95e6      	LSR  R30
00021d 95e6      	LSR  R30
00021e 95e6      	LSR  R30
00021f 2f1e      	MOV  R17,R30
000220 e5e4      	LDI  R30,LOW(84)
000221 9fe1      	MUL  R30,R17
000222 01f0      	MOVW R30,R0
000223 01df      	MOVW R26,R30
000224 81ea      	LDD  R30,Y+2
000225 e0f0      	LDI  R31,0
000226 0fea      	ADD  R30,R26
000227 1ffb      	ADC  R31,R27
000228 93e0 0527 	STS  _gfx_addr_G100,R30
00022a 93f0 0528 	STS  _gfx_addr_G100+1,R31
00022c 2fe1      	MOV  R30,R17
00022d 8118      	LDD  R17,Y+0
00022e 9623      	ADIW R28,3
00022f 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000230 93aa      	ST   -Y,R26
000231 81e9      	LDD  R30,Y+1
000232 68e0      	ORI  R30,0x80
000233 2fae      	MOV  R26,R30
000234 dfd2      	RCALL _pcd8544_wrcmd
000235 81e9      	LDD  R30,Y+1
000236 93ea      	ST   -Y,R30
000237 81a9      	LDD  R26,Y+1
000238 dfe0      	RCALL _pcd8544_setaddr_G100
000239 64e0      	ORI  R30,0x40
00023a 2fae      	MOV  R26,R30
00023b dfcb      	RCALL _pcd8544_wrcmd
00023c c00c      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00023d 93aa      	ST   -Y,R26
00023e 81e9      	LDD  R30,Y+1
00023f 93ea      	ST   -Y,R30
000240 81a9      	LDD  R26,Y+1
000241 dfee      	RCALL _pcd8544_gotoxy
000242 91e0 0527 	LDS  R30,_gfx_addr_G100
000244 91f0 0528 	LDS  R31,_gfx_addr_G100+1
000246 5de7      	SUBI R30,LOW(-_gfx_buffer_G100)
000247 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000248 81e0      	LD   R30,Z
                 _0x212000B:
000249 9622      	ADIW R28,2
00024a 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00024b 93aa      	ST   -Y,R26
00024c 940e 08a1 	CALL SUBOPT_0x0
00024e 81a8      	LD   R26,Y
00024f 83a0      	STD  Z+0,R26
000250 dfbf      	RCALL _pcd8544_wrdata_G100
000251 c0a5      	RJMP _0x212000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000252 93ba      	ST   -Y,R27
000253 93aa      	ST   -Y,R26
000254 940e 09a2 	CALL __SAVELOCR4
000256 91e0 0064 	LDS  R30,100
000258 61e0      	ORI  R30,0x10
000259 940e 08ac 	CALL SUBOPT_0x1
00025b 61e0      	ORI  R30,0x10
00025c 93e0 0065 	STS  101,R30
00025e 91e0 0064 	LDS  R30,100
000260 60e4      	ORI  R30,4
000261 940e 08ac 	CALL SUBOPT_0x1
000263 7feb      	ANDI R30,0xFB
000264 93e0 0065 	STS  101,R30
000266 91e0 0064 	LDS  R30,100
000268 60e2      	ORI  R30,2
000269 93e0 0064 	STS  100,R30
00026b 91e0 0064 	LDS  R30,100
00026d 60e1      	ORI  R30,1
00026e 93e0 0064 	STS  100,R30
000270 91e0 0064 	LDS  R30,100
000272 60e8      	ORI  R30,8
000273 940e 08ac 	CALL SUBOPT_0x1
000275 7fe7      	ANDI R30,0XF7
000276 93e0 0065 	STS  101,R30
000278 e0aa      	LDI  R26,LOW(10)
000279 e0b0      	LDI  R27,0
00027a 940e 0948 	CALL _delay_ms
00027c 91e0 0065 	LDS  R30,101
00027e 60e8      	ORI  R30,8
00027f 93e0 0065 	STS  101,R30
000281 81ec      	LDD  R30,Y+4
000282 81fd      	LDD  R31,Y+4+1
000283 9730      	SBIW R30,0
000284 f121      	BREQ _0x2000008
000285 81e6      	LDD  R30,Z+6
000286 70e3      	ANDI R30,LOW(0x3)
000287 2f1e      	MOV  R17,R30
000288 81ec      	LDD  R30,Y+4
000289 81fd      	LDD  R31,Y+4+1
00028a 81e6      	LDD  R30,Z+6
00028b 95e6      	LSR  R30
00028c 95e6      	LSR  R30
00028d 70e7      	ANDI R30,LOW(0x7)
00028e 2f0e      	MOV  R16,R30
00028f 81ec      	LDD  R30,Y+4
000290 81fd      	LDD  R31,Y+4+1
000291 81e7      	LDD  R30,Z+7
000292 77ef      	ANDI R30,0x7F
000293 2f3e      	MOV  R19,R30
000294 81ac      	LDD  R26,Y+4
000295 81bd      	LDD  R27,Y+4+1
000296 940e 0972 	CALL __GETW1P
                +
000298 93e0 0504+STS _glcd_state + ( 4 ) , R30
00029a 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00029c 9612      	ADIW R26,2
00029d 940e 0972 	CALL __GETW1P
                +
00029f 93e0 0519+STS _glcd_state + ( 25 ) , R30
0002a1 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0002a3 81ac      	LDD  R26,Y+4
0002a4 81bd      	LDD  R27,Y+4+1
0002a5 9614      	ADIW R26,4
0002a6 940e 0972 	CALL __GETW1P
0002a8 c00d      	RJMP _0x20000A1
                 _0x2000008:
0002a9 e010      	LDI  R17,LOW(0)
0002aa e003      	LDI  R16,LOW(3)
0002ab e332      	LDI  R19,LOW(50)
0002ac e0e0      	LDI  R30,LOW(0)
0002ad e0f0      	LDI  R31,HIGH(0)
                +
0002ae 93e0 0504+STS _glcd_state + ( 4 ) , R30
0002b0 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0002b2 93e0 0519+STS _glcd_state + ( 25 ) , R30
0002b4 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0002b6 93e0 051b+STS _glcd_state + ( 27 ) , R30
0002b8 93f0 051c+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0002ba e2a1      	LDI  R26,LOW(33)
0002bb df4b      	RCALL _pcd8544_wrcmd
0002bc 2fe1      	MOV  R30,R17
0002bd 60e4      	ORI  R30,4
0002be 2fae      	MOV  R26,R30
0002bf df47      	RCALL _pcd8544_wrcmd
0002c0 2fe0      	MOV  R30,R16
0002c1 61e0      	ORI  R30,0x10
0002c2 2fae      	MOV  R26,R30
0002c3 df43      	RCALL _pcd8544_wrcmd
0002c4 2fe3      	MOV  R30,R19
0002c5 68e0      	ORI  R30,0x80
0002c6 2fae      	MOV  R26,R30
0002c7 df3f      	RCALL _pcd8544_wrcmd
0002c8 e2a0      	LDI  R26,LOW(32)
0002c9 df3d      	RCALL _pcd8544_wrcmd
0002ca e0a1      	LDI  R26,LOW(1)
0002cb d022      	RCALL _glcd_display
0002cc e0e1      	LDI  R30,LOW(1)
0002cd 93e0 0500 	STS  _glcd_state,R30
0002cf e0e0      	LDI  R30,LOW(0)
                +
0002d0 93e0 0501+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0002d2 e0e1      	LDI  R30,LOW(1)
                +
0002d3 93e0 0506+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0002d5 93e0 0507+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0002d7 93e0 0508+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0002d9 efef      	LDI  R30,LOW(255)
                +
0002da 93e0 0509+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0002dc e0e1      	LDI  R30,LOW(1)
                +
0002dd 93e0 0510+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0002df e1e1     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0002e0 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0002e1 93fa      	ST   -Y,R31
0002e2 93ea      	ST   -Y,R30
0002e3 efef      	LDI  R30,LOW(255)
0002e4 93ea      	ST   -Y,R30
0002e5 e0a8      	LDI  R26,LOW(8)
0002e6 e0b0      	LDI  R27,0
0002e7 940e 0807 	CALL _memset
0002e9 d00f      	RCALL _glcd_clear
0002ea e0e1      	LDI  R30,LOW(1)
0002eb 940e 09a9 	CALL __LOADLOCR4
0002ed c060      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0002ee 93aa      	ST   -Y,R26
0002ef 81e8      	LD   R30,Y
0002f0 30e0      	CPI  R30,0
0002f1 f011      	BREQ _0x200000A
0002f2 e0ec      	LDI  R30,LOW(12)
0002f3 c001      	RJMP _0x200000B
                 _0x200000A:
0002f4 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
0002f5 2fae      	MOV  R26,R30
0002f6 df10      	RCALL _pcd8544_wrcmd
                 _0x212000A:
0002f7 9621      	ADIW R28,1
0002f8 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0002f9 940e 09a2 	CALL __SAVELOCR4
0002fb e030      	LDI  R19,0
                +
0002fc 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0002fe 30e0      	CPI  R30,0
0002ff f009      	BREQ _0x200000D
000300 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000301 e0e0      	LDI  R30,LOW(0)
000302 93ea      	ST   -Y,R30
000303 e0a0      	LDI  R26,LOW(0)
000304 df2b      	RCALL _pcd8544_gotoxy
                +
000305 ef08     +LDI R16 , LOW ( 504 )
000306 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000307 01f8      	MOVW R30,R16
                +
000308 5001     +SUBI R16 , LOW ( 1 )
000309 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00030a 9730      	SBIW R30,0
00030b f019      	BREQ _0x2000010
00030c 2fa3      	MOV  R26,R19
00030d df3d      	RCALL _pcd8544_wrbyte
00030e cff8      	RJMP _0x200000E
                 _0x2000010:
00030f e0e0      	LDI  R30,LOW(0)
000310 93ea      	ST   -Y,R30
000311 e0a0      	LDI  R26,LOW(0)
000312 d340      	RCALL _glcd_moveto
000313 940e 09a9 	CALL __LOADLOCR4
000315 940c 089f 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000317 93aa      	ST   -Y,R26
000318 931a      	ST   -Y,R17
000319 81ed      	LDD  R30,Y+5
00031a 93ea      	ST   -Y,R30
00031b 81ad      	LDD  R26,Y+5
00031c df20      	RCALL _pcd8544_rdbyte
00031d 2f1e      	MOV  R17,R30
00031e 81e9      	LDD  R30,Y+1
00031f 30e7      	CPI  R30,LOW(0x7)
000320 f011      	BREQ _0x2000020
000321 30e8      	CPI  R30,LOW(0x8)
000322 f439      	BRNE _0x2000021
                 _0x2000020:
000323 81eb      	LDD  R30,Y+3
000324 93ea      	ST   -Y,R30
000325 81aa      	LDD  R26,Y+2
000326 940e 083b 	CALL _glcd_mappixcolor1bit
000328 83eb      	STD  Y+3,R30
000329 c008      	RJMP _0x2000022
                 _0x2000021:
00032a 30e3      	CPI  R30,LOW(0x3)
00032b f421      	BRNE _0x2000024
00032c 81eb      	LDD  R30,Y+3
00032d 95e0      	COM  R30
00032e 83eb      	STD  Y+3,R30
00032f c002      	RJMP _0x2000025
                 _0x2000024:
000330 30e0      	CPI  R30,0
000331 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000332 81ea      	LDD  R30,Y+2
000333 95e0      	COM  R30
000334 231e      	AND  R17,R30
000335 c002      	RJMP _0x2000027
                 _0x2000026:
000336 30e2      	CPI  R30,LOW(0x2)
000337 f429      	BRNE _0x2000028
                 _0x2000027:
000338 81ea      	LDD  R30,Y+2
000339 81ab      	LDD  R26,Y+3
00033a 23ea      	AND  R30,R26
00033b 2b1e      	OR   R17,R30
00033c c00e      	RJMP _0x200001E
                 _0x2000028:
00033d 30e1      	CPI  R30,LOW(0x1)
00033e f429      	BRNE _0x2000029
00033f 81ea      	LDD  R30,Y+2
000340 81ab      	LDD  R26,Y+3
000341 23ea      	AND  R30,R26
000342 271e      	EOR  R17,R30
000343 c007      	RJMP _0x200001E
                 _0x2000029:
000344 30e4      	CPI  R30,LOW(0x4)
000345 f429      	BRNE _0x200001E
000346 81ea      	LDD  R30,Y+2
000347 95e0      	COM  R30
000348 81ab      	LDD  R26,Y+3
000349 2bea      	OR   R30,R26
00034a 231e      	AND  R17,R30
                 _0x200001E:
00034b 2fa1      	MOV  R26,R17
00034c defe      	RCALL _pcd8544_wrbyte
00034d 8118      	LDD  R17,Y+0
                 _0x2120009:
00034e 9626      	ADIW R28,6
00034f 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000350 93aa      	ST   -Y,R26
000351 9723      	SBIW R28,3
000352 940e 09a0 	CALL __SAVELOCR6
000354 89a8      	LDD  R26,Y+16
000355 35a4      	CPI  R26,LOW(0x54)
000356 f448      	BRSH _0x200002C
000357 85af      	LDD  R26,Y+15
000358 33a0      	CPI  R26,LOW(0x30)
000359 f430      	BRSH _0x200002C
00035a 85ae      	LDD  R26,Y+14
00035b 30a0      	CPI  R26,LOW(0x0)
00035c f019      	BREQ _0x200002C
00035d 85ad      	LDD  R26,Y+13
00035e 30a0      	CPI  R26,LOW(0x0)
00035f f409      	BRNE _0x200002B
                 _0x200002C:
000360 c1cc      	RJMP _0x2120008
                 _0x200002B:
000361 85ee      	LDD  R30,Y+14
000362 87e8      	STD  Y+8,R30
000363 89a8      	LDD  R26,Y+16
000364 27bb      	CLR  R27
000365 85ee      	LDD  R30,Y+14
000366 e0f0      	LDI  R31,0
000367 0fae      	ADD  R26,R30
000368 1fbf      	ADC  R27,R31
000369 35a5      	CPI  R26,LOW(0x55)
00036a e0e0      	LDI  R30,HIGH(0x55)
00036b 07be      	CPC  R27,R30
00036c f020      	BRLO _0x200002E
00036d 89a8      	LDD  R26,Y+16
00036e e5e4      	LDI  R30,LOW(84)
00036f 1bea      	SUB  R30,R26
000370 87ee      	STD  Y+14,R30
                 _0x200002E:
000371 852d      	LDD  R18,Y+13
000372 85af      	LDD  R26,Y+15
000373 27bb      	CLR  R27
000374 85ed      	LDD  R30,Y+13
000375 e0f0      	LDI  R31,0
000376 0fae      	ADD  R26,R30
000377 1fbf      	ADC  R27,R31
000378 97d1      	SBIW R26,49
000379 f020      	BRLO _0x200002F
00037a 85af      	LDD  R26,Y+15
00037b e3e0      	LDI  R30,LOW(48)
00037c 1bea      	SUB  R30,R26
00037d 87ed      	STD  Y+13,R30
                 _0x200002F:
00037e 85a9      	LDD  R26,Y+9
00037f 30a6      	CPI  R26,LOW(0x6)
000380 f009      	BREQ PC+2
000381 c05b      	RJMP _0x2000030
000382 85ec      	LDD  R30,Y+12
000383 30e1      	CPI  R30,LOW(0x1)
000384 f409      	BRNE _0x2000034
000385 c1a7      	RJMP _0x2120008
                 _0x2000034:
000386 30e3      	CPI  R30,LOW(0x3)
000387 f439      	BRNE _0x2000037
                +
000388 91e0 051b+LDS R30 , _glcd_state + ( 27 )
00038a 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00038c 9730      	SBIW R30,0
00038d f409      	BRNE _0x2000036
00038e c19e      	RJMP _0x2120008
                 _0x2000036:
                 _0x2000037:
00038f 8508      	LDD  R16,Y+8
000390 85ed      	LDD  R30,Y+13
000391 95e6      	LSR  R30
000392 95e6      	LSR  R30
000393 95e6      	LSR  R30
000394 2f3e      	MOV  R19,R30
000395 2fe2      	MOV  R30,R18
000396 70e7      	ANDI R30,LOW(0x7)
000397 f419      	BRNE _0x2000039
000398 85ad      	LDD  R26,Y+13
000399 172a      	CP   R18,R26
00039a f0e9      	BREQ _0x2000038
                 _0x2000039:
00039b 2fa0      	MOV  R26,R16
00039c 27bb      	CLR  R27
00039d 2fe3      	MOV  R30,R19
00039e e0f0      	LDI  R31,0
00039f 940e 096a 	CALL __MULW12U
0003a1 85aa      	LDD  R26,Y+10
0003a2 85bb      	LDD  R27,Y+10+1
0003a3 940e 08b1 	CALL SUBOPT_0x2
0003a5 9526      	LSR  R18
0003a6 9526      	LSR  R18
0003a7 9526      	LSR  R18
0003a8 2f53      	MOV  R21,R19
                 _0x200003B:
0003a9 935f      	PUSH R21
0003aa 5f5f      	SUBI R21,-1
0003ab 2fe2      	MOV  R30,R18
0003ac 91af      	POP  R26
0003ad 17ea      	CP   R30,R26
0003ae f048      	BRLO _0x200003D
0003af 2f10      	MOV  R17,R16
                 _0x200003E:
0003b0 2fe1      	MOV  R30,R17
0003b1 5011      	SUBI R17,1
0003b2 30e0      	CPI  R30,0
0003b3 f019      	BREQ _0x2000040
0003b4 940e 08b6 	CALL SUBOPT_0x3
0003b6 cff9      	RJMP _0x200003E
                 _0x2000040:
0003b7 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0003b8 85ae      	LDD  R26,Y+14
0003b9 170a      	CP   R16,R26
0003ba f111      	BREQ _0x2000041
0003bb 85ee      	LDD  R30,Y+14
0003bc 85aa      	LDD  R26,Y+10
0003bd 85bb      	LDD  R27,Y+10+1
0003be e0f0      	LDI  R31,0
0003bf 940e 08b1 	CALL SUBOPT_0x2
0003c1 85ed      	LDD  R30,Y+13
0003c2 70e7      	ANDI R30,LOW(0x7)
0003c3 f009      	BREQ _0x2000042
0003c4 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0003c5 e020      	LDI  R18,LOW(0)
                 _0x2000043:
0003c6 932f      	PUSH R18
0003c7 5f2f      	SUBI R18,-1
0003c8 2fe3      	MOV  R30,R19
0003c9 91af      	POP  R26
0003ca 17ae      	CP   R26,R30
0003cb f488      	BRSH _0x2000045
0003cc 851e      	LDD  R17,Y+14
                 _0x2000046:
0003cd 931f      	PUSH R17
0003ce 5f1f      	SUBI R17,-1
0003cf 2fe0      	MOV  R30,R16
0003d0 91af      	POP  R26
0003d1 17ae      	CP   R26,R30
0003d2 f418      	BRSH _0x2000048
0003d3 940e 08b6 	CALL SUBOPT_0x3
0003d5 cff7      	RJMP _0x2000046
                 _0x2000048:
0003d6 85ee      	LDD  R30,Y+14
0003d7 81ae      	LDD  R26,Y+6
0003d8 81bf      	LDD  R27,Y+6+1
0003d9 e0f0      	LDI  R31,0
0003da 940e 08b1 	CALL SUBOPT_0x2
0003dc cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0003dd 85ef      	LDD  R30,Y+15
0003de 70e7      	ANDI R30,LOW(0x7)
0003df 2f3e      	MOV  R19,R30
                 _0x2000049:
0003e0 85ed      	LDD  R30,Y+13
0003e1 30e0      	CPI  R30,0
0003e2 f409      	BRNE PC+2
0003e3 c149      	RJMP _0x200004B
0003e4 85ea      	LDD  R30,Y+10
0003e5 85fb      	LDD  R31,Y+10+1
0003e6 83ee      	STD  Y+6,R30
0003e7 83ff      	STD  Y+6+1,R31
0003e8 e010      	LDI  R17,LOW(0)
0003e9 8908      	LDD  R16,Y+16
0003ea 3030      	CPI  R19,0
0003eb f009      	BREQ PC+2
0003ec c063      	RJMP _0x200004C
0003ed 85ad      	LDD  R26,Y+13
0003ee 30a8      	CPI  R26,LOW(0x8)
0003ef f408      	BRSH PC+2
0003f0 c05a      	RJMP _0x200004D
0003f1 85e9      	LDD  R30,Y+9
0003f2 30e0      	CPI  R30,0
0003f3 f011      	BREQ _0x2000052
0003f4 30e3      	CPI  R30,LOW(0x3)
0003f5 f409      	BRNE _0x2000053
                 _0x2000052:
0003f6 c002      	RJMP _0x2000054
                 _0x2000053:
0003f7 30e7      	CPI  R30,LOW(0x7)
0003f8 f409      	BRNE _0x2000055
                 _0x2000054:
0003f9 c002      	RJMP _0x2000056
                 _0x2000055:
0003fa 30e8      	CPI  R30,LOW(0x8)
0003fb f409      	BRNE _0x2000057
                 _0x2000056:
0003fc c002      	RJMP _0x2000058
                 _0x2000057:
0003fd 30e9      	CPI  R30,LOW(0x9)
0003fe f409      	BRNE _0x2000059
                 _0x2000058:
0003ff c002      	RJMP _0x200005A
                 _0x2000059:
000400 30ea      	CPI  R30,LOW(0xA)
000401 f421      	BRNE _0x200005B
                 _0x200005A:
000402 930a      	ST   -Y,R16
000403 89a8      	LDD  R26,Y+16
000404 de2b      	RCALL _pcd8544_gotoxy
000405 c004      	RJMP _0x2000050
                 _0x200005B:
000406 30e6      	CPI  R30,LOW(0x6)
000407 f411      	BRNE _0x2000050
000408 940e 08c3 	CALL SUBOPT_0x4
                 _0x2000050:
                 _0x200005D:
00040a 931f      	PUSH R17
00040b 5f1f      	SUBI R17,-1
00040c 85ee      	LDD  R30,Y+14
00040d 91af      	POP  R26
00040e 17ae      	CP   R26,R30
00040f f5a0      	BRSH _0x200005F
000410 85a9      	LDD  R26,Y+9
000411 30a6      	CPI  R26,LOW(0x6)
000412 f451      	BRNE _0x2000060
000413 940e 08c7 	CALL SUBOPT_0x5
000415 93fa      	ST   -Y,R31
000416 93ea      	ST   -Y,R30
000417 940e 08a1 	CALL SUBOPT_0x0
000419 81a0      	LD   R26,Z
00041a 940e 0882 	CALL _glcd_writemem
00041c c026      	RJMP _0x2000061
                 _0x2000060:
00041d 85e9      	LDD  R30,Y+9
00041e 30e9      	CPI  R30,LOW(0x9)
00041f f411      	BRNE _0x2000065
000420 e050      	LDI  R21,LOW(0)
000421 c00e      	RJMP _0x2000066
                 _0x2000065:
000422 30ea      	CPI  R30,LOW(0xA)
000423 f411      	BRNE _0x2000064
000424 ef5f      	LDI  R21,LOW(255)
000425 c00a      	RJMP _0x2000066
                 _0x2000064:
000426 940e 08c7 	CALL SUBOPT_0x5
000428 940e 08d0 	CALL SUBOPT_0x6
00042a 2f5e      	MOV  R21,R30
00042b 85e9      	LDD  R30,Y+9
00042c 30e7      	CPI  R30,LOW(0x7)
00042d f011      	BREQ _0x200006D
00042e 30e8      	CPI  R30,LOW(0x8)
00042f f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000430 940e 08d6 	CALL SUBOPT_0x7
000432 2f5e      	MOV  R21,R30
000433 c006      	RJMP _0x200006F
                 _0x200006E:
000434 30e3      	CPI  R30,LOW(0x3)
000435 f411      	BRNE _0x2000071
000436 9550      	COM  R21
000437 c002      	RJMP _0x2000072
                 _0x2000071:
000438 30e0      	CPI  R30,0
000439 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
00043a 2fa5      	MOV  R26,R21
00043b ddd4      	RCALL _pcd8544_wrdata_G100
00043c c006      	RJMP _0x200006B
                 _0x2000074:
00043d 940e 08da 	CALL SUBOPT_0x8
00043f efef      	LDI  R30,LOW(255)
000440 93ea      	ST   -Y,R30
000441 85ad      	LDD  R26,Y+13
000442 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
000443 cfc6      	RJMP _0x200005D
                 _0x200005F:
000444 85ef      	LDD  R30,Y+15
000445 5fe8      	SUBI R30,-LOW(8)
000446 87ef      	STD  Y+15,R30
000447 85ed      	LDD  R30,Y+13
000448 50e8      	SUBI R30,LOW(8)
000449 87ed      	STD  Y+13,R30
00044a c0d9      	RJMP _0x2000075
                 _0x200004D:
00044b 855d      	LDD  R21,Y+13
00044c e020      	LDI  R18,LOW(0)
00044d e0e0      	LDI  R30,LOW(0)
00044e 87ed      	STD  Y+13,R30
00044f c07e      	RJMP _0x2000076
                 _0x200004C:
000450 2fe3      	MOV  R30,R19
000451 85ad      	LDD  R26,Y+13
000452 0fae      	ADD  R26,R30
000453 30a9      	CPI  R26,LOW(0x9)
000454 f420      	BRSH _0x2000077
000455 852d      	LDD  R18,Y+13
000456 e0e0      	LDI  R30,LOW(0)
000457 87ed      	STD  Y+13,R30
000458 c003      	RJMP _0x2000078
                 _0x2000077:
000459 e0e8      	LDI  R30,LOW(8)
00045a 1be3      	SUB  R30,R19
00045b 2f2e      	MOV  R18,R30
                 _0x2000078:
00045c 933a      	ST   -Y,R19
00045d 2fa2      	MOV  R26,R18
00045e 940e 0830 	CALL _glcd_getmask
000460 2f4e      	MOV  R20,R30
000461 85e9      	LDD  R30,Y+9
000462 30e6      	CPI  R30,LOW(0x6)
000463 f511      	BRNE _0x200007C
000464 940e 08c3 	CALL SUBOPT_0x4
                 _0x200007D:
000466 931f      	PUSH R17
000467 5f1f      	SUBI R17,-1
000468 85ee      	LDD  R30,Y+14
000469 91af      	POP  R26
00046a 17ae      	CP   R26,R30
00046b f4c8      	BRSH _0x200007F
00046c 940e 08a1 	CALL SUBOPT_0x0
00046e 81e0      	LD   R30,Z
00046f 23e4      	AND  R30,R20
000470 2fae      	MOV  R26,R30
000471 2fe3      	MOV  R30,R19
000472 940e 0962 	CALL __LSRB12
000474 940e 08e0 	CALL SUBOPT_0x9
000476 2fe3      	MOV  R30,R19
000477 2fa4      	MOV  R26,R20
000478 940e 0962 	CALL __LSRB12
00047a 95e0      	COM  R30
00047b 21e1      	AND  R30,R1
00047c 2b5e      	OR   R21,R30
00047d 940e 08c7 	CALL SUBOPT_0x5
00047f 93fa      	ST   -Y,R31
000480 93ea      	ST   -Y,R30
000481 2fa5      	MOV  R26,R21
000482 940e 0882 	CALL _glcd_writemem
000484 cfe1      	RJMP _0x200007D
                 _0x200007F:
000485 c02c      	RJMP _0x200007B
                 _0x200007C:
000486 30e9      	CPI  R30,LOW(0x9)
000487 f411      	BRNE _0x2000080
000488 e050      	LDI  R21,LOW(0)
000489 c003      	RJMP _0x2000081
                 _0x2000080:
00048a 30ea      	CPI  R30,LOW(0xA)
00048b f4a9      	BRNE _0x2000087
00048c ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
00048d 940e 08d6 	CALL SUBOPT_0x7
00048f 2fae      	MOV  R26,R30
000490 2fe3      	MOV  R30,R19
000491 940e 095a 	CALL __LSLB12
000493 2f5e      	MOV  R21,R30
                 _0x2000084:
000494 931f      	PUSH R17
000495 5f1f      	SUBI R17,-1
000496 85ee      	LDD  R30,Y+14
000497 91af      	POP  R26
000498 17ae      	CP   R26,R30
000499 f430      	BRSH _0x2000086
00049a 940e 08da 	CALL SUBOPT_0x8
00049c 934a      	ST   -Y,R20
00049d e0a0      	LDI  R26,LOW(0)
00049e de78      	RCALL _pcd8544_wrmasked_G100
00049f cff4      	RJMP _0x2000084
                 _0x2000086:
0004a0 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0004a1 931f      	PUSH R17
0004a2 5f1f      	SUBI R17,-1
0004a3 85ee      	LDD  R30,Y+14
0004a4 91af      	POP  R26
0004a5 17ae      	CP   R26,R30
0004a6 f458      	BRSH _0x200008A
0004a7 940e 08eb 	CALL SUBOPT_0xA
0004a9 2fae      	MOV  R26,R30
0004aa 2fe3      	MOV  R30,R19
0004ab 940e 095a 	CALL __LSLB12
0004ad 93ea      	ST   -Y,R30
0004ae 934a      	ST   -Y,R20
0004af 85ad      	LDD  R26,Y+13
0004b0 de66      	RCALL _pcd8544_wrmasked_G100
0004b1 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0004b2 85ed      	LDD  R30,Y+13
0004b3 30e0      	CPI  R30,0
0004b4 f409      	BRNE _0x200008B
0004b5 c077      	RJMP _0x200004B
                 _0x200008B:
0004b6 85ad      	LDD  R26,Y+13
0004b7 30a8      	CPI  R26,LOW(0x8)
0004b8 f428      	BRSH _0x200008C
0004b9 85ed      	LDD  R30,Y+13
0004ba 1be2      	SUB  R30,R18
0004bb 2f5e      	MOV  R21,R30
0004bc e0e0      	LDI  R30,LOW(0)
0004bd c003      	RJMP _0x20000A2
                 _0x200008C:
0004be 2f53      	MOV  R21,R19
0004bf 85ed      	LDD  R30,Y+13
0004c0 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0004c1 87ed      	STD  Y+13,R30
0004c2 e010      	LDI  R17,LOW(0)
0004c3 85ef      	LDD  R30,Y+15
0004c4 5fe8      	SUBI R30,-LOW(8)
0004c5 87ef      	STD  Y+15,R30
0004c6 e0e8      	LDI  R30,LOW(8)
0004c7 1be3      	SUB  R30,R19
0004c8 2f2e      	MOV  R18,R30
0004c9 8908      	LDD  R16,Y+16
0004ca 85ea      	LDD  R30,Y+10
0004cb 85fb      	LDD  R31,Y+10+1
0004cc 83ee      	STD  Y+6,R30
0004cd 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0004ce 2fe5      	MOV  R30,R21
0004cf e0f0      	LDI  R31,0
0004d0 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0004d1 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0004d2 9144      	LPM  R20,Z
0004d3 85e9      	LDD  R30,Y+9
0004d4 30e6      	CPI  R30,LOW(0x6)
0004d5 f511      	BRNE _0x2000091
0004d6 940e 08c3 	CALL SUBOPT_0x4
                 _0x2000092:
0004d8 931f      	PUSH R17
0004d9 5f1f      	SUBI R17,-1
0004da 85ee      	LDD  R30,Y+14
0004db 91af      	POP  R26
0004dc 17ae      	CP   R26,R30
0004dd f4c8      	BRSH _0x2000094
0004de 940e 08a1 	CALL SUBOPT_0x0
0004e0 81e0      	LD   R30,Z
0004e1 23e4      	AND  R30,R20
0004e2 2fae      	MOV  R26,R30
0004e3 2fe2      	MOV  R30,R18
0004e4 940e 095a 	CALL __LSLB12
0004e6 940e 08e0 	CALL SUBOPT_0x9
0004e8 2fe2      	MOV  R30,R18
0004e9 2fa4      	MOV  R26,R20
0004ea 940e 095a 	CALL __LSLB12
0004ec 95e0      	COM  R30
0004ed 21e1      	AND  R30,R1
0004ee 2b5e      	OR   R21,R30
0004ef 940e 08c7 	CALL SUBOPT_0x5
0004f1 93fa      	ST   -Y,R31
0004f2 93ea      	ST   -Y,R30
0004f3 2fa5      	MOV  R26,R21
0004f4 940e 0882 	CALL _glcd_writemem
0004f6 cfe1      	RJMP _0x2000092
                 _0x2000094:
0004f7 c02c      	RJMP _0x2000090
                 _0x2000091:
0004f8 30e9      	CPI  R30,LOW(0x9)
0004f9 f411      	BRNE _0x2000095
0004fa e050      	LDI  R21,LOW(0)
0004fb c003      	RJMP _0x2000096
                 _0x2000095:
0004fc 30ea      	CPI  R30,LOW(0xA)
0004fd f4a9      	BRNE _0x200009C
0004fe ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
0004ff 940e 08d6 	CALL SUBOPT_0x7
000501 2fae      	MOV  R26,R30
000502 2fe2      	MOV  R30,R18
000503 940e 0962 	CALL __LSRB12
000505 2f5e      	MOV  R21,R30
                 _0x2000099:
000506 931f      	PUSH R17
000507 5f1f      	SUBI R17,-1
000508 85ee      	LDD  R30,Y+14
000509 91af      	POP  R26
00050a 17ae      	CP   R26,R30
00050b f430      	BRSH _0x200009B
00050c 940e 08da 	CALL SUBOPT_0x8
00050e 934a      	ST   -Y,R20
00050f e0a0      	LDI  R26,LOW(0)
000510 de06      	RCALL _pcd8544_wrmasked_G100
000511 cff4      	RJMP _0x2000099
                 _0x200009B:
000512 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000513 931f      	PUSH R17
000514 5f1f      	SUBI R17,-1
000515 85ee      	LDD  R30,Y+14
000516 91af      	POP  R26
000517 17ae      	CP   R26,R30
000518 f458      	BRSH _0x200009F
000519 940e 08eb 	CALL SUBOPT_0xA
00051b 2fae      	MOV  R26,R30
00051c 2fe2      	MOV  R30,R18
00051d 940e 0962 	CALL __LSRB12
00051f 93ea      	ST   -Y,R30
000520 934a      	ST   -Y,R20
000521 85ad      	LDD  R26,Y+13
000522 ddf4      	RCALL _pcd8544_wrmasked_G100
000523 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000524 85e8      	LDD  R30,Y+8
000525 85aa      	LDD  R26,Y+10
000526 85bb      	LDD  R27,Y+10+1
000527 e0f0      	LDI  R31,0
000528 0fea      	ADD  R30,R26
000529 1ffb      	ADC  R31,R27
00052a 87ea      	STD  Y+10,R30
00052b 87fb      	STD  Y+10+1,R31
00052c ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2120008:
00052d 940e 09a7 	CALL __LOADLOCR6
00052f 9661      	ADIW R28,17
000530 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000531 940e 08f8 	CALL SUBOPT_0xB
000533 f024      	BRLT _0x2020003
000534 e0e0      	LDI  R30,LOW(0)
000535 e0f0      	LDI  R31,HIGH(0)
000536 940c 0839 	JMP  _0x2120003
                 _0x2020003:
000538 81a8      	LD   R26,Y
000539 81b9      	LDD  R27,Y+1
00053a 35a4      	CPI  R26,LOW(0x54)
00053b e0e0      	LDI  R30,HIGH(0x54)
00053c 07be      	CPC  R27,R30
00053d f024      	BRLT _0x2020004
00053e e5e3      	LDI  R30,LOW(83)
00053f e0f0      	LDI  R31,HIGH(83)
000540 940c 0839 	JMP  _0x2120003
                 _0x2020004:
000542 81e8      	LD   R30,Y
000543 81f9      	LDD  R31,Y+1
000544 940c 0839 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000546 940e 08f8 	CALL SUBOPT_0xB
000548 f024      	BRLT _0x2020005
000549 e0e0      	LDI  R30,LOW(0)
00054a e0f0      	LDI  R31,HIGH(0)
00054b 940c 0839 	JMP  _0x2120003
                 _0x2020005:
00054d 81a8      	LD   R26,Y
00054e 81b9      	LDD  R27,Y+1
00054f 97d0      	SBIW R26,48
000550 f024      	BRLT _0x2020006
000551 e2ef      	LDI  R30,LOW(47)
000552 e0f0      	LDI  R31,HIGH(47)
000553 940c 0839 	JMP  _0x2120003
                 _0x2020006:
000555 81e8      	LD   R30,Y
000556 81f9      	LDD  R31,Y+1
000557 940c 0839 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000559 93ba      	ST   -Y,R27
00055a 93aa      	ST   -Y,R26
00055b 9723      	SBIW R28,3
00055c 940e 08ff 	CALL SUBOPT_0xC
00055e 018f      	MOVW R16,R30
00055f 2e00      	MOV  R0,R16
000560 2a01      	OR   R0,R17
000561 f419      	BRNE _0x202000B
000562 e0e0      	LDI  R30,LOW(0)
000563 e0f0      	LDI  R31,HIGH(0)
000564 c05f      	RJMP _0x2120007
                 _0x202000B:
000565 940e 0906 	CALL SUBOPT_0xD
000567 820f      	STD  Y+7,R0
000568 940e 0906 	CALL SUBOPT_0xD
00056a 820e      	STD  Y+6,R0
00056b 940e 0906 	CALL SUBOPT_0xD
00056d 8608      	STD  Y+8,R0
00056e 85eb      	LDD  R30,Y+11
00056f 85a8      	LDD  R26,Y+8
000570 17ea      	CP   R30,R26
000571 f418      	BRSH _0x202000C
000572 e0e0      	LDI  R30,LOW(0)
000573 e0f0      	LDI  R31,HIGH(0)
000574 c04f      	RJMP _0x2120007
                 _0x202000C:
000575 01f8      	MOVW R30,R16
                +
000576 5f0f     +SUBI R16 , LOW ( - 1 )
000577 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000578 9154      	LPM  R21,Z
000579 85a8      	LDD  R26,Y+8
00057a 27bb      	CLR  R27
00057b 27ee      	CLR  R30
00057c 0fa5      	ADD  R26,R21
00057d 1fbe      	ADC  R27,R30
00057e 85eb      	LDD  R30,Y+11
00057f e0f0      	LDI  R31,0
000580 17ea      	CP   R30,R26
000581 07fb      	CPC  R31,R27
000582 f018      	BRLO _0x202000D
000583 e0e0      	LDI  R30,LOW(0)
000584 e0f0      	LDI  R31,HIGH(0)
000585 c03e      	RJMP _0x2120007
                 _0x202000D:
000586 81ee      	LDD  R30,Y+6
000587 95e6      	LSR  R30
000588 95e6      	LSR  R30
000589 95e6      	LSR  R30
00058a 2f4e      	MOV  R20,R30
00058b 81ee      	LDD  R30,Y+6
00058c 70e7      	ANDI R30,LOW(0x7)
00058d f009      	BREQ _0x202000E
00058e 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
00058f 81ef      	LDD  R30,Y+7
000590 30e0      	CPI  R30,0
000591 f0a1      	BREQ _0x202000F
000592 85a9      	LDD  R26,Y+9
000593 85ba      	LDD  R27,Y+9+1
000594 93ec      	ST   X,R30
000595 85a8      	LDD  R26,Y+8
000596 85eb      	LDD  R30,Y+11
000597 1bea      	SUB  R30,R26
000598 e0f0      	LDI  R31,0
000599 01df      	MOVW R26,R30
00059a 81ef      	LDD  R30,Y+7
00059b e0f0      	LDI  R31,0
00059c 940e 096a 	CALL __MULW12U
00059e 01df      	MOVW R26,R30
00059f 2fe4      	MOV  R30,R20
0005a0 e0f0      	LDI  R31,0
0005a1 940e 096a 	CALL __MULW12U
0005a3 0fe0      	ADD  R30,R16
0005a4 1ff1      	ADC  R31,R17
0005a5 c01e      	RJMP _0x2120007
                 _0x202000F:
0005a6 0198      	MOVW R18,R16
0005a7 2fe5      	MOV  R30,R21
0005a8 e0f0      	LDI  R31,0
                +
0005a9 0f0e     +ADD R16 , R30
0005aa 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0005ab 85a8      	LDD  R26,Y+8
0005ac 5faf      	SUBI R26,-LOW(1)
0005ad 87a8      	STD  Y+8,R26
0005ae 50a1      	SUBI R26,LOW(1)
0005af 85eb      	LDD  R30,Y+11
0005b0 17ae      	CP   R26,R30
0005b1 f460      	BRSH _0x2020012
0005b2 01f9      	MOVW R30,R18
                +
0005b3 5f2f     +SUBI R18 , LOW ( - 1 )
0005b4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0005b5 91a4      	LPM  R26,Z
0005b6 e0b0      	LDI  R27,0
0005b7 2fe4      	MOV  R30,R20
0005b8 e0f0      	LDI  R31,0
0005b9 940e 096a 	CALL __MULW12U
                +
0005bb 0f0e     +ADD R16 , R30
0005bc 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0005bd cfed      	RJMP _0x2020010
                 _0x2020012:
0005be 01f9      	MOVW R30,R18
0005bf 91e4      	LPM  R30,Z
0005c0 85a9      	LDD  R26,Y+9
0005c1 85ba      	LDD  R27,Y+9+1
0005c2 93ec      	ST   X,R30
0005c3 01f8      	MOVW R30,R16
                 _0x2120007:
0005c4 940e 09a7 	CALL __LOADLOCR6
0005c6 962c      	ADIW R28,12
0005c7 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0005c8 e0e0      	LDI  R30,LOW(0)
                +
0005c9 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0005cb 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0005cd 27bb      	CLR  R27
0005ce 940e 090b 	CALL SUBOPT_0xE
0005d0 e0f0      	LDI  R31,0
0005d1 0fae      	ADD  R26,R30
0005d2 1fbf      	ADC  R27,R31
                +
0005d3 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0005d5 e0f0      	LDI  R31,0
0005d6 0fae      	ADD  R26,R30
0005d7 1fbf      	ADC  R27,R31
0005d8 df6d      	RCALL _glcd_clipy
                +
0005d9 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0005db 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0005dc 93aa      	ST   -Y,R26
0005dd 9721      	SBIW R28,1
0005de 940e 08ff 	CALL SUBOPT_0xC
0005e0 9730      	SBIW R30,0
0005e1 f409      	BRNE PC+2
0005e2 c055      	RJMP _0x202001F
0005e3 81af      	LDD  R26,Y+7
0005e4 30aa      	CPI  R26,LOW(0xA)
0005e5 f409      	BRNE _0x2020020
0005e6 c04f      	RJMP _0x2020021
                 _0x2020020:
0005e7 81ef      	LDD  R30,Y+7
0005e8 93ea      	ST   -Y,R30
0005e9 01de      	MOVW R26,R28
0005ea 9617      	ADIW R26,7
0005eb df6d      	RCALL _glcd_getcharw_G101
0005ec 01af      	MOVW R20,R30
0005ed 9730      	SBIW R30,0
0005ee f409      	BRNE _0x2020022
0005ef c04a      	RJMP _0x2120006
                 _0x2020022:
                +
0005f0 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0005f2 81ae      	LDD  R26,Y+6
0005f3 0fea      	ADD  R30,R26
0005f4 2f3e      	MOV  R19,R30
                +
0005f5 91a0 0502+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0005f7 27bb      	CLR  R27
0005f8 e0f0      	LDI  R31,0
0005f9 0fea      	ADD  R30,R26
0005fa 1ffb      	ADC  R31,R27
0005fb 018f      	MOVW R16,R30
                +
0005fc 3505     +CPI R16 , LOW ( 85 )
0005fd e0e0     +LDI R30 , HIGH ( 85 )
0005fe 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0005ff f018      	BRLO _0x2020023
000600 2f03      	MOV  R16,R19
000601 2711      	CLR  R17
000602 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000603 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000605 93ea      	ST   -Y,R30
                +
000606 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000608 93ea      	ST   -Y,R30
000609 85e8      	LDD  R30,Y+8
00060a 93ea      	ST   -Y,R30
00060b 940e 090b 	CALL SUBOPT_0xE
00060d 93ea      	ST   -Y,R30
00060e e0e1      	LDI  R30,LOW(1)
00060f 93ea      	ST   -Y,R30
000610 935a      	ST   -Y,R21
000611 934a      	ST   -Y,R20
000612 e0a7      	LDI  R26,LOW(7)
000613 dd3c      	RCALL _glcd_block
                +
000614 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000616 81ae      	LDD  R26,Y+6
000617 0fea      	ADD  R30,R26
000618 93ea      	ST   -Y,R30
                +
000619 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00061b 93ea      	ST   -Y,R30
                +
00061c 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00061e 93ea      	ST   -Y,R30
00061f 940e 090b 	CALL SUBOPT_0xE
000621 940e 0912 	CALL SUBOPT_0xF
                +
000623 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000625 93ea      	ST   -Y,R30
                +
000626 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000628 940e 090b 	CALL SUBOPT_0xE
00062a 0fea      	ADD  R30,R26
00062b 93ea      	ST   -Y,R30
00062c 933a      	ST   -Y,R19
                +
00062d 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00062f 940e 0912 	CALL SUBOPT_0xF
000631 e5e4      	LDI  R30,LOW(84)
000632 e0f0      	LDI  R31,HIGH(84)
000633 17e0      	CP   R30,R16
000634 07f1      	CPC  R31,R17
000635 f411      	BRNE _0x2020024
                 _0x2020021:
000636 df91      	RCALL _glcd_new_line_G101
000637 c002      	RJMP _0x2120006
                 _0x2020024:
                 _0x202001F:
                +
000638 9300 0502+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
00063a 940e 09a7 	CALL __LOADLOCR6
00063c 9628      	ADIW R28,8
00063d 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00063e 93ba      	ST   -Y,R27
00063f 93aa      	ST   -Y,R26
000640 931a      	ST   -Y,R17
000641 81ec      	LDD  R30,Y+4
000642 93ea      	ST   -Y,R30
000643 81ac      	LDD  R26,Y+4
000644 d00e      	RCALL _glcd_moveto
                 _0x2020025:
000645 81a9      	LDD  R26,Y+1
000646 81ba      	LDD  R27,Y+1+1
000647 91ed      	LD   R30,X+
000648 83a9      	STD  Y+1,R26
000649 83ba      	STD  Y+1+1,R27
00064a 2f1e      	MOV  R17,R30
00064b 30e0      	CPI  R30,0
00064c f019      	BREQ _0x2020027
00064d 2fa1      	MOV  R26,R17
00064e df8d      	RCALL _glcd_putchar
00064f cff5      	RJMP _0x2020025
                 _0x2020027:
000650 8118      	LDD  R17,Y+0
000651 940c 0815 	JMP  _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000653 93aa      	ST   -Y,R26
000654 81a9      	LDD  R26,Y+1
000655 27bb      	CLR  R27
000656 deda      	RCALL _glcd_clipx
                +
000657 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000659 81a8      	LD   R26,Y
00065a 27bb      	CLR  R27
00065b deea      	RCALL _glcd_clipy
                +
00065c 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00065e 940c 0839 	JMP  _0x2120003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G103:
                 ; .FSTART _put_buff_G103
000660 93ba      	ST   -Y,R27
000661 93aa      	ST   -Y,R26
000662 931a      	ST   -Y,R17
000663 930a      	ST   -Y,R16
000664 81aa      	LDD  R26,Y+2
000665 81bb      	LDD  R27,Y+2+1
000666 9612      	ADIW R26,2
000667 940e 0972 	CALL __GETW1P
000669 9730      	SBIW R30,0
00066a f159      	BREQ _0x2060010
00066b 81aa      	LDD  R26,Y+2
00066c 81bb      	LDD  R27,Y+2+1
00066d 9614      	ADIW R26,4
00066e 940e 0972 	CALL __GETW1P
000670 018f      	MOVW R16,R30
000671 9730      	SBIW R30,0
000672 f061      	BREQ _0x2060012
                +
000673 3002     +CPI R16 , LOW ( 2 )
000674 e0e0     +LDI R30 , HIGH ( 2 )
000675 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000676 f098      	BRLO _0x2060013
000677 01f8      	MOVW R30,R16
000678 9731      	SBIW R30,1
000679 018f      	MOVW R16,R30
                +
00067a 81aa     +LDD R26 , Y + 2
00067b 81bb     +LDD R27 , Y + 2 + 1
00067c 9614     +ADIW R26 , 4
00067d 93ed     +ST X + , R30
00067e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2060012:
00067f 81aa      	LDD  R26,Y+2
000680 81bb      	LDD  R27,Y+2+1
000681 9612      	ADIW R26,2
000682 91ed      	LD   R30,X+
000683 91fd      	LD   R31,X+
000684 9631      	ADIW R30,1
000685 93fe      	ST   -X,R31
000686 93ee      	ST   -X,R30
000687 9731      	SBIW R30,1
000688 81ac      	LDD  R26,Y+4
000689 83a0      	STD  Z+0,R26
                 _0x2060013:
00068a 81aa      	LDD  R26,Y+2
00068b 81bb      	LDD  R27,Y+2+1
00068c 940e 0972 	CALL __GETW1P
00068e 23ff      	TST  R31
00068f f02a      	BRMI _0x2060014
000690 91ed      	LD   R30,X+
000691 91fd      	LD   R31,X+
000692 9631      	ADIW R30,1
000693 93fe      	ST   -X,R31
000694 93ee      	ST   -X,R30
                 _0x2060014:
000695 c006      	RJMP _0x2060015
                 _0x2060010:
000696 81aa      	LDD  R26,Y+2
000697 81bb      	LDD  R27,Y+2+1
000698 efef      	LDI  R30,LOW(65535)
000699 efff      	LDI  R31,HIGH(65535)
00069a 93ed      	ST   X+,R30
00069b 93fc      	ST   X,R31
                 _0x2060015:
00069c 8119      	LDD  R17,Y+1
00069d 8108      	LDD  R16,Y+0
00069e c176      	RJMP _0x2120004
                 ; .FEND
                 __print_G103:
                 ; .FSTART __print_G103
00069f 93ba      	ST   -Y,R27
0006a0 93aa      	ST   -Y,R26
0006a1 9726      	SBIW R28,6
0006a2 940e 09a0 	CALL __SAVELOCR6
0006a4 e010      	LDI  R17,0
0006a5 85ac      	LDD  R26,Y+12
0006a6 85bd      	LDD  R27,Y+12+1
0006a7 e0e0      	LDI  R30,LOW(0)
0006a8 e0f0      	LDI  R31,HIGH(0)
0006a9 93ed      	ST   X+,R30
0006aa 93fc      	ST   X,R31
                 _0x2060016:
0006ab 89ea      	LDD  R30,Y+18
0006ac 89fb      	LDD  R31,Y+18+1
0006ad 9631      	ADIW R30,1
0006ae 8bea      	STD  Y+18,R30
0006af 8bfb      	STD  Y+18+1,R31
0006b0 9731      	SBIW R30,1
0006b1 91e4      	LPM  R30,Z
0006b2 2f2e      	MOV  R18,R30
0006b3 30e0      	CPI  R30,0
0006b4 f409      	BRNE PC+2
0006b5 c115      	RJMP _0x2060018
0006b6 2fe1      	MOV  R30,R17
0006b7 30e0      	CPI  R30,0
0006b8 f439      	BRNE _0x206001C
0006b9 3225      	CPI  R18,37
0006ba f411      	BRNE _0x206001D
0006bb e011      	LDI  R17,LOW(1)
0006bc c002      	RJMP _0x206001E
                 _0x206001D:
0006bd 940e 091c 	CALL SUBOPT_0x10
                 _0x206001E:
0006bf c10a      	RJMP _0x206001B
                 _0x206001C:
0006c0 30e1      	CPI  R30,LOW(0x1)
0006c1 f4a9      	BRNE _0x206001F
0006c2 3225      	CPI  R18,37
0006c3 f419      	BRNE _0x2060020
0006c4 940e 091c 	CALL SUBOPT_0x10
0006c6 c102      	RJMP _0x20600CC
                 _0x2060020:
0006c7 e012      	LDI  R17,LOW(2)
0006c8 e040      	LDI  R20,LOW(0)
0006c9 e000      	LDI  R16,LOW(0)
0006ca 322d      	CPI  R18,45
0006cb f411      	BRNE _0x2060021
0006cc e001      	LDI  R16,LOW(1)
0006cd c0fc      	RJMP _0x206001B
                 _0x2060021:
0006ce 322b      	CPI  R18,43
0006cf f411      	BRNE _0x2060022
0006d0 e24b      	LDI  R20,LOW(43)
0006d1 c0f8      	RJMP _0x206001B
                 _0x2060022:
0006d2 3220      	CPI  R18,32
0006d3 f411      	BRNE _0x2060023
0006d4 e240      	LDI  R20,LOW(32)
0006d5 c0f4      	RJMP _0x206001B
                 _0x2060023:
0006d6 c002      	RJMP _0x2060024
                 _0x206001F:
0006d7 30e2      	CPI  R30,LOW(0x2)
0006d8 f439      	BRNE _0x2060025
                 _0x2060024:
0006d9 e050      	LDI  R21,LOW(0)
0006da e013      	LDI  R17,LOW(3)
0006db 3320      	CPI  R18,48
0006dc f411      	BRNE _0x2060026
0006dd 6800      	ORI  R16,LOW(128)
0006de c0eb      	RJMP _0x206001B
                 _0x2060026:
0006df c003      	RJMP _0x2060027
                 _0x2060025:
0006e0 30e3      	CPI  R30,LOW(0x3)
0006e1 f009      	BREQ PC+2
0006e2 c0e7      	RJMP _0x206001B
                 _0x2060027:
0006e3 3320      	CPI  R18,48
0006e4 f010      	BRLO _0x206002A
0006e5 332a      	CPI  R18,58
0006e6 f008      	BRLO _0x206002B
                 _0x206002A:
0006e7 c007      	RJMP _0x2060029
                 _0x206002B:
0006e8 e0aa      	LDI  R26,LOW(10)
0006e9 9f5a      	MUL  R21,R26
0006ea 2d50      	MOV  R21,R0
0006eb 2fe2      	MOV  R30,R18
0006ec 53e0      	SUBI R30,LOW(48)
0006ed 0f5e      	ADD  R21,R30
0006ee c0db      	RJMP _0x206001B
                 _0x2060029:
0006ef 2fe2      	MOV  R30,R18
0006f0 36e3      	CPI  R30,LOW(0x63)
0006f1 f449      	BRNE _0x206002F
0006f2 940e 0923 	CALL SUBOPT_0x11
0006f4 89e8      	LDD  R30,Y+16
0006f5 89f9      	LDD  R31,Y+16+1
0006f6 81a4      	LDD  R26,Z+4
0006f7 93aa      	ST   -Y,R26
0006f8 940e 0929 	CALL SUBOPT_0x12
0006fa c0ce      	RJMP _0x2060030
                 _0x206002F:
0006fb 37e3      	CPI  R30,LOW(0x73)
0006fc f441      	BRNE _0x2060032
0006fd 940e 0923 	CALL SUBOPT_0x11
0006ff 940e 092f 	CALL SUBOPT_0x13
000701 940e 0817 	CALL _strlen
000703 2f1e      	MOV  R17,R30
000704 c00a      	RJMP _0x2060033
                 _0x2060032:
000705 37e0      	CPI  R30,LOW(0x70)
000706 f461      	BRNE _0x2060035
000707 940e 0923 	CALL SUBOPT_0x11
000709 940e 092f 	CALL SUBOPT_0x13
00070b 940e 0823 	CALL _strlenf
00070d 2f1e      	MOV  R17,R30
00070e 6008      	ORI  R16,LOW(8)
                 _0x2060033:
00070f 6002      	ORI  R16,LOW(2)
000710 770f      	ANDI R16,LOW(127)
000711 e030      	LDI  R19,LOW(0)
000712 c034      	RJMP _0x2060036
                 _0x2060035:
000713 36e4      	CPI  R30,LOW(0x64)
000714 f011      	BREQ _0x2060039
000715 36e9      	CPI  R30,LOW(0x69)
000716 f411      	BRNE _0x206003A
                 _0x2060039:
000717 6004      	ORI  R16,LOW(4)
000718 c002      	RJMP _0x206003B
                 _0x206003A:
000719 37e5      	CPI  R30,LOW(0x75)
00071a f431      	BRNE _0x206003C
                 _0x206003B:
00071b e7ea      	LDI  R30,LOW(_tbl10_G103*2)
00071c e0f2      	LDI  R31,HIGH(_tbl10_G103*2)
00071d 83ee      	STD  Y+6,R30
00071e 83ff      	STD  Y+6+1,R31
00071f e015      	LDI  R17,LOW(5)
000720 c00c      	RJMP _0x206003D
                 _0x206003C:
000721 35e8      	CPI  R30,LOW(0x58)
000722 f411      	BRNE _0x206003F
000723 6008      	ORI  R16,LOW(8)
000724 c003      	RJMP _0x2060040
                 _0x206003F:
000725 37e8      	CPI  R30,LOW(0x78)
000726 f009      	BREQ PC+2
000727 c0a1      	RJMP _0x2060071
                 _0x2060040:
000728 e8e4      	LDI  R30,LOW(_tbl16_G103*2)
000729 e0f2      	LDI  R31,HIGH(_tbl16_G103*2)
00072a 83ee      	STD  Y+6,R30
00072b 83ff      	STD  Y+6+1,R31
00072c e014      	LDI  R17,LOW(4)
                 _0x206003D:
00072d ff02      	SBRS R16,2
00072e c014      	RJMP _0x2060042
00072f 940e 0923 	CALL SUBOPT_0x11
000731 940e 0939 	CALL SUBOPT_0x14
000733 85ab      	LDD  R26,Y+11
000734 23aa      	TST  R26
000735 f43a      	BRPL _0x2060043
000736 85ea      	LDD  R30,Y+10
000737 85fb      	LDD  R31,Y+10+1
000738 940e 0956 	CALL __ANEGW1
00073a 87ea      	STD  Y+10,R30
00073b 87fb      	STD  Y+10+1,R31
00073c e24d      	LDI  R20,LOW(45)
                 _0x2060043:
00073d 3040      	CPI  R20,0
00073e f011      	BREQ _0x2060044
00073f 5f1f      	SUBI R17,-LOW(1)
000740 c001      	RJMP _0x2060045
                 _0x2060044:
000741 7f0b      	ANDI R16,LOW(251)
                 _0x2060045:
000742 c004      	RJMP _0x2060046
                 _0x2060042:
000743 940e 0923 	CALL SUBOPT_0x11
000745 940e 0939 	CALL SUBOPT_0x14
                 _0x2060046:
                 _0x2060036:
000747 fd00      	SBRC R16,0
000748 c011      	RJMP _0x2060047
                 _0x2060048:
000749 1715      	CP   R17,R21
00074a f478      	BRSH _0x206004A
00074b ff07      	SBRS R16,7
00074c c008      	RJMP _0x206004B
00074d ff02      	SBRS R16,2
00074e c004      	RJMP _0x206004C
00074f 7f0b      	ANDI R16,LOW(251)
000750 2f24      	MOV  R18,R20
000751 5011      	SUBI R17,LOW(1)
000752 c001      	RJMP _0x206004D
                 _0x206004C:
000753 e320      	LDI  R18,LOW(48)
                 _0x206004D:
000754 c001      	RJMP _0x206004E
                 _0x206004B:
000755 e220      	LDI  R18,LOW(32)
                 _0x206004E:
000756 940e 091c 	CALL SUBOPT_0x10
000758 5051      	SUBI R21,LOW(1)
000759 cfef      	RJMP _0x2060048
                 _0x206004A:
                 _0x2060047:
00075a 2f31      	MOV  R19,R17
00075b ff01      	SBRS R16,1
00075c c017      	RJMP _0x206004F
                 _0x2060050:
00075d 3030      	CPI  R19,0
00075e f0a1      	BREQ _0x2060052
00075f ff03      	SBRS R16,3
000760 c006      	RJMP _0x2060053
000761 81ee      	LDD  R30,Y+6
000762 81ff      	LDD  R31,Y+6+1
000763 9125      	LPM  R18,Z+
000764 83ee      	STD  Y+6,R30
000765 83ff      	STD  Y+6+1,R31
000766 c005      	RJMP _0x2060054
                 _0x2060053:
000767 81ae      	LDD  R26,Y+6
000768 81bf      	LDD  R27,Y+6+1
000769 912d      	LD   R18,X+
00076a 83ae      	STD  Y+6,R26
00076b 83bf      	STD  Y+6+1,R27
                 _0x2060054:
00076c 940e 091c 	CALL SUBOPT_0x10
00076e 3050      	CPI  R21,0
00076f f009      	BREQ _0x2060055
000770 5051      	SUBI R21,LOW(1)
                 _0x2060055:
000771 5031      	SUBI R19,LOW(1)
000772 cfea      	RJMP _0x2060050
                 _0x2060052:
000773 c04b      	RJMP _0x2060056
                 _0x206004F:
                 _0x2060058:
000774 e320      	LDI  R18,LOW(48)
000775 81ee      	LDD  R30,Y+6
000776 81ff      	LDD  R31,Y+6+1
000777 940e 0976 	CALL __GETW1PF
000779 87e8      	STD  Y+8,R30
00077a 87f9      	STD  Y+8+1,R31
00077b 81ee      	LDD  R30,Y+6
00077c 81ff      	LDD  R31,Y+6+1
00077d 9632      	ADIW R30,2
00077e 83ee      	STD  Y+6,R30
00077f 83ff      	STD  Y+6+1,R31
                 _0x206005A:
000780 85e8      	LDD  R30,Y+8
000781 85f9      	LDD  R31,Y+8+1
000782 85aa      	LDD  R26,Y+10
000783 85bb      	LDD  R27,Y+10+1
000784 17ae      	CP   R26,R30
000785 07bf      	CPC  R27,R31
000786 f050      	BRLO _0x206005C
000787 5f2f      	SUBI R18,-LOW(1)
000788 85a8      	LDD  R26,Y+8
000789 85b9      	LDD  R27,Y+8+1
00078a 85ea      	LDD  R30,Y+10
00078b 85fb      	LDD  R31,Y+10+1
00078c 1bea      	SUB  R30,R26
00078d 0bfb      	SBC  R31,R27
00078e 87ea      	STD  Y+10,R30
00078f 87fb      	STD  Y+10+1,R31
000790 cfef      	RJMP _0x206005A
                 _0x206005C:
000791 332a      	CPI  R18,58
000792 f028      	BRLO _0x206005D
000793 ff03      	SBRS R16,3
000794 c002      	RJMP _0x206005E
000795 5f29      	SUBI R18,-LOW(7)
000796 c001      	RJMP _0x206005F
                 _0x206005E:
000797 5d29      	SUBI R18,-LOW(39)
                 _0x206005F:
                 _0x206005D:
000798 fd04      	SBRC R16,4
000799 c01a      	RJMP _0x2060061
00079a 3321      	CPI  R18,49
00079b f420      	BRSH _0x2060063
00079c 85a8      	LDD  R26,Y+8
00079d 85b9      	LDD  R27,Y+8+1
00079e 9711      	SBIW R26,1
00079f f409      	BRNE _0x2060062
                 _0x2060063:
0007a0 c009      	RJMP _0x20600CD
                 _0x2060062:
0007a1 1753      	CP   R21,R19
0007a2 f010      	BRLO _0x2060067
0007a3 ff00      	SBRS R16,0
0007a4 c001      	RJMP _0x2060068
                 _0x2060067:
0007a5 c013      	RJMP _0x2060066
                 _0x2060068:
0007a6 e220      	LDI  R18,LOW(32)
0007a7 ff07      	SBRS R16,7
0007a8 c00b      	RJMP _0x2060069
0007a9 e320      	LDI  R18,LOW(48)
                 _0x20600CD:
0007aa 6100      	ORI  R16,LOW(16)
0007ab ff02      	SBRS R16,2
0007ac c007      	RJMP _0x206006A
0007ad 7f0b      	ANDI R16,LOW(251)
0007ae 934a      	ST   -Y,R20
0007af 940e 0929 	CALL SUBOPT_0x12
0007b1 3050      	CPI  R21,0
0007b2 f009      	BREQ _0x206006B
0007b3 5051      	SUBI R21,LOW(1)
                 _0x206006B:
                 _0x206006A:
                 _0x2060069:
                 _0x2060061:
0007b4 940e 091c 	CALL SUBOPT_0x10
0007b6 3050      	CPI  R21,0
0007b7 f009      	BREQ _0x206006C
0007b8 5051      	SUBI R21,LOW(1)
                 _0x206006C:
                 _0x2060066:
0007b9 5031      	SUBI R19,LOW(1)
0007ba 85a8      	LDD  R26,Y+8
0007bb 85b9      	LDD  R27,Y+8+1
0007bc 9712      	SBIW R26,2
0007bd f008      	BRLO _0x2060059
0007be cfb5      	RJMP _0x2060058
                 _0x2060059:
                 _0x2060056:
0007bf ff00      	SBRS R16,0
0007c0 c008      	RJMP _0x206006D
                 _0x206006E:
0007c1 3050      	CPI  R21,0
0007c2 f031      	BREQ _0x2060070
0007c3 5051      	SUBI R21,LOW(1)
0007c4 e2e0      	LDI  R30,LOW(32)
0007c5 93ea      	ST   -Y,R30
0007c6 940e 0929 	CALL SUBOPT_0x12
0007c8 cff8      	RJMP _0x206006E
                 _0x2060070:
                 _0x206006D:
                 _0x2060071:
                 _0x2060030:
                 _0x20600CC:
0007c9 e010      	LDI  R17,LOW(0)
                 _0x206001B:
0007ca cee0      	RJMP _0x2060016
                 _0x2060018:
0007cb 85ac      	LDD  R26,Y+12
0007cc 85bd      	LDD  R27,Y+12+1
0007cd 940e 0972 	CALL __GETW1P
0007cf 940e 09a7 	CALL __LOADLOCR6
0007d1 9664      	ADIW R28,20
0007d2 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007d3 92ff      	PUSH R15
0007d4 2ef8      	MOV  R15,R24
0007d5 9726      	SBIW R28,6
0007d6 940e 09a2 	CALL __SAVELOCR4
0007d8 940e 0941 	CALL SUBOPT_0x15
0007da 9730      	SBIW R30,0
0007db f419      	BRNE _0x2060072
0007dc efef      	LDI  R30,LOW(65535)
0007dd efff      	LDI  R31,HIGH(65535)
0007de c023      	RJMP _0x2120005
                 _0x2060072:
0007df 01de      	MOVW R26,R28
0007e0 9616      	ADIW R26,6
0007e1 940e 0952 	CALL __ADDW2R15
0007e3 018d      	MOVW R16,R26
0007e4 940e 0941 	CALL SUBOPT_0x15
0007e6 83ee      	STD  Y+6,R30
0007e7 83ff      	STD  Y+6+1,R31
0007e8 e0e0      	LDI  R30,LOW(0)
0007e9 87e8      	STD  Y+8,R30
0007ea 87e9      	STD  Y+8+1,R30
0007eb 01de      	MOVW R26,R28
0007ec 961a      	ADIW R26,10
0007ed 940e 0952 	CALL __ADDW2R15
0007ef 940e 0972 	CALL __GETW1P
0007f1 93fa      	ST   -Y,R31
0007f2 93ea      	ST   -Y,R30
0007f3 931a      	ST   -Y,R17
0007f4 930a      	ST   -Y,R16
0007f5 e6e0      	LDI  R30,LOW(_put_buff_G103)
0007f6 e0f6      	LDI  R31,HIGH(_put_buff_G103)
0007f7 93fa      	ST   -Y,R31
0007f8 93ea      	ST   -Y,R30
0007f9 01de      	MOVW R26,R28
0007fa 961a      	ADIW R26,10
0007fb dea3      	RCALL __print_G103
0007fc 019f      	MOVW R18,R30
0007fd 81ae      	LDD  R26,Y+6
0007fe 81bf      	LDD  R27,Y+6+1
0007ff e0e0      	LDI  R30,LOW(0)
000800 93ec      	ST   X,R30
000801 01f9      	MOVW R30,R18
                 _0x2120005:
000802 940e 09a9 	CALL __LOADLOCR4
000804 962a      	ADIW R28,10
000805 90ff      	POP  R15
000806 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000807 93ba      	ST   -Y,R27
000808 93aa      	ST   -Y,R26
000809 81b9          ldd  r27,y+1
00080a 81a8          ld   r26,y
00080b 9610          adiw r26,0
00080c f031          breq memset1
00080d 81fc          ldd  r31,y+4
00080e 81eb          ldd  r30,y+3
00080f 816a          ldd  r22,y+2
                 memset0:
000810 9361          st   z+,r22
000811 9711          sbiw r26,1
000812 f7e9          brne memset0
                 memset1:
000813 81eb          ldd  r30,y+3
000814 81fc          ldd  r31,y+4
                 _0x2120004:
000815 9625      	ADIW R28,5
000816 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000817 93ba      	ST   -Y,R27
000818 93aa      	ST   -Y,R26
000819 91a9          ld   r26,y+
00081a 91b9          ld   r27,y+
00081b 27ee          clr  r30
00081c 27ff          clr  r31
                 strlen0:
00081d 916d          ld   r22,x+
00081e 2366          tst  r22
00081f f011          breq strlen1
000820 9631          adiw r30,1
000821 cffb          rjmp strlen0
                 strlen1:
000822 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000823 93ba      	ST   -Y,R27
000824 93aa      	ST   -Y,R26
000825 27aa          clr  r26
000826 27bb          clr  r27
000827 91e9          ld   r30,y+
000828 91f9          ld   r31,y+
                 strlenf0:
000829 9005      	lpm  r0,z+
00082a 2000          tst  r0
00082b f011          breq strlenf1
00082c 9611          adiw r26,1
00082d cffb          rjmp strlenf0
                 strlenf1:
00082e 01fd          movw r30,r26
00082f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000830 93aa      	ST   -Y,R26
000831 81e8      	LD   R30,Y
000832 e0f0      	LDI  R31,0
000833 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000834 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000835 91a4      	LPM  R26,Z
000836 81e9      	LDD  R30,Y+1
000837 940e 095a 	CALL __LSLB12
                 _0x2120003:
000839 9622      	ADIW R28,2
00083a 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00083b 93aa      	ST   -Y,R26
00083c 931a      	ST   -Y,R17
00083d 81e9      	LDD  R30,Y+1
00083e 30e7      	CPI  R30,LOW(0x7)
00083f f011      	BREQ _0x20A0007
000840 30ea      	CPI  R30,LOW(0xA)
000841 f419      	BRNE _0x20A0008
                 _0x20A0007:
000842 9110 0500 	LDS  R17,_glcd_state
000844 c009      	RJMP _0x20A0009
                 _0x20A0008:
000845 30e9      	CPI  R30,LOW(0x9)
000846 f419      	BRNE _0x20A000B
                +
000847 9110 0501+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000849 c004      	RJMP _0x20A0009
                 _0x20A000B:
00084a 30e8      	CPI  R30,LOW(0x8)
00084b f4a1      	BRNE _0x20A0005
                +
00084c 9110 0510+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20A0009:
                +
00084e 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000850 30e0      	CPI  R30,0
000851 f049      	BREQ _0x20A000E
000852 3010      	CPI  R17,0
000853 f019      	BREQ _0x20A000F
000854 efef      	LDI  R30,LOW(255)
000855 8118      	LDD  R17,Y+0
000856 c029      	RJMP _0x2120002
                 _0x20A000F:
000857 81ea      	LDD  R30,Y+2
000858 95e0      	COM  R30
000859 8118      	LDD  R17,Y+0
00085a c025      	RJMP _0x2120002
                 _0x20A000E:
00085b 3010      	CPI  R17,0
00085c f419      	BRNE _0x20A0011
00085d e0e0      	LDI  R30,LOW(0)
00085e 8118      	LDD  R17,Y+0
00085f c020      	RJMP _0x2120002
                 _0x20A0011:
                 _0x20A0005:
000860 81ea      	LDD  R30,Y+2
000861 8118      	LDD  R17,Y+0
000862 c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000863 93ba      	ST   -Y,R27
000864 93aa      	ST   -Y,R26
000865 81ea      	LDD  R30,Y+2
000866 30e1      	CPI  R30,LOW(0x1)
000867 f421      	BRNE _0x20A0015
000868 81e8      	LD   R30,Y
000869 81f9      	LDD  R31,Y+1
00086a 91e4      	LPM  R30,Z
00086b c014      	RJMP _0x2120002
                 _0x20A0015:
00086c 30e2      	CPI  R30,LOW(0x2)
00086d f429      	BRNE _0x20A0016
00086e 81a8      	LD   R26,Y
00086f 81b9      	LDD  R27,Y+1
000870 940e 097f 	CALL __EEPROMRDB
000872 c00d      	RJMP _0x2120002
                 _0x20A0016:
000873 30e3      	CPI  R30,LOW(0x3)
000874 f441      	BRNE _0x20A0018
000875 81a8      	LD   R26,Y
000876 81b9      	LDD  R27,Y+1
                +
000877 91e0 0519+LDS R30 , _glcd_state + ( 25 )
000879 91f0 051a+LDS R31 , _glcd_state + ( 25 ) + 1
00087b 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00087c c003      	RJMP _0x2120002
                 _0x20A0018:
00087d 81a8      	LD   R26,Y
00087e 81b9      	LDD  R27,Y+1
00087f 91ec      	LD   R30,X
                 _0x2120002:
000880 9623      	ADIW R28,3
000881 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000882 93aa      	ST   -Y,R26
000883 81eb      	LDD  R30,Y+3
000884 30e0      	CPI  R30,0
000885 f429      	BRNE _0x20A001C
000886 81e8      	LD   R30,Y
000887 81a9      	LDD  R26,Y+1
000888 81ba      	LDD  R27,Y+1+1
000889 93ec      	ST   X,R30
00088a c014      	RJMP _0x20A001B
                 _0x20A001C:
00088b 30e2      	CPI  R30,LOW(0x2)
00088c f431      	BRNE _0x20A001D
00088d 81e8      	LD   R30,Y
00088e 81a9      	LDD  R26,Y+1
00088f 81ba      	LDD  R27,Y+1+1
000890 940e 098b 	CALL __EEPROMWRB
000892 c00c      	RJMP _0x20A001B
                 _0x20A001D:
000893 30e3      	CPI  R30,LOW(0x3)
000894 f451      	BRNE _0x20A001B
000895 81e9      	LDD  R30,Y+1
000896 81fa      	LDD  R31,Y+1+1
000897 93fa      	ST   -Y,R31
000898 93ea      	ST   -Y,R30
000899 81aa      	LDD  R26,Y+2
                +
00089a 91e0 051b+LDS R30 , _glcd_state + ( 27 )
00089c 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
00089e 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20A001B:
                 _0x2120001:
00089f 9624      	ADIW R28,4
0008a0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000500           	.BYTE 0x1D
                 _buffer:
00051d           	.BYTE 0xA
                 _gfx_addr_G100:
000527           	.BYTE 0x2
                 _gfx_buffer_G100:
000529           	.BYTE 0x1F8
                 __seed_G108:
000721           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
0008a1 e2a7      	LDI  R26,LOW(_gfx_addr_G100)
0008a2 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008a3 91ed      	LD   R30,X+
0008a4 91fd      	LD   R31,X+
0008a5 9631      	ADIW R30,1
0008a6 93fe      	ST   -X,R31
0008a7 93ee      	ST   -X,R30
0008a8 9731      	SBIW R30,1
0008a9 5de7      	SUBI R30,LOW(-_gfx_buffer_G100)
0008aa 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0008ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0008ac 93e0 0064 	STS  100,R30
0008ae 91e0 0065 	LDS  R30,101
0008b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0008b1 0fea      	ADD  R30,R26
0008b2 1ffb      	ADC  R31,R27
0008b3 83ee      	STD  Y+6,R30
0008b4 83ff      	STD  Y+6+1,R31
0008b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
0008b6 85ec      	LDD  R30,Y+12
0008b7 93ea      	ST   -Y,R30
0008b8 81ef      	LDD  R30,Y+7
0008b9 85f8      	LDD  R31,Y+7+1
0008ba 9631      	ADIW R30,1
0008bb 83ef      	STD  Y+7,R30
0008bc 87f8      	STD  Y+7+1,R31
0008bd 9731      	SBIW R30,1
0008be 93fa      	ST   -Y,R31
0008bf 93ea      	ST   -Y,R30
0008c0 e0a0      	LDI  R26,LOW(0)
0008c1 940c 0882 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0008c3 930a      	ST   -Y,R16
0008c4 89a8      	LDD  R26,Y+16
0008c5 940c 0219 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
0008c7 85ec      	LDD  R30,Y+12
0008c8 93ea      	ST   -Y,R30
0008c9 81ef      	LDD  R30,Y+7
0008ca 85f8      	LDD  R31,Y+7+1
0008cb 9631      	ADIW R30,1
0008cc 83ef      	STD  Y+7,R30
0008cd 87f8      	STD  Y+7+1,R31
0008ce 9731      	SBIW R30,1
0008cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0008d0 2766      	CLR  R22
0008d1 2777      	CLR  R23
0008d2 01df      	MOVW R26,R30
0008d3 01cb      	MOVW R24,R22
0008d4 940c 0863 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0008d6 935a      	ST   -Y,R21
0008d7 85aa      	LDD  R26,Y+10
0008d8 940c 083b 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0008da 930a      	ST   -Y,R16
0008db 9503      	INC  R16
0008dc 89e8      	LDD  R30,Y+16
0008dd 93ea      	ST   -Y,R30
0008de 935a      	ST   -Y,R21
0008df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
0008e0 2f5e      	MOV  R21,R30
0008e1 85ec      	LDD  R30,Y+12
0008e2 93ea      	ST   -Y,R30
0008e3 81af      	LDD  R26,Y+7
0008e4 85b8      	LDD  R27,Y+7+1
0008e5 2788      	CLR  R24
0008e6 2799      	CLR  R25
0008e7 940e 0863 	CALL _glcd_readmem
0008e9 2e1e      	MOV  R1,R30
0008ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA:
0008eb 930a      	ST   -Y,R16
0008ec 9503      	INC  R16
0008ed 89e8      	LDD  R30,Y+16
0008ee 93ea      	ST   -Y,R30
0008ef 85ee      	LDD  R30,Y+14
0008f0 93ea      	ST   -Y,R30
0008f1 85e9      	LDD  R30,Y+9
0008f2 85fa      	LDD  R31,Y+9+1
0008f3 9631      	ADIW R30,1
0008f4 87e9      	STD  Y+9,R30
0008f5 87fa      	STD  Y+9+1,R31
0008f6 9731      	SBIW R30,1
0008f7 cfd8      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0008f8 93ba      	ST   -Y,R27
0008f9 93aa      	ST   -Y,R26
0008fa 81a8      	LD   R26,Y
0008fb 81b9      	LDD  R27,Y+1
0008fc 940e 099c 	CALL __CPW02
0008fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0008ff 940e 09a0 	CALL __SAVELOCR6
                +
000901 91e0 0504+LDS R30 , _glcd_state + ( 4 )
000903 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000905 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000906 01f8      	MOVW R30,R16
                +
000907 5f0f     +SUBI R16 , LOW ( - 1 )
000908 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000909 9004      	LPM  R0,Z
00090a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
00090b 91e0 0504+LDS R30 , _glcd_state + ( 4 )
00090d 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00090f 9631      	ADIW R30,1
000910 91e4      	LPM  R30,Z
000911 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
000912 93ea      	ST   -Y,R30
000913 e0e0      	LDI  R30,LOW(0)
000914 93ea      	ST   -Y,R30
000915 e0e0      	LDI  R30,LOW(0)
000916 e0f0      	LDI  R31,HIGH(0)
000917 93fa      	ST   -Y,R31
000918 93ea      	ST   -Y,R30
000919 e0a9      	LDI  R26,LOW(9)
00091a 940c 0350 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
00091c 932a      	ST   -Y,R18
00091d 85ad      	LDD  R26,Y+13
00091e 85be      	LDD  R27,Y+13+1
00091f 85ef      	LDD  R30,Y+15
000920 89f8      	LDD  R31,Y+15+1
000921 9509      	ICALL
000922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
000923 89e8      	LDD  R30,Y+16
000924 89f9      	LDD  R31,Y+16+1
000925 9734      	SBIW R30,4
000926 8be8      	STD  Y+16,R30
000927 8bf9      	STD  Y+16+1,R31
000928 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000929 85ad      	LDD  R26,Y+13
00092a 85be      	LDD  R27,Y+13+1
00092b 85ef      	LDD  R30,Y+15
00092c 89f8      	LDD  R31,Y+15+1
00092d 9509      	ICALL
00092e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
00092f 89a8      	LDD  R26,Y+16
000930 89b9      	LDD  R27,Y+16+1
000931 9614      	ADIW R26,4
000932 940e 0972 	CALL __GETW1P
000934 83ee      	STD  Y+6,R30
000935 83ff      	STD  Y+6+1,R31
000936 81ae      	LDD  R26,Y+6
000937 81bf      	LDD  R27,Y+6+1
000938 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
000939 89a8      	LDD  R26,Y+16
00093a 89b9      	LDD  R27,Y+16+1
00093b 9614      	ADIW R26,4
00093c 940e 0972 	CALL __GETW1P
00093e 87ea      	STD  Y+10,R30
00093f 87fb      	STD  Y+10+1,R31
000940 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000941 01de      	MOVW R26,R28
000942 961c      	ADIW R26,12
000943 940e 0952 	CALL __ADDW2R15
000945 940e 0972 	CALL __GETW1P
000947 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000948 9610      	adiw r26,0
000949 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00094a ed80     +LDI R24 , LOW ( 0x7D0 )
00094b e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00094c 9701     +SBIW R24 , 1
00094d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00094e 95a8      	wdr
00094f 9711      	sbiw r26,1
000950 f7c9      	brne __delay_ms0
                 __delay_ms1:
000951 9508      	ret
                 
                 __ADDW2R15:
000952 2400      	CLR  R0
000953 0daf      	ADD  R26,R15
000954 1db0      	ADC  R27,R0
000955 9508      	RET
                 
                 __ANEGW1:
000956 95f1      	NEG  R31
000957 95e1      	NEG  R30
000958 40f0      	SBCI R31,0
000959 9508      	RET
                 
                 __LSLB12:
00095a 23ee      	TST  R30
00095b 2e0e      	MOV  R0,R30
00095c 2fea      	MOV  R30,R26
00095d f019      	BREQ __LSLB12R
                 __LSLB12L:
00095e 0fee      	LSL  R30
00095f 940a      	DEC  R0
000960 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000961 9508      	RET
                 
                 __LSRB12:
000962 23ee      	TST  R30
000963 2e0e      	MOV  R0,R30
000964 2fea      	MOV  R30,R26
000965 f019      	BREQ __LSRB12R
                 __LSRB12L:
000966 95e6      	LSR  R30
000967 940a      	DEC  R0
000968 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000969 9508      	RET
                 
                 __MULW12U:
00096a 9ffa      	MUL  R31,R26
00096b 2df0      	MOV  R31,R0
00096c 9feb      	MUL  R30,R27
00096d 0df0      	ADD  R31,R0
00096e 9fea      	MUL  R30,R26
00096f 2de0      	MOV  R30,R0
000970 0df1      	ADD  R31,R1
000971 9508      	RET
                 
                 __GETW1P:
000972 91ed      	LD   R30,X+
000973 91fc      	LD   R31,X
000974 9711      	SBIW R26,1
000975 9508      	RET
                 
                 __GETW1PF:
000976 9005      	LPM  R0,Z+
000977 91f4      	LPM  R31,Z
000978 2de0      	MOV  R30,R0
000979 9508      	RET
                 
                 __PUTPARD1:
00097a 937a      	ST   -Y,R23
00097b 936a      	ST   -Y,R22
00097c 93fa      	ST   -Y,R31
00097d 93ea      	ST   -Y,R30
00097e 9508      	RET
                 
                 __EEPROMRDB:
00097f 99e1      	SBIC EECR,EEWE
000980 cffe      	RJMP __EEPROMRDB
000981 93ff      	PUSH R31
000982 b7ff      	IN   R31,SREG
000983 94f8      	CLI
000984 bbae      	OUT  EEARL,R26
000985 bbbf      	OUT  EEARH,R27
000986 9ae0      	SBI  EECR,EERE
000987 b3ed      	IN   R30,EEDR
000988 bfff      	OUT  SREG,R31
000989 91ff      	POP  R31
00098a 9508      	RET
                 
                 __EEPROMWRB:
00098b 9be1      	SBIS EECR,EEWE
00098c c002      	RJMP __EEPROMWRB1
00098d 95a8      	WDR
00098e cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00098f b79f      	IN   R25,SREG
000990 94f8      	CLI
000991 bbae      	OUT  EEARL,R26
000992 bbbf      	OUT  EEARH,R27
000993 9ae0      	SBI  EECR,EERE
000994 b38d      	IN   R24,EEDR
000995 17e8      	CP   R30,R24
000996 f019      	BREQ __EEPROMWRB0
000997 bbed      	OUT  EEDR,R30
000998 9ae2      	SBI  EECR,EEMWE
000999 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00099a bf9f      	OUT  SREG,R25
00099b 9508      	RET
                 
                 __CPW02:
00099c 2400      	CLR  R0
00099d 160a      	CP   R0,R26
00099e 060b      	CPC  R0,R27
00099f 9508      	RET
                 
                 __SAVELOCR6:
0009a0 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009a1 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009a2 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009a3 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009a4 931a      	ST   -Y,R17
0009a5 930a      	ST   -Y,R16
0009a6 9508      	RET
                 
                 __LOADLOCR6:
0009a7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009a8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009a9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009aa 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009ab 8119      	LDD  R17,Y+1
0009ac 8108      	LD   R16,Y
0009ad 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  29 r1 :   5 r2 :   0 r3 :   0 r4 :   2 r5 :   0 r6 :   6 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  69 r17:  87 r18:  53 r19:  34 r20:  25 r21:  47 r22:  10 r23:   3 
r24:  18 r25:   6 r26: 271 r27:  87 r28:  27 r29:   1 r30: 659 r31: 156 
x  :  31 y  : 464 z  :  31 
Registers used: 25 out of 35 (71.4%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  20 
adiw  :  41 and   :   8 andi  :  21 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  40 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   4 brmi  :   1 brne  :  74 brpl  :   1 brsh  :  19 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 120 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   7 
cp    :  22 cpc   :   9 cpi   :  92 cpse  :   0 dec   :   4 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   6 inc   :   2 jmp   :  50 ld    :  40 ldd   : 252 
ldi   : 173 lds   :  44 lpm   :  30 lsl   :   2 lsr   :  15 mov   :  88 
movw  :  36 mul   :   6 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   5 ori   :  25 out   :  17 pop   :  12 push  :  12 rcall :  42 
ret   :  47 reti  :   0 rjmp  : 140 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   9 sbi   :   6 sbic  :   2 sbis  :   2 sbiw  :  33 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 148 std   :  66 sts   :  41 sub   :   7 subi  :  41 
swap  :   0 tst   :   6 wdr   :   2 
Instructions used: 59 out of 117 (50.4%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00135c   4418    538   4956  131072   3.8%
[.dseg] 0x000100 0x000725      0    549    549    4096  13.4%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
